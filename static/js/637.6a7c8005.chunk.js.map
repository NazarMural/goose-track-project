{"version":3,"file":"static/js/637.6a7c8005.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","redux/auth/selectors.js","components/AuthForm/AuthForm.jsx","components/AuthLayout/useImage.js","components/AuthLayout/AuthLayout.jsx","components/AuthLayout/AuthLayout.styled.jsx","pages/LoginPage.jsx","assets/images|lazy|/^/.//.*$/|groupOptions: {}|namespace object"],"sourcesContent":["import styled from '@emotion/styled';\nimport { min, tablet } from 'styles/media';\n\nexport const ContainerForm = styled.div`\n  background-color: var(--primary-bg-color);\n  border-radius: 8px;\n  padding: 40px 24px;\n  width: fill-available;\n  width: 335px;\n\n  ${min(tablet)} {\n    padding: 40px 40px;\n    width: 480px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 24px;\n  color: var(--accent-color);\n  box-shadow: 0px 47px 355px 0px #00000012;\n  margin-bottom: 32px;\n\n  ${min(tablet)} {\n    font-size: 24px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const Lable = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LableText = styled.span`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 15px;\n  color: var(--primary-text-color);\n  margin-bottom: 8px;\n\n  ${min(tablet)} {\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nexport const FieldContainer = styled.div`\n  position: relative;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport const FieldStyled = styled.input`\n  display: block;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  padding: 14px;\n  border: 1px solid;\n  border-color: ${({ errors, touched }) =>\n    touched\n      ? errors\n        ? 'var(--error-color);'\n        : 'var(--success-color);'\n      : 'var(--input-border-color);'};\n\n  border-radius: 8px;\n  width: fill-available;\n\n  &:valid {\n    background-color: var(--primary-bg-color) !important;\n  }\n\n  &::placeholder {\n    color: var(--placeholder-color);\n  }\n\n  &:focus-visible {\n    outline: none;\n    border-color: var(--input-border-color-focus);\n  }\n\n  ${min(tablet)} {\n    font-size: 16px;\n    padding: 18px;\n  }\n`;\n\nexport const IconStatus = styled.svg`\n  position: absolute;\n  fill: ${({ error }) =>\n    error ? 'var(--error-color)' : 'var(--success-color)'};\n  height: 22px;\n  width: 22px;\n  right: 14px;\n  top: 50%;\n  transform: translateY(-50%);\n\n  ${min(tablet)} {\n    height: 24px;\n    width: 24px;\n    right: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: var(--invert-text-color);\n  overflow: hidden;\n  transform: translatez(0);\n\n  box-shadow: 4px 2px 16px 0px #88a5bf7a;\n  cursor: pointer;\n\n  margin-top: 32px;\n  padding: 14px 0;\n  border-radius: 16px;\n  background-color: var(--btn-bg-color);\n  border: none;\n\n  &:hover {\n    background-color: var(--btn-bg-hover);\n  }\n`;\n\nexport const ButtonText = styled.span``;\n\nexport const ButtonLoader = styled.span`\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 300%;\n  height: 100%;\n  bottom: auto;\n  margin: auto;\n  z-index: -1;\n  background: linear-gradient(\n    90deg,\n    var(--btn-bg-color) 0%,\n    rgba(255, 38, 38, 0.5) 40%,\n    rgba(255, 38, 38, 0.5) 60%,\n    var(--btn-bg-color) 100%\n  );\n\n  animation: loading 1.5s ease infinite;\n  @keyframes loading {\n    from {\n      transform: translateX(-10%);\n    }\n    to {\n      transform: translateX(110%);\n    }\n  }\n`;\n\nexport const ButtonIcon = styled.svg`\n  height: 22px;\n  width: 22px;\n\n  stroke: var(--invert-text-color);\n  & use {\n    fill: transparent;\n  }\n\n  ${min(tablet)} {\n    height: 24px;\n    width: 24px;\n  }\n`;\n\nexport const ErrorMessageText = styled.span`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  color: ${({ error }) =>\n    error ? 'var(--error-color)' : 'var(--success-color)'};\n  margin-left: 15px;\n  margin-top: 8px;\n`;\n","const selectUser = state => state.auth.user;\nconst selectToken = state => state.auth.token;\nconst selectIsLoggedIn = state => state.auth.isLoggedIn;\nconst selectIsAuthLoading = state => state.auth.isAuthLoading;\n\nexport { selectIsLoggedIn, selectUser, selectToken, selectIsAuthLoading };\n","import { useFormik } from 'formik';\nimport React, { useEffect } from 'react';\nimport {\n  Button,\n  ButtonIcon,\n  ButtonLoader,\n  ButtonText,\n  ContainerForm,\n  ErrorMessageText,\n  FieldContainer,\n  FieldStyled,\n  FormStyled,\n  IconStatus,\n  Lable,\n  LableText,\n  Title,\n} from './AuthForm.styled';\nimport { object, string } from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signInOperation, signUpOperation } from 'redux/auth/operations';\nimport sprite from '../../assets/images/icons/icons.svg';\nimport { selectIsAuthLoading, selectIsLoggedIn } from 'redux/auth/selectors';\nimport { useNavigate } from 'react-router';\nimport { Report } from 'notiflix';\n\nconst SignUpSchema = object().shape({\n  name: string().min(2).max(50).required(),\n\n  email: string().email().required(),\n\n  password: string().required().min(6),\n});\n\nconst LoginUpSchema = object().shape({\n  email: string().email().required(),\n\n  password: string().min(6).required(),\n});\n\nconst AuthForm = ({ login }) => {\n  const isLoading = useSelector(selectIsAuthLoading);\n  const isLogIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    isLogIn && navigate('/calendar/month/');\n  }, [isLogIn, navigate]);\n\n  const dispatch = useDispatch();\n  const {\n    values,\n    errors,\n    touched,\n    resetForm,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = useFormik({\n    initialValues: login\n      ? { email: '', password: '' }\n      : { name: '', email: '', password: '' },\n    validationSchema: login ? LoginUpSchema : SignUpSchema,\n    validateOnChange: false,\n    onSubmit: onSubmit,\n  });\n\n  async function onSubmit(data) {\n    if (!login) {\n      const regRes = await dispatch(signUpOperation(data));\n\n      if (regRes.payload.status) {\n        switch (regRes.payload.status) {\n          case 409:\n            Report.warning('Warning', 'This email in use!!!', 'Okay', {\n              backOverlayClickToClose: true,\n            });\n            break;\n\n          default:\n            Report.failure('Error', 'Server ERROR, please try again.', 'Okay', {\n              backOverlayClickToClose: true,\n            });\n            break;\n        }\n\n        return;\n      }\n    }\n\n    const logInRes = await dispatch(\n      signInOperation({ email: data.email, password: data.password })\n    );\n\n    if (logInRes.payload.status) {\n      switch (logInRes.payload.status) {\n        case 401:\n          Report.warning(\n            'Warning',\n            'Password on email is not correct!',\n            'Okay',\n            {\n              backOverlayClickToClose: true,\n            }\n          );\n          break;\n\n        default:\n          Report.failure('Error', 'Server ERROR, please try again.', 'Okay', {\n            backOverlayClickToClose: true,\n          });\n          break;\n      }\n      return;\n    }\n\n    resetForm();\n  }\n\n  return (\n    <ContainerForm>\n      <Title>{login ? 'Log In' : 'Sign Up'}</Title>\n      <FormStyled onSubmit={handleSubmit}>\n        {!login && (\n          <Lable htmlFor=\"name\">\n            <LableText>Name</LableText>\n\n            <FieldContainer>\n              <FieldStyled\n                value={values.name}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                errors={errors.name}\n                touched={touched.name}\n              />\n              {touched.name && (\n                <IconStatus error={errors.name}>\n                  <use\n                    xlinkHref={`${sprite}${\n                      errors.name ? '#icon-error' : '#icon-done'\n                    }`}\n                  />\n                </IconStatus>\n              )}\n            </FieldContainer>\n\n            {touched.name &&\n              (errors.name ? (\n                <ErrorMessageText error>This is an ERROR name</ErrorMessageText>\n              ) : (\n                <ErrorMessageText>This is an CORRECT name</ErrorMessageText>\n              ))}\n          </Lable>\n        )}\n\n        <Lable htmlFor=\"email\">\n          <LableText>Email</LableText>\n          <FieldContainer>\n            <FieldStyled\n              value={values.email}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              name=\"email\"\n              // value=\"\"\n              autoComplete=\"off\"\n              placeholder=\"Enter email\"\n              errors={errors.email}\n              touched={touched.email}\n            />\n            {touched.email && (\n              <IconStatus>\n                <use\n                  xlinkHref={`${sprite}${\n                    errors.email ? '#icon-error' : '#icon-done'\n                  }`}\n                />\n              </IconStatus>\n            )}\n          </FieldContainer>\n\n          {touched.email &&\n            (errors.email ? (\n              <ErrorMessageText error>This is an ERROR email</ErrorMessageText>\n            ) : (\n              <ErrorMessageText>This is an CORRECT email</ErrorMessageText>\n            ))}\n        </Lable>\n\n        <Lable htmlFor=\"password\">\n          <LableText>Password</LableText>\n          <FieldContainer>\n            <FieldStyled\n              value={values.password}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              errors={errors.password}\n              touched={touched.password}\n            />\n            {touched.password && (\n              <IconStatus>\n                <use\n                  xlinkHref={`${sprite}${\n                    errors.password ? '#icon-error' : '#icon-done'\n                  }`}\n                />\n              </IconStatus>\n            )}\n          </FieldContainer>\n\n          {touched.password &&\n            (errors.password ? (\n              <ErrorMessageText error>\n                This is an ERROR password\n              </ErrorMessageText>\n            ) : (\n              <ErrorMessageText>This is an CORRECT password</ErrorMessageText>\n            ))}\n        </Lable>\n\n        <Button type=\"submit\">\n          {isLoading && <ButtonLoader />}\n          <ButtonText>{login ? 'Log In' : 'Sign Up'}</ButtonText>\n          <ButtonIcon>\n            <use xlinkHref={`${sprite}${'#icon-log-in'}`} />\n          </ButtonIcon>\n        </Button>\n      </FormStyled>\n    </ContainerForm>\n  );\n};\n\nexport default AuthForm;\n","import { useEffect, useState } from 'react';\n\nconst useImage = fileName => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        const response = await import(`../../assets/images/${fileName}`); // change relative path to suit your needs\n        setImage(response.default);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchImage();\n  }, [fileName]);\n\n  return {\n    loading,\n    error,\n    image,\n  };\n};\n\nexport default useImage;\n","import React from 'react';\nimport { Container, Layout } from './AuthLayout.styled';\nimport useImage from './useImage';\n\nconst AuthLayout = ({ children, login, img }) => {\n  const { image } = useImage('registerPage_loginPage/' + img);\n  return (\n    <Layout img={image} login={login}>\n      <Container>{children}</Container>\n    </Layout>\n  );\n};\n\nexport default AuthLayout;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const Layout = styled.div`\n  height: 100vh;\n  width: 100%;\n\n  background-color: var(--auth-bg-color);\n\n  ${min(desktop)} {\n    &::after {\n      content: '';\n\n      background-image: url(${({ img }) => img});\n      background-repeat: no-repeat;\n      position: absolute;\n      bottom: 0;\n\n      ${props => (props.login ? 'right: 0;' : 'left: 0;')}\n      width: ${props => (props.login ? '368px' : '400px')};\n      height: ${props => (props.login ? '521px' : '416px')};\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 14px;\n\n  color: var(--accent-color);\n\n  box-shadow: 0px 47px 355px 0px #00000012;\n  margin-top: 18px;\n\n  ${min(tablet)} {\n    font-size: 18px;\n    line-height: 24px;\n\n    margin-top: 24px;\n  }\n`;\n","import AuthForm from 'components/AuthForm/AuthForm';\nimport AuthLayout from 'components/AuthLayout/AuthLayout';\nimport { LinkStyled } from 'components/AuthLayout/AuthLayout.styled';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return (\n    <AuthLayout login img={'goose_login.png'}>\n      <AuthForm login />\n      <LinkStyled to={'/register'}>Sign up</LinkStyled>\n    </AuthLayout>\n  );\n};\n\nexport default LoginPage;\n","var map = {\n\t\"./GoosePageDay.png\": [\n\t\t2218,\n\t\t218\n\t],\n\t\"./default-avatar.png\": [\n\t\t8140,\n\t\t140\n\t],\n\t\"./icons/desctop_logoGoose.png\": [\n\t\t9776,\n\t\t776\n\t],\n\t\"./icons/icons.svg\": [\n\t\t7149,\n\t\t149\n\t],\n\t\"./icons/mobile_logoGoose.png\": [\n\t\t2593,\n\t\t593\n\t],\n\t\"./icons/tablet_logoGoose.png\": [\n\t\t9417,\n\t\t417\n\t],\n\t\"./mainPage/desktop_GooseMainPage.png\": [\n\t\t5919\n\t],\n\t\"./mainPage/desktop_GooseMainPage@2x.png\": [\n\t\t817\n\t],\n\t\"./mainPage/desktop_calendar.png\": [\n\t\t9496,\n\t\t496\n\t],\n\t\"./mainPage/desktop_calendar@2x.png\": [\n\t\t5633\n\t],\n\t\"./mainPage/desktop_sadebar@2x.png\": [\n\t\t3849\n\t],\n\t\"./mainPage/desktop_sidebar.png\": [\n\t\t3231\n\t],\n\t\"./mainPage/desktop_task_all@2x.png\": [\n\t\t1985\n\t],\n\t\"./mainPage/desktop_tasks_all.png\": [\n\t\t7524\n\t],\n\t\"./mainPage/mobile_calendar.png\": [\n\t\t8343\n\t],\n\t\"./mainPage/mobile_calendar@2x.png\": [\n\t\t4776\n\t],\n\t\"./mainPage/mobile_sidebar.png\": [\n\t\t6632\n\t],\n\t\"./mainPage/mobile_sidebar@2x.png\": [\n\t\t9387\n\t],\n\t\"./mainPage/mobile_task_all.png\": [\n\t\t6913\n\t],\n\t\"./mainPage/mobile_task_all@2x.png\": [\n\t\t7317\n\t],\n\t\"./mainPage/tablet_calendar.png\": [\n\t\t2201\n\t],\n\t\"./mainPage/tablet_calendar@2x.png\": [\n\t\t520\n\t],\n\t\"./mainPage/tablet_sidebar.png\": [\n\t\t3317\n\t],\n\t\"./mainPage/tablet_sidebar@2x.png\": [\n\t\t925\n\t],\n\t\"./mainPage/tablet_task_all.png\": [\n\t\t3350\n\t],\n\t\"./mainPage/tablet_task_all@2x.png\": [\n\t\t4172\n\t],\n\t\"./notFoundPage/notFoundPage.png\": [\n\t\t4947,\n\t\t947\n\t],\n\t\"./notFoundPage/notFoundPage@2x.png\": [\n\t\t5908,\n\t\t908\n\t],\n\t\"./registerPage_loginPage/goose_login.png\": [\n\t\t2722,\n\t\t722\n\t],\n\t\"./registerPage_loginPage/goose_login@2x.png\": [\n\t\t313,\n\t\t313\n\t],\n\t\"./registerPage_loginPage/goose_register.png\": [\n\t\t4220,\n\t\t220\n\t],\n\t\"./registerPage_loginPage/goose_register@2x.png\": [\n\t\t6190,\n\t\t190\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 2358;\nmodule.exports = webpackAsyncContext;"],"names":["ContainerForm","styled","min","tablet","Title","FormStyled","Lable","LableText","FieldContainer","FieldStyled","errors","touched","IconStatus","error","Button","ButtonText","ButtonLoader","ButtonIcon","ErrorMessageText","selectIsLoggedIn","state","auth","isLoggedIn","selectIsAuthLoading","isAuthLoading","SignUpSchema","object","shape","name","string","max","required","email","password","LoginUpSchema","login","isLoading","useSelector","isLogIn","navigate","useNavigate","useEffect","dispatch","useDispatch","useFormik","initialValues","validationSchema","validateOnChange","onSubmit","values","resetForm","handleChange","handleBlur","handleSubmit","data","signUpOperation","regRes","payload","status","Report","backOverlayClickToClose","signInOperation","logInRes","htmlFor","value","onBlur","onChange","type","placeholder","xlinkHref","sprite","autoComplete","fileName","useState","loading","setLoading","setError","image","setImage","fetchImage","response","default","children","img","useImage","Layout","desktop","props","Container","LinkStyled","Link","to","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports"],"sourceRoot":""}