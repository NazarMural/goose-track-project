{"version":3,"file":"static/js/86.d0216cb6.chunk.js","mappings":"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","sources":["components/Header/BurgerBtn/BurgerBtn.styled.jsx","components/Header/BurgerBtn/BurgerBtn.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.styled.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/ThemeToggler/ThemeToggle.styled.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.jsx","hooks/useAuth.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/SideBar/CloseBtn/CloseBtn.styled.jsx","components/SideBar/CloseBtn/CloseBtn.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/GooseImage/GooseImage.styled.jsx","components/SideBar/GooseImage/GooseImage.jsx","components/SideBar/SideBar.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BurgerButtonEl = styled.button`\n  display: block;\n  width: 24px;\n  height: 24px;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { BurgerButtonEl } from './BurgerBtn.styled';\n\n\nexport const BurgerBtn = ({ addSideBar }) => {\n  return (\n    <BurgerButtonEl type=\"button\" onClick={addSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-burger`} />\n      </svg>\n    </BurgerButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min} from 'styles/media';\n\nexport const FeedbackButton = styled.button`\n  display: block;\n  height: 100%;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  background: #3e85f3;\n  color: #ffffff;\n  margin-left: auto;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 16px;\n  ${min(tablet)} {\n    padding: 12px 32px;\n    font-size: 14px;\n    line-height: 18px;\n  }\n`;\n","import { FeedbackButton } from './FeedbackBtn.styled';\n\nexport const FeedbackBtn = () => {\n  return <FeedbackButton type=\"button\">Feedback</FeedbackButton>;\n};\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const UserInfoBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin-left: 18px;\n  ${min(tablet)} {\n    gap: 14px;\n    margin-left: 24px;\n  }\n`;\n\nexport const UserName = styled.p`\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  ${min(tablet)} {\n    font-size: 18px;\n  }\n`;\n\nexport const UserAvatarThumb = styled.div`\n  width: 44px;\n  height: 44px;\n  border-radius: 44px;\n  border: 1.8px solid #3e85f3;\n\n  background: ${props => (props.userAvatarUrl ? props.userAvatarUrl : '')},\n    lightgray 50% / cover no-repeat;\n`;\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const ThemeBtn = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n  svg {\n    fill: #3e85f3;\n    display: block;\n    width: 20px;\n    height: 20px;\n    ${min(tablet)} {\n      width: 32px;\n      height: 32px;\n    }\n  }\n`;\n\n\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { ThemeBtn } from './ThemeToggle.styled';\n\nexport const ThemeToggler = () => {\n  const handleThemeClick = () => {\n    document.documentElement.classList.toggle('dark');\n  };\n  return (\n    <ThemeBtn type=\"button\" onClick={handleThemeClick}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-moon`} />\n      </svg>\n    </ThemeBtn>\n  );\n};\n\n// по спрайту. я в компонент, де треба юзати імпортую цей файл\n\n// import sprite from '../../../images/icons/icons.svg';\n\n// і в місці, де треба вставляти прописую\n\n//  <IconDone>\n//         <use xlinkHref={`${sprite}#icon-Done`} width={40} height={40} />\n//       </IconDone>\n\n// окремо в файлі стилів\n\n// export const IconDone = styled.svg`\n//   margin-top: 10px;\n//   margin-left: 500px;\n//   stroke: pink;\n//   height: 40px;\n//   width: 40px;\n// `;\n","import { UserAvatarThumb, UserInfoBox, UserName } from './UserInfo.styled';\nimport { ThemeToggler } from '../ThemeToggler/ThemeToggler';\nimport { useAuth } from 'hooks/useAuth';\n\nexport const UserInfo = () => {\n  const {\n    user: { name, userAvatar },\n  } = useAuth();\n\n  return (\n    <UserInfoBox>\n      <ThemeToggler />\n      <UserName>{name ? name : 'User'}</UserName>\n      <UserAvatarThumb userAvatarUrl={userAvatar}/>\n    </UserInfoBox>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshingUser,\n} from '../redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshingUser = useSelector(selectIsRefreshingUser);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshingUser,\n    user,\n  };\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\n// ${min(tablet)} {\n//     width: 410px;\n//     margin-bottom: 247px;\n// }\n// ${min(desktop)} {\n//     margin-bottom: 184px;\n// }\n\n// const isShowSideBar = props => {\n//   if (props.showSideBar) return '+125%';\n//   return '-75%';\n// };\n\nexport const HeaderSection = styled.header`\n  display: flex;\n  padding: 24px 20px 0px 20px;\n  max-width: 375px;\n  height: auto;\n  align-items: center;\n  background: #f7f6f9;\n  /* justify-content: space-between; */\n\n  ${min(tablet)} {\n    max-width: 768px;\n    padding: 24px 32px 0px 32px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n    padding: 40px 32px 0px 32px;\n  }\n`;\n\n// export const Thumb = styled.div`\n//   width: 100%;\n//   display: flex;\n//   align-items: center;\n//   /* margin-left: 100px; */\n// `;\n\n// ${min(tablet)} {\n//   padding: 64px 32px;\n// }\n// ${min(desktop)} {\n// padding: 64px 128px;\n// // margin-left: auto;\n// // margin-right: auto;\n// }\n","import { useMediaQuery } from 'react-responsive';\nimport { BurgerBtn } from './BurgerBtn/BurgerBtn';\nimport { FeedbackBtn } from './FeedbackBtn.jsx/FeedbackBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { HeaderSection } from './Header.styled';\n\nexport const Header = ({ addSideBar, showSideBar }) => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1440px)',\n  });\n\n  return (\n    <HeaderSection showSideBar={showSideBar}>\n      {!isDesktop && <BurgerBtn addSideBar={addSideBar} />}\n      <FeedbackBtn />\n      <UserInfo />\n    </HeaderSection>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CloseBtn = styled.button`\n  display: block;\n  /* box-sizing: content-box; */\n  align-items: center;\n  /* align-items: center; */\n  width: 24px;\n  height: 24px;\n  padding: 0px;\n  /* border: none; */\n  background-color: inherit;\n  cursor: pointer;\n  svg {\n    display: block;\n    width: 24px;\n    height: 24px;\n    use {\n      width: 24px;\n      height: 24px;\n      /* stroke: #ffffff;\n      fill: #ffffff; */\n    }\n  }\n\n  width: 24px;\n  height: 24px;\n  fill: #fefefe;\n  stroke: #fefefe;\n`;\n","import { CloseBtn } from './CloseBtn.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const CloseSideBarBtn = ({ removeSideBar }) => {\n  return (\n    <CloseBtn onClick={removeSideBar}>\n      <svg>\n        <use\n          xlinkHref={`${sprite}#icon-x-close`}\n          // width={24}\n          // height={24}\n          stroke=\"var(--primary-text-color)\"\n          fill=\"transparent\"\n        />\n      </svg>\n    </CloseBtn>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogoutButtonEl = styled.button`\n  width: 131px;\n  height: 46px;\n  flex-shrink: 0;\n  border-radius: 16px;\n  border: none;\n  background: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: #fff;\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 24px; /* 133.333% */\n  letter-spacing: -0.36px;\n`;\n","import { LogoutButtonEl } from './LogoutBtn.styled';\n\nexport const LogoutBtn = () => {\n  return <LogoutButtonEl type=\"button\">Logout</LogoutButtonEl>;\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nconst isShowSideBar = props => {\n  if (props.showSideBar) return '0%';\n  return '-110%';\n};\n\nexport const SideBarEl = styled.aside`\n  display: inline-flex;\n  padding: 24px 24px;\n  flex-direction: column;\n  min-width: 241px;\n\n  height: 100vh;\n  background: #fff;\n  z-index: 5;\n  position: absolute;\n  transform: translateX(${isShowSideBar});\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${min(desktop)} {\n    position: static;\n    z-index: 1;\n    transform: translateX(0%);\n  }\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  h2 {\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n      0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 22px;\n    ${min(tablet)} {\n      font-size: 22px;\n    }\n    ${min(desktop)} {\n      font-size: 24px;\n      line-height: 24px;\n    }\n\n    span {\n      color: #3e85f3;\n      font-family: Inter;\n      font-size: 24px;\n      font-style: italic;\n      font-weight: 700;\n      line-height: 24px;\n      margin-left: -2px;\n      margin-right: 2px;\n      ${min(tablet)} {\n        font-size: 22px;\n      }\n      ${min(desktop)} {\n        font-size: 24px;\n        line-height: 24px;\n      }\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const NavTitle = styled.h3`\n  color: rgba(52, 52, 52, 0.5);\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`;\nexport const NavList = styled.ul`\n  list-style: none;\n  li {\n    color: rgba(52, 52, 52, 0.5);\n    font-family: Inter;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport { NavTitle, NavList } from './UserNav.styled';\n\nexport const UserNavigation = ({ removeSideBar }) => {\n  return (\n    <>\n      <NavTitle>User panel</NavTitle>\n      <nav>\n        <NavList>\n          <li>\n            <NavLink to=\"account\" onClick={removeSideBar}>\n              Account\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"calendar\" onClick={removeSideBar}>\n              Calendar\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"statistics\" onClick={removeSideBar}>\n              Statistics\n            </NavLink>\n          </li>\n        </NavList>\n      </nav>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const GooseImg = styled.img`\n  width: 36px;\n  height: 35px;\n\n  ${min(tablet)} {\n    width: 60px;\n    height: 58px;\n  }\n  ${min(desktop)} {\n    width: 71px;\n    height: 68px;\n  }\n`;\n","import desktopGooseMainPage from 'assets/images/mainPage/desktop_GooseMainPage.png';\nimport desktopGooseMainPage2x from 'assets/images/mainPage/desktop_GooseMainPage@2x.png';\nimport { GooseImg } from './GooseImage.styled';\n\nexport const GooseImage = () => {\n  return (\n    <GooseImg\n      src={desktopGooseMainPage}\n      srcSet={`${desktopGooseMainPage} 1x, ${desktopGooseMainPage2x} 2x`}\n      alt=\"The goose invites you to organize your life and manage your team \"\n    />\n  );\n};\n","import { CloseSideBarBtn } from './CloseBtn/CloseBtn';\nimport { LogoutBtn } from './LogoutBtn.jsx/LogoutBtn';\nimport { SideBarEl, TitleBox } from './SideBar.styled';\nimport { UserNavigation } from './UserNav/UserNav';\nimport { GooseImage } from './GooseImage/GooseImage';\n\nexport const SideBar = ({ removeSideBar, showSideBar }) => {\n  return (\n    <SideBarEl showSideBar={showSideBar}>\n      <TitleBox>\n        <GooseImage />\n        <h2>\n          G<span>oo</span>seTrack\n        </h2>\n        <CloseSideBarBtn removeSideBar={removeSideBar} />\n      </TitleBox>\n      <UserNavigation removeSideBar={removeSideBar} />\n      <LogoutBtn />\n    </SideBarEl>\n  );\n};\n","import styled from '@emotion/styled';\n\nimport { tablet, min, desktop } from 'styles/media';\n\n// ${min(tablet)} {\n//     width: 410px;\n//     margin-bottom: 247px;\n// }\n// ${min(desktop)} {\n//     margin-bottom: 184px;\n// }\n\nexport const MainLayoutContainer = styled.div`\n  display: flex;\n  position: relative;\n  margin: 0 auto;\n  height: 100%;\n  max-width: 375px;\n  background: #f7f6f9;\n  overflow-x: hidden;\n  ${min(tablet)} {\n    max-width: 768px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n`;\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n","import { useState } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { SideBar } from 'components/SideBar/SideBar';\nimport { Outlet } from 'react-router-dom';\nimport { MainLayoutContainer } from './MainLayout.styled';\nimport { Container } from './MainLayout.styled';\n\nconst MainLayout = ({ children }) => {\n  const [showSideBar, setShowSideBar] = useState(false);\n  const addSideBar = () => setShowSideBar(true);\n  const removeSideBar = () => setShowSideBar(false);\n\n  return (\n    <MainLayoutContainer>\n      <SideBar removeSideBar={removeSideBar} showSideBar={showSideBar} />\n      <Container>\n        <Header addSideBar={addSideBar} showSideBar={showSideBar} />\n        <Container>\n          {children}\n          <Outlet />\n        </Container>\n      </Container>\n    </MainLayoutContainer>\n  );\n};\n\nexport default MainLayout;\n\n// export const Layout = ({ children }) => {\n//   const dispatch = useDispatch();\n//   const handleLogOut = () => {\n//     dispatch(logOut());\n//   };\n\n//   const {\n//     user: { name },\n//   } = useAuth();\n\n//   const { isLoggedIn } = useAuth();\n\n//   return (\n//     <div className={css.container}>\n//       <header>\n//         <nav className={css.nav}>\n//           <NavLink to=\"/\" className={css.navText}>\n//             Home Page\n//           </NavLink>\n//           {isLoggedIn && (\n//             <NavLink to=\"/contacts\" className={css.navText}>\n//               Contacts\n//             </NavLink>\n//           )}\n//           {isLoggedIn ? (\n//             <div className={css.forLoggeded}>\n//               {/* <NavLink to=\"/contacts\" className={css.navText}>\n//                 Contacts\n//               </NavLink> */}\n//               <p className={css.greating}>\n//                 Hello, <span className={css.userName}>{name}</span>!{' '}\n//               </p>\n//               <button\n//                 type=\"button\"\n//                 onClick={handleLogOut}\n//                 className={css.btnLogout}\n//               >\n//                 LogOut\n//               </button>\n//             </div>\n//           ) : (\n//             <div className={css.authorization}>\n//               <NavLink to=\"/login\" className={css.navText}>\n//                 LogIn\n//               </NavLink>\n//               <NavLink to=\"/register\" className={css.navText}>\n//                 Register\n//               </NavLink>\n//             </div>\n//           )}\n//         </nav>\n//       </header>\n//       <main>{children}</main>\n//       <footer></footer>\n//     </div>\n//   );\n\n// hook useAuth\n//     import { useSelector } from 'react-redux';\n// import {\n//   selectUser,\n//   selectIsLoggedIn,\n//   selectIsRefreshing,\n// } from '../redux/auth/selectors';\n\n// export const useAuth = () => {\n//   const isLoggedIn = useSelector(selectIsLoggedIn);\n//   const isRefreshing = useSelector(selectIsRefreshing);\n//   const user = useSelector(selectUser);\n\n//   return {\n//     isLoggedIn,\n//     isRefreshing,\n//     user,\n//   };\n// };\n\n// Selectors\n// export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\n// export const selectUser = state => state.auth.user;\n\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["BurgerButtonEl","styled","BurgerBtn","addSideBar","type","onClick","xlinkHref","sprite","FeedbackButton","min","tablet","FeedbackBtn","UserInfoBox","UserName","UserAvatarThumb","props","userAvatarUrl","ThemeBtn","ThemeToggler","document","documentElement","classList","toggle","UserInfo","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshingUser","selectIsRefreshingUser","user","selectUser","name","userAvatar","HeaderSection","desktop","Header","showSideBar","isDesktop","useMediaQuery","query","CloseBtn","CloseSideBarBtn","removeSideBar","stroke","fill","LogoutButtonEl","LogoutBtn","SideBarEl","TitleBox","NavTitle","NavList","UserNavigation","to","GooseImg","GooseImage","src","desktopGooseMainPage","srcSet","desktopGooseMainPage2x","alt","SideBar","MainLayoutContainer","Container","children","useState","setShowSideBar"],"sourceRoot":""}