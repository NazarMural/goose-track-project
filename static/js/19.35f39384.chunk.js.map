{"version":3,"file":"static/js/19.35f39384.chunk.js","mappings":"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","sources":["components/Calendar/ChoosedDay/ChoosedDay.styled.jsx","components/Calendar/ChoosedDay/Title/Title.styled.jsx","components/Calendar/ChoosedDay/Title/Title.jsx","components/Calendar/ChoosedDay/Tasks/Tasks.styled.jsx","components/Calendar/ChoosedDay/PopUpReplace/PopUpReplace.styled.jsx","components/Calendar/ChoosedDay/PopUpReplace/PopUpReplace.jsx","components/Calendar/ChoosedDay/Tasks/Tasks.jsx","components/Calendar/ChoosedDay/Head/Head.styled.jsx","components/Calendar/ChoosedDay/Head/Head.jsx","components/Calendar/ChoosedDay/ChoosedDay.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/TaskModal/TaskForm/TaskForm.styled.jsx","components/TaskModal/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","helpers/setDay.js","redux/tasks/selectors.js","redux/theme/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const ContainerMain = styled.div`\n  display: flex;\n  gap: 30px;\n  overflow-x: auto;\n  overflow-y: hidden;\n  padding-bottom: 34px;\n  scroll-snap-type: x mandatory;\n\n  ${min(tablet)} {\n    padding-bottom: 150px;\n    gap: 16px;\n  }\n  ${min(desktop)} {\n    padding-bottom: 0;\n    gap: 27px;\n  }\n  /* width*/\n  &::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background: var(--task-scrollbar-track);\n    border-radius: 12px;\n  }\n\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: var(--task-scrollbar-thumb);\n    border-radius: 12px;\n  }\n\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: var(--task-scrollbar-thumb-hover);\n  }\n`;\n\nexport const ContainerSecond = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  max-height: 432px;\n  height: fit-content;\n  position: relative;\n  background-color: var(--primary-bg-color);\n  border: 1px solid var(--calendar-grid-border);\n  border-radius: 8px;\n  scroll-snap-align: start;\n\n  ${min(tablet)} {\n    max-height: 568px;\n  }\n  ${min(desktop)} {\n  }\n`;\n\nexport const ContainerButtonAddTask = styled.div`\n  border-radius: 8px;\n  padding: 0 20px 20px 20px;\n  ${min(tablet)} {\n    padding: 0 18px 18px 18px;\n  }\n`;\n\nexport const ButtonAddTask = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  background-color: var(--add-task-bg);\n  color: var(--primary-text-color);\n  border: ${({ currentTheme }) =>\n    currentTheme === 'light'\n      ? '1px dashed var(--accent-color)'\n      : '1px solid var(--accent-color)'};\n  border-radius: 8px;\n  padding: 12px 0;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n\n  &:hover:not([disabled]) {\n    background-color: #2b78ef;\n    color: var(--invert-text-color);\n    border: 1px solid var(--accent-color);\n    & svg {\n      stroke: var(--invert-text-color);\n    }\n  }\n\n  &:disabled {\n    cursor: auto;\n  }\n`;\n\nexport const IconButtonAddTask = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--primary-text-color);\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  & use {\n    fill: transparent;\n  }\n`;\n\nexport const ButtonAddTaskText = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n`;\n","import styled from '@emotion/styled';\nimport { min, tablet } from 'styles/media';\n\nexport const ContainerTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 18px 18px 0;\n  margin-bottom: ${({ tasks }) => (tasks.length === 0 ? '35px' : '24px')};\n  ${min(tablet)} {\n    margin-bottom: ${({ tasks }) => (tasks.length === 0 ? '35px' : '28px')};\n    padding: 20px 20px 0;\n  }\n`;\n\nexport const MainTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 20px;\n  margin: 0;\n\n  color: var(--primary-text-color);\n  ${min(tablet)} {\n    font-size: 20px;\n    line-height: 24px;\n  }\n`;\n\nexport const TitleButtonAddTask = styled.button`\n  height: 22px;\n  width: 22px;\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n\n  &:hover:not([disabled]) {\n    & svg {\n      stroke: var(--accent-color);\n    }\n  }\n\n  &:disabled {\n    cursor: auto;\n    & svg {\n      /* stroke: var(--accent-color); */\n    }\n  }\n  ${min(tablet)} {\n    height: 24px;\n    width: 24px;\n  }\n`;\n\nexport const IconAddTask = styled.svg`\n  height: 100%;\n  width: 100%;\n  stroke: var(--primary-text-color);\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  & use {\n    fill: transparent;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContainerTitle,\n  IconAddTask,\n  MainTitle,\n  TitleButtonAddTask,\n} from './Title.styled';\nimport sprite from '../../../../assets/images/icons/icons.svg';\n\nconst Title = ({ type, onAdd, tasks, isDisabledAddTask }) => {\n  return (\n    <ContainerTitle tasks={tasks}>\n      <MainTitle>\n        {(() => {\n          switch (type) {\n            case 'to-do':\n              return 'To do';\n\n            case 'in-progress':\n              return 'In progress';\n            case 'done':\n              return 'Done';\n\n            default:\n              return;\n          }\n        })()}\n      </MainTitle>\n      <TitleButtonAddTask\n        disabled={isDisabledAddTask}\n        onClick={() => onAdd(type)}\n      >\n        <IconAddTask>\n          <use xlinkHref={sprite + '#icon-icon-plus'} />\n        </IconAddTask>\n      </TitleButtonAddTask>\n    </ContainerTitle>\n  );\n};\n\nTitle.propTypes = {\n  type: PropTypes.oneOf(['to-do', 'in-progress', 'done']),\n  onAdd: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n  isDisabledAddTask: PropTypes.bool.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const ListTasks = styled.ul`\n  padding: 0 6px 0 18px;\n  margin-right: 6px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  width: 328px;\n  & #popUpReplace {\n    ${({ tasks }) =>\n      tasks.length === 1 ? 'top: 16px !important; margin-right: 12px;' : null}\n  }\n\n  & li:nth-last-of-type(-n + 1) {\n    margin-bottom: 32px;\n\n    & #popUpReplace {\n      margin-top: 0;\n      top: -12px;\n      ${({ tasks }) => (tasks.length === 1 ? '0' : '-12px')}\n    }\n  }\n  ${min(tablet)} {\n    width: 334px;\n    gap: 18px;\n    padding: 0 8px 0 20px;\n    margin-right: 8px;\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n  }\n  ${min(desktop)} {\n    width: 313px;\n  }\n  /* width*/\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background: var(--task-scrollbar-track);\n    border-radius: 12px;\n  }\n\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: var(--task-scrollbar-thumb);\n    border-radius: 12px;\n  }\n\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: var(--task-scrollbar-thumb-hover);\n  }\n`;\n\nexport const Task = styled.li`\n  position: relative;\n  background-color: var(--page-bg-color);\n  padding: 14px 14px 18px 14px;\n  border: 1px solid var(--calendar-grid-border);\n\n  border-radius: 8px;\n`;\n\nexport const TaskTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--primary-text-color);\n\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin-bottom: 28px;\n`;\n\nexport const ContainerButtonsTask = styled.div`\n  display: flex;\n  align-items: end;\n`;\n\nexport const TaskImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border: 1.8px solid var(--accent-color);\n  border-radius: 50%;\n  margin-right: 8px;\n`;\nexport const TaskImagePlug = styled.svg`\n  width: 32px;\n  height: 32px;\n  border: 1.8px solid var(--accent-color);\n  border-radius: 50%;\n  margin-right: 8px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n`;\n\nexport const TaskButtonPriority = styled.button`\n  height: 20px;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 12px;\n  color: var(--task-priority-color);\n  padding: 4px 12px;\n  background-color: ${({ priority }) => {\n    switch (priority) {\n      case 'low':\n        return 'var(--task-priority-low-bg)';\n      case 'medium':\n        return 'var(--task-priority-medium-bg)';\n      case 'high':\n        return 'var(--task-priority-high-bg)';\n\n      default:\n        return;\n    }\n  }};\n  border: none;\n  border-radius: 4px;\n`;\n\nexport const ContainerIcons = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-left: auto;\n`;\n\nexport const IconTaskButton = styled.button`\n  background-color: transparent;\n  border: none;\n  padding: 0;\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    & svg {\n      stroke: var(--accent-color);\n    }\n  }\n`;\n\nexport const IconTask = styled.svg`\n  height: 14px;\n  width: 14px;\n  stroke: var(--primary-text-color);\n  cursor: pointer;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  & use {\n    fill: transparent;\n  }\n  ${min(tablet)} {\n    height: 16px;\n    width: 16px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ContainerReplaceTask = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  /* gap: 14px; */\n  background-color: var(--task-popup-bg);\n  /* padding: 14px; */\n  border: ${({ currentTheme }) =>\n    currentTheme === 'light' ? 'none' : '1px solid #FFFFFF26'};\n  border-radius: 8px;\n  position: absolute;\n  z-index: 2;\n  margin-top: 12px;\n  right: -1px;\n  box-shadow: 0px 4px 16px 0px #1111111a;\n\n  & div:first-of-type {\n    padding: 14px 14px 7px 14px;\n  }\n  & div:last-of-type {\n    padding: 7px 14px 14px 14px;\n  }\n`;\n\nexport const ReplaceTaskContainerText = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  white-space: nowrap;\n  color: var(--task-popup-color-text);\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n\n  cursor: pointer;\n\n  &:hover {\n    color: ${({ currentTheme }) =>\n      currentTheme === 'light'\n        ? 'var(--invert-text-color)'\n        : 'var(--task-popup-color-text);'};\n    & svg {\n      stroke: ${({ currentTheme }) =>\n        currentTheme === 'light'\n          ? 'var(--invert-text-color)'\n          : 'var(--task-popup-color-text);'};\n    }\n    background-color: var(--accent-color);\n  }\n`;\n\nexport const ReplaceTaskText = styled.span`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 14px;\n`;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport sprite from '../../../../assets/images/icons/icons.svg';\nimport {\n  ContainerReplaceTask,\n  ReplaceTaskContainerText,\n  ReplaceTaskText,\n} from './PopUpReplace.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateTaskOperation } from 'redux/tasks/operations';\nimport { IconTask } from '../Tasks/Tasks.styled';\nimport { Notify } from 'notiflix';\nimport { selectTheme } from 'redux/theme/selectors';\n\nconst PopUpReplace = ({ type, setIsShowPopUpReplace, _id }) => {\n  const dispatch = useDispatch();\n\n  const currentTheme = useSelector(selectTheme);\n\n  useEffect(() => {\n    const onClickClose = ({ target }) => {\n      if (target.id !== 'togglePopUp') {\n        setIsShowPopUpReplace(false);\n      }\n    };\n    const onEscClose = ({ code }) => {\n      if (code === 'Escape') {\n        setIsShowPopUpReplace(false);\n      }\n    };\n\n    document.addEventListener('click', onClickClose);\n    document.addEventListener('keydown', onEscClose);\n\n    return () => {\n      document.removeEventListener('click', onClickClose);\n      document.removeEventListener('keydown', onEscClose);\n    };\n  }, [setIsShowPopUpReplace]);\n\n  const viewCategories = type => {\n    let arrCategories = [];\n    switch (type) {\n      case 'to-do':\n        arrCategories = [\n          {\n            id: 1,\n            typeCategory: 'In progress',\n            typeForOnClick: 'in-progress',\n          },\n          { id: 2, typeCategory: 'Done', typeForOnClick: 'done' },\n        ];\n        break;\n\n      case 'in-progress':\n        arrCategories = [\n          { id: 1, typeCategory: 'To Do', typeForOnClick: 'to-do' },\n          { id: 2, typeCategory: 'Done', typeForOnClick: 'done' },\n        ];\n        break;\n      case 'done':\n        arrCategories = [\n          { id: 1, typeCategory: 'To Do', typeForOnClick: 'to-do' },\n          {\n            id: 2,\n            typeCategory: 'In progress',\n            typeForOnClick: 'in-progress',\n          },\n        ];\n        break;\n\n      default:\n        break;\n    }\n    return arrCategories;\n  };\n\n  const onReplace = async (id, typeCategory) => {\n    const response = await dispatch(\n      updateTaskOperation({\n        taskId: id,\n        updateTaskData: { category: typeCategory },\n      })\n    );\n\n    if (response.payload.status) {\n      Notify.failure('Task don`t replace. Try again');\n      return;\n    }\n  };\n  return (\n    <ContainerReplaceTask id=\"popUpReplace\" currentTheme={currentTheme}>\n      {viewCategories(type).map(({ id, typeCategory, typeForOnClick }) => (\n        <ReplaceTaskContainerText\n          currentTheme={currentTheme}\n          key={id}\n          onClick={() => onReplace(_id, typeForOnClick)}\n        >\n          <ReplaceTaskText>{typeCategory}</ReplaceTaskText>\n          <IconTask>\n            <use xlinkHref={sprite + '#icon-arrow-circle-broken-right'} />\n          </IconTask>\n        </ReplaceTaskContainerText>\n      ))}\n    </ContainerReplaceTask>\n  );\n};\n\nPopUpReplace.propTypes = {\n  type: PropTypes.oneOf(['to-do', 'in-progress', 'done']),\n  setIsShowPopUpReplace: PropTypes.func.isRequired,\n  _id: PropTypes.string.isRequired,\n};\n\nexport default PopUpReplace;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContainerButtonsTask,\n  ContainerIcons,\n  IconTask,\n  IconTaskButton,\n  ListTasks,\n  Task,\n  TaskButtonPriority,\n  TaskImage,\n  TaskImagePlug,\n  TaskTitle,\n} from './Tasks.styled';\nimport PopUpReplace from '../PopUpReplace/PopUpReplace';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTaskOperation } from 'redux/tasks/operations';\n\nimport sprite from '../../../../assets/images/icons/icons.svg';\nimport { selectUserAvatar } from 'redux/auth/selectors';\nimport { Confirm, Notify } from 'notiflix';\n\nconst Tasks = ({\n  type,\n  tasks,\n  onEdit,\n  isShowPopUpReplace,\n  setIsShowPopUpReplace,\n}) => {\n  const dispatch = useDispatch();\n\n  const avatarURL = useSelector(selectUserAvatar);\n\n  const togglePopUpRef = useRef({});\n\n  const toggleShowPopUpReplace = id => {\n    if (isShowPopUpReplace === id) {\n      setIsShowPopUpReplace(false);\n      togglePopUpRef[id].blur();\n    } else {\n      setIsShowPopUpReplace(id);\n    }\n  };\n\n  const onDelete = taskId => {\n    Confirm.show(\n      'Confirm',\n      'Are you sure you want to delete this?',\n      'Delete',\n      'Cancel',\n      async () => {\n        const response = await dispatch(deleteTaskOperation(taskId));\n        if (response.payload.status) {\n          Notify.failure('Task don`t delete. Try again');\n          return;\n        }\n        Notify.success('Task deleted successfully', {\n          success: { background: 'var(--accent-color)' },\n        });\n      },\n      () => {},\n      {\n        messageColor: 'var(--primary-text-color);',\n        backgroundColor: 'var(--primary-bg-color)',\n        okButtonBackground: 'var(--accent-color)',\n        titleColor: 'var(--accent-color)',\n      }\n    );\n  };\n\n  return (\n    <ListTasks tasks={tasks.filter(({ category }) => category === type)}>\n      {tasks.map(task => {\n        const { _id, title, priority, category } = task;\n        if (type !== category) {\n          return '';\n        }\n        return (\n          <Task key={_id}>\n            <TaskTitle>{title}</TaskTitle>\n            <ContainerButtonsTask>\n              {avatarURL ? (\n                <TaskImage src={avatarURL} alt=\"User avatar\" />\n              ) : (\n                <TaskImagePlug>\n                  <use href={`${sprite}#icon-ph_user`}></use>\n                </TaskImagePlug>\n              )}\n              <TaskButtonPriority priority={priority}>\n                {priority.charAt(0).toUpperCase() + priority.slice(1)}\n              </TaskButtonPriority>\n              <ContainerIcons>\n                <IconTaskButton\n                  id=\"togglePopUp\"\n                  ref={ref => (togglePopUpRef[_id] = ref)}\n                  onClick={() => toggleShowPopUpReplace(_id)}\n                >\n                  <IconTask id=\"togglePopUp\">\n                    <use\n                      id=\"togglePopUp\"\n                      xlinkHref={sprite + '#icon-arrow-circle-broken-right'}\n                    />\n                  </IconTask>\n                </IconTaskButton>\n                <IconTaskButton onClick={() => onEdit(task, category)}>\n                  <IconTask>\n                    <use xlinkHref={sprite + '#icon-pencil'} />\n                  </IconTask>\n                </IconTaskButton>\n                <IconTaskButton onClick={() => onDelete(_id)}>\n                  <IconTask>\n                    <use xlinkHref={sprite + '#icon-trash'} />\n                  </IconTask>\n                </IconTaskButton>\n              </ContainerIcons>\n            </ContainerButtonsTask>\n            {isShowPopUpReplace === _id && (\n              <PopUpReplace\n                type={type}\n                setIsShowPopUpReplace={setIsShowPopUpReplace}\n                _id={_id}\n              ></PopUpReplace>\n            )}\n          </Task>\n        );\n      })}\n    </ListTasks>\n  );\n};\n\nTasks.propTypes = {\n  type: PropTypes.oneOf(['to-do', 'in-progress', 'done']),\n  tasks: PropTypes.array.isRequired,\n  isShowPopUpReplace: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  onEdit: PropTypes.func.isRequired,\n  setIsShowPopUpReplace: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import styled from '@emotion/styled';\nimport { min, tablet } from 'styles/media';\n\nexport const HeadContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  border: 1px solid var(--calendar-grid-border);\n  border-radius: 8px;\n  margin-bottom: 14px;\n  overflow: hidden;\n\n  & div:nth-of-type(${({ isSelected }) => isSelected + 1}) {\n    & div {\n      color: #ffffff;\n      background-color: #3e85f3;\n      border-radius: 6px;\n    }\n  }\n`;\n\nexport const HeadCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: var(--cell-background);\n\n  & div {\n    background-color: var(--cell-background);\n\n    border-radius: 6px;\n    transition: all cubic-bezier(0.165, 0.84, 0.44, 1) 0.2s;\n  }\n\n  padding: 16px 0;\n  cursor: pointer;\n  &:hover {\n    & div {\n      opacity: 1;\n      color: #ffffff;\n      background-color: #3e85f3;\n    }\n  }\n`;\n\nexport const NameWeek = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--day-head-week-color-text);\n`;\n\nexport const DayWeekContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 700;\n  width: 20px;\n  height: 22px;\n  color: var(--task-popup-color-text);\n  ${min(tablet)} {\n    font-size: 16px;\n    width: 27px;\n    height: 26px;\n  }\n`;\nexport const DayWeekText = styled.span``;\n","import { useMediaQuery } from 'react-responsive';\nimport moment from 'moment';\nimport {\n  DayWeekContainer,\n  DayWeekText,\n  HeadCell,\n  HeadContainer,\n  NameWeek,\n} from './Head.styled';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { setDay } from 'helpers/setDay';\n\nconst Head = () => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const [isSelected, setIsSelected] = useState('');\n\n  const { currentDay } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const currentDaySlice = currentDay.split('-').slice(2).join('');\n    [...Array(7)].map((_, idx) => {\n      const dayIdx = setDay(currentDay)\n        .startWeek.day(idx + 1)\n        .format('DD');\n      if (dayIdx === currentDaySlice) {\n        setIsSelected(idx);\n      }\n      return null;\n    });\n  }, [currentDay]);\n\n  const onChangeDay = date => {\n    const formatDate = date.format('YYYY-MM-DD');\n    localStorage.setItem('date', formatDate);\n    navigate('././', { relative: `${formatDate}` });\n  };\n\n  return (\n    <HeadContainer isSelected={isSelected}>\n      {[...Array(7)].map((_, idx) => (\n        <HeadCell\n          onClick={() => onChangeDay(setDay(currentDay).startWeek.day(idx + 1))}\n          key={idx}\n        >\n          <NameWeek>\n            {isMobile\n              ? moment()\n                  .day(idx + 1)\n                  .format('ddd')\n                  .charAt(0)\n              : moment()\n                  .day(idx + 1)\n                  .format('ddd')}\n          </NameWeek>\n          <DayWeekContainer>\n            <DayWeekText>\n              {setDay(currentDay)\n                .startWeek.day(idx + 1)\n                .format('D')}\n            </DayWeekText>\n          </DayWeekContainer>\n        </HeadCell>\n      ))}\n    </HeadContainer>\n  );\n};\n\nexport default Head;\n","import {\n  ButtonAddTask,\n  ButtonAddTaskText,\n  ContainerButtonAddTask,\n  ContainerMain,\n  ContainerSecond,\n  IconButtonAddTask,\n} from './ChoosedDay.styled';\n\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport Title from './Title/Title';\nimport Tasks from './Tasks/Tasks';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasksOperation } from 'redux/tasks/operations';\nimport { useParams } from 'react-router-dom';\nimport Head from './Head/Head';\nimport { TaskModal } from 'components/TaskModal/TaskModal';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport moment from 'moment';\nimport { selectTheme } from 'redux/theme/selectors';\n\nconst categories = [\n  { id: 1, type: 'to-do' },\n  { id: 2, type: 'in-progress' },\n  { id: 3, type: 'done' },\n];\n\nconst ChoosedDay = () => {\n  const [tasks, setTasks] = useState([]);\n  const { currentDay } = useParams();\n  const dispatch = useDispatch();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [isShowPopUpReplace, setIsShowPopUpReplace] = useState(false);\n  const [isDisabledAddTask, setIsDisabledAddTask] = useState(false);\n  const [taskForForm, setTaskForForm] = useState({});\n  const [currentCategory, setCurrentCategory] = useState('');\n  const currentTheme = useSelector(selectTheme);\n  const reduxTasks = useSelector(selectTasks);\n\n  useEffect(() => {\n    (async () => {\n      const currentMonth = moment(currentDay).format('YYYY-MM');\n\n      await dispatch(fetchTasksOperation(currentMonth));\n    })();\n  }, [currentDay, dispatch]);\n\n  useEffect(() => {\n    const filteredTasks = reduxTasks\n      ? reduxTasks\n          .filter(({ date }) => date === currentDay)\n          .sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt))\n      : [];\n    setTasks(filteredTasks);\n  }, [currentDay, reduxTasks]);\n\n  useEffect(() => {\n    const nowDay = new Date(moment().format('YYYY-MM-DD'));\n    const paramsDay = new Date(currentDay);\n    if (nowDay === paramsDay) {\n      setIsDisabledAddTask(false);\n      return;\n    } else if (nowDay > paramsDay) {\n      setIsDisabledAddTask(true);\n      return;\n    }\n    setIsDisabledAddTask(false);\n  }, [currentDay]);\n\n  const onAdd = category => {\n    setIsFormOpen(true);\n    setCurrentCategory(category);\n  };\n\n  const onEdit = (task, category) => {\n    setTaskForForm(task);\n    setIsFormOpen(true);\n    setCurrentCategory(category);\n  };\n\n  const closeForm = () => {\n    setCurrentCategory('');\n    setTaskForForm({});\n    setIsFormOpen(false);\n  };\n\n  return (\n    <>\n      <Head />\n      <ContainerMain>\n        {categories.map(({ id, type }) => (\n          <ContainerSecond key={id}>\n            <Title\n              type={type}\n              onAdd={onAdd}\n              isDisabledAddTask={isDisabledAddTask}\n              tasks={tasks.filter(({ category }) => category === type)}\n            />\n            <Tasks\n              type={type}\n              tasks={tasks}\n              onEdit={onEdit}\n              isShowPopUpReplace={isShowPopUpReplace}\n              setIsShowPopUpReplace={setIsShowPopUpReplace}\n            />\n            <ContainerButtonAddTask>\n              <ButtonAddTask\n                onClick={() => onAdd(type)}\n                disabled={isDisabledAddTask}\n                currentTheme={currentTheme}\n              >\n                <IconButtonAddTask>\n                  <use xlinkHref={sprite + '#icon-plus'} />\n                </IconButtonAddTask>\n                <ButtonAddTaskText>Add task</ButtonAddTaskText>\n              </ButtonAddTask>\n            </ContainerButtonAddTask>\n          </ContainerSecond>\n        ))}\n        {isFormOpen && (\n          <TaskModal\n            isOpen={isFormOpen}\n            onClose={closeForm}\n            category={currentCategory}\n            task={{ ...taskForForm, date: currentDay }}\n          />\n        )}\n      </ContainerMain>\n    </>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from '@emotion/styled';\nimport { mobile, max } from 'styles/media';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--primary-bg-color);\n  border: 1px solid #dce3e5cc;\n  border-radius: 8px;\n  box-shadow: 0px 4px 57px 0px rgba(17, 17, 17, 0.05);\n  z-index: 1000;\n  ${max(mobile)} {\n    width: 100%;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  z-index: 999;\n`;\n\nexport const Content = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 24px;\n  padding: 0;\n`;\n\nexport const IconClose = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--input-border-color-focus);\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    stroke: #84828a;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Backdrop, Container, IconClose, CloseButton } from './Modal.styled';\nimport sprite from '../../assets/images/icons/icons.svg';\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  closeButtonPosition = { top: '14px', right: '14px' },\n  children,\n}) => {\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscKeyPress = event => {\n      if (isOpen && event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n    window.addEventListener('keydown', handleEscKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyPress);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Container id=\"modal-container\">\n        <CloseButton onClick={onClose} style={closeButtonPosition}>\n          <IconClose>\n            <use xlinkHref={`${sprite}#icon-x-close`} width={24} height={24} />\n          </IconClose>\n        </CloseButton>\n\n        {children}\n      </Container>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired, \n  onClose: PropTypes.func.isRequired,\n  closeButtonPosition: PropTypes.object,\n  children: PropTypes.node, \n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { min, tablet } from 'styles/media';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  width: 303px;\n  padding: 48px 18px 40px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background-color: var(--task-popup-bg);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n  ${min(tablet)} {\n    width: 396px;\n    padding: 40px 28px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover {\n    & svg {\n      stroke: var(--accent-color);\n    }\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: rgba(17, 17, 17, 0.1);\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: rgba(52, 52, 52, 1);\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16;\n`;\n\nexport const TitleField = styled(Field)`\n  width: 267px;\n  height: 42px;\n  flex-shrink: 0;\n  padding: 12px 14px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(246, 246, 246, 1);\n  color: rgba(52, 52, 52, 1);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  /* cursor: pointer; */\n\n  ${min(tablet)} {\n    height: 46px;\n    width: 340px;\n    padding: 14px 18px;\n    margin-bottom: 18px;\n  }\n\n  &::placeholder {\n    opacity: 1;\n    color: var(--task-popup-color-text);\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n\nexport const FieldContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const TimeField = styled(Field)`\n  width: 126px;\n  height: 42px;\n  flex-shrink: 0;\n  padding: 12px 14px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(246, 246, 246, 1);\n  color: rgba(52, 52, 52, 1);\n  font-size: 14px;\n  line-height: 1.28;\n  &::-webkit-calendar-picker-indicator {\n    opacity: 0;\n    /* cursor: pointer; */\n    width: 32px;\n  }\n\n  ${min(tablet)} {\n    width: 163px;\n    height: 46px;\n    padding: 14px 18px;\n    margin-bottom: 32px;\n    &::-webkit-calendar-picker-indicator {\n      width: 60px;\n    }\n  }\n`;\n\nexport const PriorityContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const PriorityLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  color: rgba(52, 52, 52, 1);\n  font-size: 12px;\n  line-height: 1.16;\n  cursor: pointer;\n\n  &:after {\n    content: '';\n    background: none repeat scroll 0 0 transparent;\n    bottom: -5px;\n    display: block;\n    height: 2px;\n    left: 50%;\n    position: absolute;\n    background: var(--accent-color);\n    transition: width 0.3s ease 0s, left 0.3s ease 0s;\n    width: 0;\n  }\n  &:hover:after {\n    width: 100%;\n    left: 0;\n  }\n\n  ${min(tablet)} {\n    font-size: 14px;\n    line-height: 1.16;\n  }\n`;\n\nexport const PriorityField = styled(Field)`\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  cursor: pointer;\n`;\n\nexport const Blue = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\nexport const BlueLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const Orange = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const OrangeLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const Red = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const RedLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const OperationButton = styled.button`\n  display: flex;\n  width: 135px;\n  height: 42px;\n  padding: 8px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 8px;\n  border: none;\n  background: var(--accent-color);\n  color: var(--invert-text-color);\n  text-align: center;\n  font-size: 14px;\n  line-height: 1.28;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--btn-bg-hover);\n  }\n\n  ${min(tablet)} {\n    width: 182px;\n    height: 48px;\n    padding: 10px 20px;\n  }\n`;\n\nexport const AddIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const CancelButton = styled.button`\n  width: 118px;\n  height: 42px;\n  padding: 10px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--task-btn-cancel);\n  color: var(--primary-text-color);\n  text-align: center;\n  font-size: 14px;\n  line-height: 1.28;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--btn-bg-hover);\n    color: var(--task-popup-bg);\n  }\n\n  ${min(tablet)} {\n    width: 144px;\n    height: 48px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport icons from '../../../assets/images/icons/icons.svg';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport {\n  addTaskOperation,\n  updateTaskOperation,\n} from '../../../redux/tasks/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  OperationButton,\n  AddIcon,\n  Blue,\n  BlueLine,\n  ButtonContainer,\n  CancelButton,\n  CloseButton,\n  CloseIcon,\n  EditIcon,\n  FieldContainer,\n  FormContainer,\n  Label,\n  Orange,\n  OrangeLine,\n  PriorityContainer,\n  PriorityField,\n  PriorityLabel,\n  Red,\n  RedLine,\n  TimeField,\n  TitleField,\n} from './TaskForm.styled';\n\nconst taskFormSchema = Yup.object().shape({\n  title: Yup.string('Enter title')\n    .max(250, 'Text must be at most 250characters')\n    .required('Title is required'),\n  start: Yup.string('Enter start')\n    .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid start time')\n    .required('Start time is required'),\n  end: Yup.string()\n    .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid end time')\n    .when('start', (start, schema) =>\n      schema.test({\n        test: function (end) {\n          if (!start || !end) return true;\n          return end > start;\n        },\n        message: 'End time must be greater than start time',\n      })\n    ),\n});\n\nexport const TaskForm = ({ category, task, onClose }) => {\n  const [operation, setOperation] = useState('create');\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    title: '',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n  };\n\n  useEffect(() => {\n    if (task?._id) setOperation('edit');\n  }, [task]);\n\n  const onSubmit = values => {\n    const taskId = task?._id;\n    const taskData = {\n      title: values.title,\n      start: values.start,\n      end: values.end,\n      priority: values.priority,\n      date: task?.date || moment().format('YYYY-MM-DD'),\n      category: category,\n    };\n\n    if (operation === 'edit') {\n      dispatch(updateTaskOperation({ taskId, updateTaskData: taskData }))\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.info('Task has been edited.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    } else {\n      dispatch(addTaskOperation(taskData))\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.success('Task has been successfully created.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={task || initialValues}\n      validationSchema={taskFormSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values }) => (\n        <FormContainer>\n          <CloseButton\n            type=\"button\"\n            aria-label=\"close button\"\n            onClick={onClose}\n          >\n            <CloseIcon>\n              <use href={icons + '#icon-x-close'}></use>\n            </CloseIcon>\n          </CloseButton>\n          <Form>\n            <Label>\n              Title\n              <ErrorMessage name=\"title\" component=\"div\" />\n              <TitleField type=\"text\" name=\"title\" placeholder=\"Enter text\" />\n            </Label>\n\n            <FieldContainer>\n              <Label>\n                Start\n                <ErrorMessage name=\"start\" component=\"div\" />\n                <TimeField type=\"time\" name=\"start\" />\n              </Label>\n              <Label>\n                End\n                <ErrorMessage name=\"end\" component=\"div\" />\n                <TimeField type=\"time\" name=\"end\" />\n              </Label>\n            </FieldContainer>\n\n            <PriorityContainer role=\"group\">\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"low\" />\n                {values.priority === 'low' ? (\n                  <BlueLine>\n                    <use href={icons + '#icon-ellipse-blue-stroke'}></use>\n                  </BlueLine>\n                ) : (\n                  <Blue>\n                    <use href={icons + '#icon-ellipse-blue'}></use>\n                  </Blue>\n                )}\n                Low\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"medium\" />\n                {values.priority === 'medium' ? (\n                  <OrangeLine>\n                    <use href={icons + '#icon-ellipse-orange-stroke'}></use>\n                  </OrangeLine>\n                ) : (\n                  <Orange>\n                    <use href={icons + '#icon-ellipse-orange'}></use>\n                  </Orange>\n                )}\n                Medium\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"high\" />\n                {values.priority === 'high' ? (\n                  <RedLine>\n                    <use href={icons + '#icon-ellipse-pink-stroke'}></use>\n                  </RedLine>\n                ) : (\n                  <Red>\n                    <use href={icons + '#icon-ellipse-pink'}></use>\n                  </Red>\n                )}\n                High\n              </PriorityLabel>\n            </PriorityContainer>\n\n            <ButtonContainer>\n              {operation === 'edit' ? (\n                <OperationButton type=\"submit\">\n                  <EditIcon stroke=\"#fff\" fill=\"none\">\n                    <use href={icons + '#icon-pencil'}></use>\n                  </EditIcon>\n                  Edit\n                </OperationButton>\n              ) : (\n                <OperationButton type=\"submit\">\n                  <AddIcon stroke=\"#fff\">\n                    <use href={icons + '#icon-plus'}></use>\n                  </AddIcon>\n                  Add\n                </OperationButton>\n              )}\n\n              <CancelButton type=\"button\" onClick={onClose}>\n                Cancel\n              </CancelButton>\n            </ButtonContainer>\n          </Form>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\nimport  Modal  from 'components/Modal/Modal';\nimport { TaskForm } from 'components/TaskModal/TaskForm/TaskForm';\n\nexport const TaskModal = ({ category, task, onClose, isOpen }) => {\n    const closeButtonPosition = { top: '16px', right: '16px' };\n    \n    return (\n        <Modal onClose={onClose} isOpen={isOpen} closeButtonPosition={closeButtonPosition}>\n        <TaskForm onClose={onClose} category={category} task={task} />\n        </Modal>\n    );\n};","import moment from 'moment';\n\nexport const setDay = day => {\n  moment.updateLocale('en', { week: { dow: 1 } });\n  let currentDay;\n  if (!day) {\n    currentDay = moment();\n  } else {\n    currentDay = moment(day).clone();\n  }\n  const startMonth = currentDay.clone().startOf('month'); // початок поточного місяця\n  const endMonth = currentDay.clone().endOf('month'); // кінець поточного місяця\n\n  const startDay = startMonth.clone().startOf('week'); // перший день тижня, в якому починається поточний місяць\n  const endDay = endMonth.clone().endOf('week'); // останній день тижня, в якому закінчується поточний місяць\n\n  const startWeek = currentDay.clone().startOf('week'); // перший день тижня, якому знаходиться обрана дата\n  const endWeek = currentDay.clone().endOf('week'); // останній  день тижня, якому знаходиться обрана дата\n\n  const dayDifference = endDay.diff(startDay, 'days') + 1; // кількість днів, що відображаються на календарі (ячейки)\n  const weeks = dayDifference / 7; //кількість тижнів в місяці (рядки)\n\n  const startCalendar = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(dayDifference)].map(() =>\n    startCalendar.add(1, 'day').clone()\n  );\n\n  const dates = {\n    startMonth,\n    endMonth,\n    startDay,\n    endDay,\n    startWeek,\n    endWeek,\n    dayDifference,\n    weeks,\n    daysArray,\n  };\n  return dates;\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectTasksState = state => state.tasks;\nconst selectTasks = state => state.tasks.tasks;\nconst selectTasksError = state => state.tasks.error;\nconst selectIsTasksLoading = state => state.tasks.isTasksLoading;\nconst selectIsFetchingTasks = state => state.tasks.isFetchingTasks;\nconst selectIsAdding = state => state.tasks.isAdding;\nconst selectIsDeleting = state => state.tasks.isDeleting;\nconst selectIsUpdating = state => state.tasks.isUpdating;\nconst selectCurrentTaskId = state => state.tasks.currentTaskId;\n\nconst selectTaskOperations = createSelector(\n  [selectIsFetchingTasks, selectIsAdding, selectIsDeleting, selectIsUpdating],\n  (isFetchingTasks, isAdding, isDeleting, isUpdating) => ({\n    isFetchingTasks,\n    isAdding,\n    isDeleting,\n    isUpdating,\n  })\n);\n\nexport {\n  selectTasks,\n  selectCurrentTaskId,\n  selectTasksError,\n  selectIsAdding,\n  selectIsDeleting,\n  selectIsTasksLoading,\n  selectIsUpdating,\n  selectIsFetchingTasks,\n  selectTaskOperations,\n  selectTasksState,\n};\n","const selectTheme = state => state.theme.theme;\n\nexport { selectTheme };\n"],"names":["ContainerMain","styled","min","tablet","desktop","ContainerSecond","ContainerButtonAddTask","ButtonAddTask","currentTheme","IconButtonAddTask","ButtonAddTaskText","ContainerTitle","tasks","length","MainTitle","TitleButtonAddTask","IconAddTask","type","onAdd","isDisabledAddTask","disabled","onClick","xlinkHref","sprite","ListTasks","Task","TaskTitle","ContainerButtonsTask","TaskImage","TaskImagePlug","TaskButtonPriority","priority","ContainerIcons","IconTaskButton","IconTask","ContainerReplaceTask","ReplaceTaskContainerText","ReplaceTaskText","setIsShowPopUpReplace","_id","dispatch","useDispatch","useSelector","selectTheme","useEffect","onClickClose","target","id","onEscClose","code","document","addEventListener","removeEventListener","onReplace","typeCategory","updateTaskOperation","taskId","updateTaskData","category","payload","status","Notify","arrCategories","typeForOnClick","viewCategories","map","onEdit","isShowPopUpReplace","avatarURL","selectUserAvatar","togglePopUpRef","useRef","filter","task","title","src","alt","href","charAt","toUpperCase","slice","ref","blur","Confirm","deleteTaskOperation","success","background","messageColor","backgroundColor","okButtonBackground","titleColor","HeadContainer","isSelected","HeadCell","NameWeek","DayWeekContainer","DayWeekText","isMobile","useMediaQuery","maxWidth","useState","setIsSelected","currentDay","useParams","navigate","useNavigate","currentDaySlice","split","join","Array","_","idx","setDay","startWeek","day","format","date","formatDate","localStorage","setItem","relative","onChangeDay","moment","categories","setTasks","isFormOpen","setIsFormOpen","setIsDisabledAddTask","taskForForm","setTaskForForm","currentCategory","setCurrentCategory","reduxTasks","selectTasks","currentMonth","fetchTasksOperation","filteredTasks","sort","a","b","Date","updatedAt","nowDay","paramsDay","TaskModal","isOpen","onClose","Container","max","mobile","Backdrop","CloseButton","IconClose","closeButtonPosition","top","right","children","handleEscKeyPress","event","key","body","style","overflow","window","ReactDOM","currentTarget","width","height","getElementById","FormContainer","CloseIcon","Label","TitleField","Field","FieldContainer","TimeField","PriorityContainer","PriorityLabel","PriorityField","Blue","BlueLine","Orange","OrangeLine","Red","RedLine","ButtonContainer","OperationButton","AddIcon","EditIcon","CancelButton","taskFormSchema","Yup","shape","required","start","matches","end","when","schema","test","message","TaskForm","operation","setOperation","initialValues","validationSchema","onSubmit","values","taskData","then","data","error","Error","catch","addTaskOperation","icons","name","component","placeholder","role","value","stroke","fill","Modal","week","dow","startMonth","clone","startOf","endMonth","endOf","startDay","endDay","endWeek","dayDifference","diff","weeks","startCalendar","subtract","daysArray","add","state","selectIsUpdating","isUpdating","createSelector","isFetchingTasks","isAdding","isDeleting","theme"],"sourceRoot":""}