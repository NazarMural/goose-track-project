{"version":3,"file":"static/js/467.defc6a2d.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/TaskModal/TaskForm/TaskForm.styled.jsx","components/TaskModal/TaskValidateMessage/TaskValidateMessage.styled.jsx","components/TaskModal/TaskValidateMessage/TaskValidateMessage.jsx","components/TaskModal/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","helpers/setDay.js","redux/tasks/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mobile, max } from 'styles/media';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--primary-bg-color);\n  border: 1px solid #dce3e5cc;\n  border-radius: 8px;\n  box-shadow: 0px 4px 57px 0px rgba(17, 17, 17, 0.05);\n  z-index: 1000;\n  ${max(mobile)} {\n    width: 100%;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  z-index: 999;\n`;\n\nexport const Content = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 24px;\n  padding: 0;\n`;\n\nexport const IconClose = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--close-color);\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    stroke: #84828a;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Backdrop, Container, IconClose, CloseButton } from './Modal.styled';\nimport sprite from '../../assets/images/icons/icons.svg';\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  closeButtonPosition = { top: '14px', right: '14px' },\n  children,\n}) => {\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscKeyPress = event => {\n      if (isOpen && event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n    window.addEventListener('keydown', handleEscKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyPress);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Container id=\"modal-container\">\n        <CloseButton onClick={onClose} style={closeButtonPosition}>\n          <IconClose>\n            <use xlinkHref={`${sprite}#icon-x-close`} width={24} height={24} />\n          </IconClose>\n        </CloseButton>\n        {children}\n      </Container>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired, \n  onClose: PropTypes.func.isRequired,\n  closeButtonPosition: PropTypes.object,\n  children: PropTypes.node, \n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { min, mobile, tablet } from 'styles/media';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  /* width: 303px; */\n  max-width: 100%;\n  padding: 48px 18px 40px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background-color: var(--task-popup-bg);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n  ${min(mobile)} {\n    width: 303px;\n  }\n  ${min(tablet)} {\n    width: 396px;\n    padding: 40px 28px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  & svg {\n    stroke: var(--close-color);\n  }\n\n  &:hover {\n    & svg {\n      stroke: var(--accent-color);\n    }\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: rgba(17, 17, 17, 0.1);\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: var(--sidebar-navTitle-color);\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16;\n  position: relative;\n`;\n\nexport const TitleField = styled(Field)`\n  width: 267px;\n  height: 42px;\n  flex-shrink: 0;\n  padding: 12px 14px;\n  /* margin-bottom: 16px; */\n  border-radius: 8px;\n  background-color: var(--textarea-background);\n  border: 1px solid var(--task-form-border);\n  color: rgba(52, 52, 52, 1);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  /* cursor: pointer; */\n\n  ${min(tablet)} {\n    height: 46px;\n    width: 340px;\n    padding: 14px 18px;\n    /* margin-bottom: 18px; */\n  }\n\n  &::placeholder {\n    opacity: 1;\n    color: var(--task-popup-color-text);\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n\nexport const FieldContainer = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 16px;\n  /* border: 1px solid var(--input-border-color); */\n\n  ${min(tablet)} {\n    margin-bottom: 28px;\n  }\n`;\n\nexport const TimeField = styled(Field)`\n  width: 126px;\n  height: 42px;\n  flex-shrink: 0;\n  padding: 12px 14px;\n  /* margin-bottom: 16px; */\n  border-radius: 8px;\n  /* border: none; */\n  /* background-color: rgba(246, 246, 246, 1); */\n  background-color: var(--textarea-background);\n  border: 1px solid var(--task-form-border);\n  color: var(--task-popup-color-text);\n  font-size: 14px;\n  line-height: 1.28;\n  &::-webkit-calendar-picker-indicator {\n    opacity: 0;\n    /* cursor: pointer; */\n    width: 32px;\n  }\n\n  ${min(tablet)} {\n    width: 163px;\n    height: 46px;\n    padding: 14px 18px;\n    /* margin-bottom: 32px; */\n    &::-webkit-calendar-picker-indicator {\n      width: 60px;\n    }\n  }\n`;\n\nexport const PriorityContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const PriorityLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  color: var(--task-popup-color-text);\n  font-size: 12px;\n  line-height: 1.16;\n  cursor: pointer;\n\n  &:after {\n    content: '';\n    background: none repeat scroll 0 0 transparent;\n    bottom: -5px;\n    display: block;\n    height: 2px;\n    left: 50%;\n    position: absolute;\n    background: var(--accent-color);\n    transition: width 0.3s ease 0s, left 0.3s ease 0s;\n    width: 0;\n  }\n  &:hover:after {\n    width: 100%;\n    left: 0;\n  }\n\n  ${min(tablet)} {\n    font-size: 14px;\n    line-height: 1.16;\n  }\n`;\n\nexport const PriorityField = styled(Field)`\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  cursor: pointer;\n`;\n\nexport const Blue = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\nexport const BlueLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const Orange = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const OrangeLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const Red = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const RedLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const OperationButton = styled.button`\n  display: flex;\n  width: 135px;\n  height: 42px;\n  padding: 8px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 8px;\n  border: none;\n  background: var(--accent-color);\n  color: var(--invert-text-color);\n  text-align: center;\n  font-size: 14px;\n  line-height: 1.28;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--btn-bg-hover);\n  }\n\n  ${min(tablet)} {\n    width: 182px;\n    height: 48px;\n    padding: 10px 20px;\n  }\n`;\n\nexport const AddIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const CancelButton = styled.button`\n  width: 118px;\n  height: 42px;\n  padding: 10px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--task-btn-cancel);\n  color: var(--input-border-color-focus);\n  text-align: center;\n  font-size: 14px;\n  line-height: 1.28;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--btn-bg-hover);\n    color: var(--task-popup-bg);\n  }\n\n  ${min(tablet)} {\n    width: 144px;\n    height: 48px;\n  }\n`;\n\nexport const TitleFieldContainer = styled.div`\n  margin-bottom: 16px;\n\n  ${min(tablet)} {\n    margin-bottom: 18px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { min, tablet } from 'styles/media';\n\nexport const MessageText = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  color: ${({ error }) =>\n    error ? 'var(--error-color)' : 'var(--success-color)'};\n  margin-top: 8px;\n`;\n\nexport const TasksIconStatus = styled.svg`\n  position: absolute;\n  fill: ${({ error }) =>\n    error ? 'var(--error-color)' : 'var(--success-color)'};\n  height: 22px;\n  width: 22px;\n  top: 43px;\n  right: 14px;\n  transform: translateY(-50%);\n\n  ${min(tablet)} {\n    height: 24px;\n    width: 24px;\n    top: 45px;\n    right: 18px;\n  }\n`;","import sprite from '../../../assets/images/icons/icons.svg';\nimport {MessageText, TasksIconStatus} from './TaskValidateMessage.styled';\n\nexport const TaskValidateMessage = ({ errors, touched, field = '' }) => {\n  return (\n    <>\n      {touched && (\n        <>\n          <MessageText error={errors}>{errors || `CORRECT ${field}`}</MessageText>\n          <TasksIconStatus error={errors}>\n            <use xlinkHref={`${sprite}${errors ? '#icon-error' : '#icon-done'}`} />\n          </TasksIconStatus>\n        </>\n      )}\n    </>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport icons from '../../../assets/images/icons/icons.svg';\nimport * as Yup from 'yup';\n\nimport { addTaskOperation, updateTaskOperation } from '../../../redux/tasks/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  OperationButton,\n  AddIcon,\n  Blue,\n  BlueLine,\n  ButtonContainer,\n  CancelButton,\n  CloseButton,\n  CloseIcon,\n  EditIcon,\n  FieldContainer,\n  FormContainer,\n  Label,\n  Orange,\n  OrangeLine,\n  PriorityContainer,\n  PriorityField,\n  PriorityLabel,\n  Red,\n  RedLine,\n  TimeField,\n  TitleField,\n  TitleFieldContainer,\n} from './TaskForm.styled';\nimport { TaskValidateMessage } from '../TaskValidateMessage/TaskValidateMessage';\n\nconst taskFormSchema = Yup.object().shape({\n  title: Yup.string('Enter title').max(250, 'Text must be at most 250characters').required('Title is required'),\n  start: Yup.string('Enter start')\n    .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid start time')\n    .required('Start time is required'),\n  end: Yup.string()\n    .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid end time')\n    .when('start', (start, schema) =>\n      schema.test({\n        test: function (end) {\n          if (!start || !end) return true;\n          return end > start;\n        },\n        message: 'End time must be greater than start time',\n      })\n    ),\n});\n\nexport const TaskForm = ({ category, task = {}, onClose }) => {\n  const [operation, setOperation] = useState('create');\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    title: '',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n  };\n\n  useEffect(() => {\n    if (task?._id) setOperation('edit');\n  }, [task]);\n\n  const onSubmit = values => {\n    const taskId = task?._id;\n    const taskData = {\n      title: values.title,\n      start: values.start,\n      end: values.end,\n      priority: values.priority,\n      date: task?.date,\n      category: category,\n    };\n\n    if (operation === 'edit') {\n      dispatch(\n        updateTaskOperation({\n          taskId,\n          updateTaskData: taskData,\n        })\n      )\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.info('Task has been edited.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    } else {\n      dispatch(addTaskOperation(taskData))\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.success('Task has been successfully created.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        ...initialValues,\n        ...task,\n      }}\n      validationSchema={taskFormSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors, touched }) => (\n        <FormContainer>\n          <CloseButton\n            type=\"button\"\n            aria-label=\"close button\"\n            onClick={onClose}\n          >\n            <CloseIcon>\n              <use href={icons + '#icon-x-close'}></use>\n            </CloseIcon>\n          </CloseButton>\n          <Form>\n            <TitleFieldContainer>\n              <Label>\n                Title\n                <TitleField type=\"text\" name=\"title\" placeholder=\"Enter text\" />\n                <TaskValidateMessage\n                  errors={errors.title}\n                  touched={touched?.title}\n                  field=\"title\"\n                />\n              </Label>\n            </TitleFieldContainer>\n\n            <FieldContainer>\n              <Label>\n                Start\n                <TimeField type=\"time\" name=\"start\" />\n                <TaskValidateMessage\n                  errors={errors.start}\n                  touched={touched?.start}\n                  field=\"start time\"\n                />\n              </Label>\n              <Label>\n                End\n                <TimeField type=\"time\" name=\"end\" />\n                <TaskValidateMessage\n                  errors={errors.end}\n                  touched={touched?.end}\n                  field=\"end time\"\n                />\n              </Label>\n            </FieldContainer>\n\n            <PriorityContainer role=\"group\">\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"low\" />\n                {values.priority === 'low' ? (\n                  <BlueLine>\n                    <use href={icons + '#icon-ellipse-blue-stroke'}></use>\n                  </BlueLine>\n                ) : (\n                  <Blue>\n                    <use href={icons + '#icon-ellipse-blue'}></use>\n                  </Blue>\n                )}\n                Low\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"medium\" />\n                {values.priority === 'medium' ? (\n                  <OrangeLine>\n                    <use href={icons + '#icon-ellipse-orange-stroke'}></use>\n                  </OrangeLine>\n                ) : (\n                  <Orange>\n                    <use href={icons + '#icon-ellipse-orange'}></use>\n                  </Orange>\n                )}\n                Medium\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"high\" />\n                {values.priority === 'high' ? (\n                  <RedLine>\n                    <use href={icons + '#icon-ellipse-pink-stroke'}></use>\n                  </RedLine>\n                ) : (\n                  <Red>\n                    <use href={icons + '#icon-ellipse-pink'}></use>\n                  </Red>\n                )}\n                High\n              </PriorityLabel>\n            </PriorityContainer>\n\n            <ButtonContainer>\n              {operation === 'edit' ? (\n                <OperationButton type=\"submit\">\n                  <EditIcon stroke=\"#fff\" fill=\"none\">\n                    <use href={icons + '#icon-pencil'}></use>\n                  </EditIcon>\n                  Edit\n                </OperationButton>\n              ) : (\n                <OperationButton type=\"submit\">\n                  <AddIcon stroke=\"#fff\">\n                    <use href={icons + '#icon-plus'}></use>\n                  </AddIcon>\n                  Add\n                </OperationButton>\n              )}\n\n              <CancelButton type=\"button\" onClick={onClose}>\n                Cancel\n              </CancelButton>\n            </ButtonContainer>\n          </Form>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\nimport  Modal  from 'components/Modal/Modal';\nimport { TaskForm } from 'components/TaskModal/TaskForm/TaskForm';\n\nexport const TaskModal = ({ category, task, onClose, isOpen }) => {\n    const closeButtonPosition = { top: '16px', right: '16px' };\n    \n    return (\n        <Modal onClose={onClose} isOpen={isOpen} closeButtonPosition={closeButtonPosition}>\n        <TaskForm onClose={onClose} category={category} task={task} />\n        </Modal>\n    );\n};","import moment from 'moment';\n\nexport const setDay = day => {\n  moment.updateLocale('en', { week: { dow: 1 } });\n  let currentDay;\n  if (!day) {\n    currentDay = moment();\n  } else {\n    currentDay = moment(day).clone();\n  }\n  const startMonth = currentDay.clone().startOf('month'); // початок поточного місяця\n  const endMonth = currentDay.clone().endOf('month'); // кінець поточного місяця\n\n  const startDay = startMonth.clone().startOf('week'); // перший день тижня, в якому починається поточний місяць\n  const endDay = endMonth.clone().endOf('week'); // останній день тижня, в якому закінчується поточний місяць\n\n  const startWeek = currentDay.clone().startOf('week'); // перший день тижня, якому знаходиться обрана дата\n  const endWeek = currentDay.clone().endOf('week'); // останній  день тижня, якому знаходиться обрана дата\n\n  const dayDifference = endDay.diff(startDay, 'days') + 1; // кількість днів, що відображаються на календарі (ячейки)\n  const weeks = dayDifference / 7; //кількість тижнів в місяці (рядки)\n\n  const startCalendar = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(dayDifference)].map(() =>\n    startCalendar.add(1, 'day').clone()\n  );\n\n  const dates = {\n    startMonth,\n    endMonth,\n    startDay,\n    endDay,\n    startWeek,\n    endWeek,\n    dayDifference,\n    weeks,\n    daysArray,\n  };\n  return dates;\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectTasksState = state => state.tasks;\nconst selectTasks = state => state.tasks.tasks;\nconst selectTasksError = state => state.tasks.error;\nconst selectIsTasksLoading = state => state.tasks.isTasksLoading;\nconst selectIsFetchingTasks = state => state.tasks.isFetchingTasks;\nconst selectIsAdding = state => state.tasks.isAdding;\nconst selectIsDeleting = state => state.tasks.isDeleting;\nconst selectIsUpdating = state => state.tasks.isUpdating;\nconst selectCurrentTaskId = state => state.tasks.currentTaskId;\n\nconst selectTaskOperations = createSelector(\n  [selectIsFetchingTasks, selectIsAdding, selectIsDeleting, selectIsUpdating],\n  (isFetchingTasks, isAdding, isDeleting, isUpdating) => ({\n    isFetchingTasks,\n    isAdding,\n    isDeleting,\n    isUpdating,\n  })\n);\n\nexport {\n  selectTasks,\n  selectCurrentTaskId,\n  selectTasksError,\n  selectIsAdding,\n  selectIsDeleting,\n  selectIsTasksLoading,\n  selectIsUpdating,\n  selectIsFetchingTasks,\n  selectTaskOperations,\n  selectTasksState,\n};\n"],"names":["Container","styled","max","mobile","Backdrop","CloseButton","IconClose","isOpen","onClose","closeButtonPosition","top","right","children","useEffect","handleEscKeyPress","event","key","document","body","style","overflow","window","addEventListener","removeEventListener","ReactDOM","onClick","target","currentTarget","id","xlinkHref","sprite","width","height","getElementById","FormContainer","min","tablet","CloseIcon","Label","TitleField","Field","FieldContainer","TimeField","PriorityContainer","PriorityLabel","PriorityField","Blue","BlueLine","Orange","OrangeLine","Red","RedLine","ButtonContainer","OperationButton","AddIcon","EditIcon","CancelButton","TitleFieldContainer","MessageText","error","TasksIconStatus","TaskValidateMessage","errors","touched","field","taskFormSchema","Yup","shape","title","required","start","matches","end","when","schema","test","message","TaskForm","category","task","useState","operation","setOperation","dispatch","useDispatch","_id","initialValues","priority","validationSchema","onSubmit","values","taskId","taskData","date","updateTaskOperation","updateTaskData","then","data","Error","payload","Notify","catch","addTaskOperation","type","href","icons","name","placeholder","role","value","stroke","fill","TaskModal","Modal","setDay","day","currentDay","moment","week","dow","startMonth","clone","startOf","endMonth","endOf","startDay","endDay","startWeek","endWeek","dayDifference","diff","weeks","startCalendar","subtract","daysArray","Array","map","add","selectTasks","state","tasks","selectIsUpdating","isUpdating","createSelector","isFetchingTasks","isAdding","isDeleting"],"sourceRoot":""}