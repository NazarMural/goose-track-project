{"version":3,"file":"static/js/130.c5f71c15.chunk.js","mappings":"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","sources":["components/MainContainer/MainContainer.styled.jsx","components/MainContainer/MainContainer.jsx","components/Calendar/CalendarToolbar/CalendarToolbar.styled.jsx","components/Calendar/CalendarToolbar/CalendarToolbar.jsx","pages/CalendarPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const Main = styled.main`\n  background-color: var(--page-bg-color);\n  padding-top: 64px;\n  padding-bottom: 40px;\n\n  ${min(tablet)} {\n    padding-bottom: 38px;\n  }\n\n  ${min(desktop)} {\n    padding-top: 38px;\n    padding-bottom: 32px;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 0 20px;\n\n  ${min(tablet)} {\n    padding: 0 32px;\n  }\n`;\n","import { Container, Main } from './MainContainer.styled';\n\nexport const MainContainer = ({ children }) => {\n  return (\n    <Main>\n      <Container>{children}</Container>\n    </Main>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { min, tablet } from 'styles/media';\n\nexport const Toolbar = styled.div`\n  margin-bottom: 24px;\n\n  ${min(tablet)} {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const DateContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 18px;\n  gap: 8px;\n`;\n\nexport const DateWrapper = styled.div`\n  background-color: var(--accent-color);\n  width: 148px;\n  /* width: auto; */\n  display: flex;\n  padding: 6px 12px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n`;\n\nexport const Date = styled.span`\n  text-transform: uppercase;\n  color: var(--invert-text-color);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n`;\n\nexport const ToggleWrapper = styled.div`\n  /* padding: 7px 10px; */\n  display: flex;\n  background: var(--calendar-grid-border);\n  border: 1px solid var(--calendar-grid-border);\n  border-radius: 8px;\n  gap: 1px;\n  overflow: hidden;\n`;\n\nexport const Toggle = styled.div`\n  padding: 7px 10px;\n  background: var(--primary-bg-color);\n`;\n\nexport const ToggleIcon = styled.svg`\n  &:hover {\n    fill: var(--accent-color);\n  }\n`;\n\nexport const TypeWrapper = styled.div`\n  display: flex;\n  border-radius: 8px;\n  overflow: hidden;\n  height: 34px;\n`;\n\nexport const Type = styled.div`\n  width: 76px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 0;\n  background-color: var(--switch-type-bg-active);\n`;\n\nexport const TypeLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n  color: var(--switch-type-color);\n`;\n\n\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Date,\n  DateContainer,\n  DateWrapper,\n  Toggle,\n  ToggleIcon,\n  ToggleWrapper,\n  Toolbar,\n  Type,\n  TypeWrapper,\n} from './CalendarToolbar.styled';\nimport { TypeLink } from './CalendarToolbar.styled';\n\nconst CalendarToolbar = ({\n  currentDate,\n  setCurrentDate,\n  format,\n  setFormat,\n}) => {\n  const month = moment(currentDate).format('YYYY-MM');\n  const day = moment(currentDate).format('YYYY-MM-DD');\n\n  const handleClick = format => {\n    const date = moment(currentDate).add(1, format).format('YYYY-MM-DD');\n    setCurrentDate(date);\n    localStorage.setItem('date', date);\n  };\n\n  const handleClickBack = format => {\n    const date = moment(currentDate).subtract(1, format).format('YYYY-MM-DD');\n    setCurrentDate(date);\n    localStorage.setItem('date', date);\n  };\n\n  const handleChangeType = e => {\n    switch (e.currentTarget.textContent) {\n      case 'Month':\n        setFormat('month');\n        localStorage.setItem('type', 'month');\n        break;\n      case 'Day':\n        setFormat('day');\n        localStorage.setItem('type', 'day');\n        break;\n      default:\n        return format;\n    }\n  };\n\n  return (\n    <Toolbar>\n      <DateContainer>\n        <DateWrapper>\n          <Date>\n            {moment(currentDate).format(\n              format === 'day' ? 'DD MMM YYYY' : 'MMMM YYYY'\n            )}\n          </Date>\n        </DateWrapper>\n        <ToggleWrapper>\n          <Link\n            to={format === 'month' ? `month/${month}` : `day/${day}`}\n            onClick={() => handleClickBack(format)}\n          >\n            <Toggle>\n              <ToggleIcon width=\"16\" height=\"16\">\n                <use\n                  xlinkHref={`${sprite}#icon-chevron-left`}\n                  width={16}\n                  height={16}\n                />\n              </ToggleIcon>\n            </Toggle>\n          </Link>\n          <Link\n            to={format === 'month' ? `month/${month}` : `day/${day}`}\n            onClick={() => handleClick(format)}\n          >\n            <Toggle>\n              <ToggleIcon width=\"16\" height=\"16\">\n                <use\n                  xlinkHref={`${sprite}#icon-chevron-right`}\n                  width={16}\n                  height={16}\n                />\n              </ToggleIcon>\n            </Toggle>\n          </Link>\n        </ToggleWrapper>\n      </DateContainer>\n      <TypeWrapper>\n        <Type>\n          <TypeLink to={`month/${month}`} onClick={handleChangeType}>\n            Month\n          </TypeLink>\n        </Type>\n        <Type>\n          <Link to={`day/${day}`} onClick={handleChangeType}>\n            Day\n          </Link>\n        </Type>\n      </TypeWrapper>\n    </Toolbar>\n  );\n};\n\nexport default CalendarToolbar;\n","import React, { useEffect, useState } from 'react';\nimport { MainContainer } from 'components/MainContainer/MainContainer';\nimport CalendarToolbar from 'components/Calendar/CalendarToolbar/CalendarToolbar';\nimport { Outlet, useNavigate } from 'react-router';\nimport moment from 'moment';\n\nconst CalendarPage = () => {\n  const navigate = useNavigate();\n  const [currentDate, setCurrentDate] = useState(\n    localStorage.getItem('date') || moment().format('YYYY-MM-DD').toString()\n  );\n  const [format, setFormat] = useState(localStorage.getItem('type') || 'month');\n\n  useEffect(() => {\n    let date;\n    switch (format) {\n      case 'month':\n        date = moment(currentDate).format('YYYY-MM');\n        navigate(`/calendar/month/${date}`);\n        break;\n      case 'day':\n        date = moment(currentDate).format('YYYY-MM-DD');\n        navigate(`/calendar/day/${date}`);\n        break;\n      default:\n        return;\n    }\n  }, [format, navigate, currentDate]);\n\n  return (\n    <MainContainer>\n      <CalendarToolbar\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        format={format}\n        setFormat={setFormat}\n      />\n      <Outlet />\n    </MainContainer>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["Main","styled","min","tablet","desktop","Container","MainContainer","children","Toolbar","DateContainer","DateWrapper","Date","ToggleWrapper","Toggle","ToggleIcon","TypeWrapper","Type","TypeLink","NavLink","currentDate","setCurrentDate","format","setFormat","month","moment","day","handleChangeType","e","currentTarget","textContent","localStorage","setItem","to","onClick","date","subtract","handleClickBack","width","height","xlinkHref","sprite","add","handleClick","navigate","useNavigate","useState","getItem","toString","useEffect"],"sourceRoot":""}