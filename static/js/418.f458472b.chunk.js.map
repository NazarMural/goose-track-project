{"version":3,"file":"static/js/418.f458472b.chunk.js","mappings":"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","sources":["components/Header/BurgerBtn/BurgerBtn.styled.jsx","components/Header/BurgerBtn/BurgerBtn.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.styled.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/ThemeToggler/ThemeToggle.styled.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/SideBar/CloseBtn/CloseBtn.styled.jsx","components/SideBar/CloseBtn/CloseBtn.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/SideBar.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BurgerButtonEl = styled.button`\n  display: block;\n  width: 24px;\n  height: 24px;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n \n\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { BurgerButtonEl } from './BurgerBtn.styled';\n\n\nexport const BurgerBtn = ({ addSideBar }) => {\n  return (\n    <BurgerButtonEl type=\"button\" onClick={addSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-burger`} />\n      </svg>\n    </BurgerButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\n// import { tablet, min, desktop } from 'styles/media';\n\nexport const FeedbackButton = styled.button`\n  display: block;\n  /* width: 97px; */\n  height: 100%;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  background: #3e85f3;\n  color: #ffffff;\n  /* margin-left: 0 auto; */\n  /* {min(tablet)} {\n    margin-left: 80px;\n  } */\n  @media screen and (min-width: 375px) {\n    margin-left: 80px;\n  }\n`;\n","import { FeedbackButton } from './FeedbackBtn.styled';\n\nexport const FeedbackBtn = () => {\n  return <FeedbackButton type=\"button\">Feedback</FeedbackButton>;\n};\n","import styled from '@emotion/styled';\n\nexport const UserInfoBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin-left: 18px;\n`;\n\nexport const UserName = styled.p`\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px; \n`;\n","import styled from '@emotion/styled';\n\nexport const ThemeBtn = styled.button`\n  display: block;\n  /* box-sizing: content-box; */\n  align-items: center;\n  /* align-items: center; */\n  width: 20px;\n  height: 20px;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n  svg {\n    display: block;\n    width: 20px;\n    height: 20px;\n  }\n`;\n\n// export const Toggle = styled.svg``;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { ThemeBtn } from './ThemeToggle.styled';\n\nexport const ThemeToggler = () => {\n  return (\n    <ThemeBtn type=\"button\">\n      <svg>\n        <use xlinkHref={`${sprite}#icon-moon`} />\n      </svg>\n    </ThemeBtn>\n  );\n};\n\n// по спрайту. я в компонент, де треба юзати імпортую цей файл\n\n// import sprite from '../../../images/icons/icons.svg';\n\n// і в місці, де треба вставляти прописую\n\n//  <IconDone>\n//         <use xlinkHref={`${sprite}#icon-Done`} width={40} height={40} />\n//       </IconDone>\n\n// окремо в файлі стилів\n\n// export const IconDone = styled.svg`\n//   margin-top: 10px;\n//   margin-left: 500px;\n//   stroke: pink;\n//   height: 40px;\n//   width: 40px;\n// `;\n","import { UserInfoBox, UserName } from './UserInfo.styled';\nimport { ThemeToggler } from '../ThemeToggler/ThemeToggler';\nexport const UserInfo = () => {\n  return (\n    <UserInfoBox>\n      <ThemeToggler/>\n      <UserName>Name</UserName>\n      <div>Photo</div>\n    </UserInfoBox>\n  );\n};\n","import styled from '@emotion/styled';\n// import { tablet, min, desktop } from 'styles/media';\n\nconst isShowSideBar = props => {\n  if (props.showSideBar) return '+125%';\n  return '-75%';\n};\n\nexport const HeaderSection = styled.header`\n  display: flex;\n  width: 100%;\n  height: 32px;\n  align-items: center;\n  background: #f7f6f9;\n  justify-content: space-between;\n/* \n  transform: translateX(${isShowSideBar});\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1); */\n`;\n\n// export const Thumb = styled.div`\n//   width: 100%;\n//   display: flex;\n//   align-items: center;\n//   /* margin-left: 100px; */\n// `;\n\n// ${min(tablet)} {\n//   padding: 64px 32px;\n// }\n// ${min(desktop)} {\n// padding: 64px 128px;\n// // margin-left: auto;\n// // margin-right: auto;\n// }\n","import { BurgerBtn } from './BurgerBtn/BurgerBtn';\nimport { FeedbackBtn } from './FeedbackBtn.jsx/FeedbackBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { HeaderSection } from './Header.styled';\n\n\nexport const Header = ({ addSideBar, showSideBar }) => {\n  return (\n    <HeaderSection showSideBar={showSideBar}>\n      <BurgerBtn addSideBar={addSideBar} />\n      {/* <Thumb> */}\n      <FeedbackBtn />\n      <UserInfo />\n      {/* </Thumb> */}\n    </HeaderSection>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CloseBtn = styled.button`\n  display: block;\n  /* box-sizing: content-box; */\n  align-items: center;\n  /* align-items: center; */\n  width: 24px;\n  height: 24px;\n  padding: 0px;\n  /* border: none; */\n  background-color: inherit;\n  cursor: pointer;\n  svg {\n    display: block;\n    width: 24px;\n    height: 24px;\n    use {\n      fill: inherit;\n    }\n  }\n\n  width: 24px;\n  height: 24px;\n  fill: #fefefe;\n  stroke: #fefefe;\n`;\n","import { CloseBtn } from './CloseBtn.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const CloseSideBarBtn = ({ removeSideBar }) => {\n  return (\n    <CloseBtn onClick={removeSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-x-close`} />\n      </svg>\n    </CloseBtn>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogoutButtonEl = styled.button`\n  width: 131px;\n  height: 46px;\n  flex-shrink: 0;\n  border-radius: 16px;\n  border: none;\n  background: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: #fff;\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 24px; /* 133.333% */\n  letter-spacing: -0.36px;\n`;\n","import { LogoutButtonEl } from './LogoutBtn.styled';\n\nexport const LogoutBtn = () => {\n  return <LogoutButtonEl type=\"button\">Logout</LogoutButtonEl>;\n};\n","import styled from '@emotion/styled';\n\nconst isShowSideBar = props => {\n  if (props.showSideBar) return '0%';\n  return '-110%';\n};\n\nexport const SideBarEl = styled.aside`\n  display: inline-flex;\n  padding: 24px 24px;\n  flex-direction: column;\n  min-width: 241px;\n  background: #fff;\n  z-index: 5;\n  position: absolute;\n\n  /* transform: translateY(101%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1); */\n\n  /* transform: translateX(-101%) */\n\n  transform: translateX(${isShowSideBar});\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  h2 {\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n      0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 24px;\n    span {\n      color: #3e85f3;\n      font-family: Inter;\n      font-size: 24px;\n      font-style: italic;\n      font-weight: 700;\n      line-height: 24px;\n      margin-left: -2px;\n      margin-right: 2px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const NavTitle = styled.h3`\n  color: rgba(52, 52, 52, 0.5);\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`;\nexport const NavList = styled.ul`\n  list-style: none;\n  li {\n    color: rgba(52, 52, 52, 0.5);\n    font-family: Inter;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport { NavTitle, NavList } from './UserNav.styled';\n\nexport const UserNavigation = () => {\n  return (\n    <>\n      <NavTitle>User panel</NavTitle>\n      <nav>\n        <NavList>\n          <li><NavLink to=\"account\">Account</NavLink></li>\n          <li><NavLink to=\"calendar\">Calendar</NavLink></li>\n          <li><NavLink to=\"statistics\">Statistics</NavLink></li>\n        </NavList>\n      </nav>\n    </>\n  );\n};\n","import { CloseSideBarBtn } from './CloseBtn/CloseBtn';\nimport { LogoutBtn } from './LogoutBtn.jsx/LogoutBtn';\nimport { SideBarEl, TitleBox } from './SideBar.styled';\nimport { UserNavigation } from './UserNav/UserNav';\n\nexport const SideBar = ({ removeSideBar, showSideBar }) => {\n  return (\n    <SideBarEl showSideBar={showSideBar}>\n      <TitleBox>\n        <svg width=\"20\" height=\"20\">\n          <use xlinkHref=\"../../images/mainPage/desktop_GooseMainPage.png;\"></use>\n        </svg>\n        <h2>\n          G<span>oo</span>seTrack\n        </h2>\n      </TitleBox>\n      <CloseSideBarBtn removeSideBar={removeSideBar} />\n      <UserNavigation />\n      <LogoutBtn />\n    </SideBarEl>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainLayoutContainer = styled.div`\n  display: flex;\n  position: relative;\n  /* flex-direction: row-reverse; */\n  margin: 0 auto;\n  height: 100%;\n  max-width: 375px;\n  padding: 24px 20px 40px 20px;\n  background: #f7f6f9;\n  /* height: auto; */\n  /* overflow: hidden; */\n  /* overflow-x: hidden; */\n`;\n\nexport const Container = styled.div`\n  /* margin: 0 auto;\n  max-width: 375px; */\n`;\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n","// import { useAuth } from 'hooks/useAuth';\n// import { useDispatch } from 'react-redux';\n// import { NavLink } from 'react-router-dom';\n// import { logOut } from 'redux/auth/operations';\n// import css from './Layout.module.css';\nimport { useState } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { SideBar } from 'components/SideBar/SideBar';\nimport { Outlet } from 'react-router-dom';\nimport { MainLayoutContainer } from './MainLayout.styled';\nimport { Container } from './MainLayout.styled';\n\nconst MainLayout = ({ children }) => {\n  const [showSideBar, setShowSideBar] = useState(false);\n  console.log(showSideBar);\n  const addSideBar = () => setShowSideBar(true);\n  const removeSideBar = () => setShowSideBar(false);\n\n  return (\n    <MainLayoutContainer>\n      {/* {showSideBar && <SideBar removeSideBar={removeSideBar}></SideBar>} */}\n      {/* {showSideBar && (\n        <Overlay showSideBar={showSideBar}> */}\n      <SideBar removeSideBar={removeSideBar} showSideBar={showSideBar} />\n      {/* </Overlay>\n      )} */}\n      {/* <Overlay showSideBar={showSideBar}>\n        <SideBar removeSideBar={removeSideBar} showSideBar={showSideBar} />\n      </Overlay> */}\n      {/* <SideBar removeSideBar={removeSideBar} showSideBar={showSideBar} /> */}\n      <Container>\n        <Header addSideBar={addSideBar} showSideBar={showSideBar} />\n        <Container>\n          {children}\n          <Outlet />\n        </Container>\n      </Container>\n    </MainLayoutContainer>\n  );\n};\n\nexport default MainLayout;\n\n// export const Layout = ({ children }) => {\n//   const dispatch = useDispatch();\n//   const handleLogOut = () => {\n//     dispatch(logOut());\n//   };\n\n//   const {\n//     user: { name },\n//   } = useAuth();\n\n//   const { isLoggedIn } = useAuth();\n\n//   return (\n//     <div className={css.container}>\n//       <header>\n//         <nav className={css.nav}>\n//           <NavLink to=\"/\" className={css.navText}>\n//             Home Page\n//           </NavLink>\n//           {isLoggedIn && (\n//             <NavLink to=\"/contacts\" className={css.navText}>\n//               Contacts\n//             </NavLink>\n//           )}\n//           {isLoggedIn ? (\n//             <div className={css.forLoggeded}>\n//               {/* <NavLink to=\"/contacts\" className={css.navText}>\n//                 Contacts\n//               </NavLink> */}\n//               <p className={css.greating}>\n//                 Hello, <span className={css.userName}>{name}</span>!{' '}\n//               </p>\n//               <button\n//                 type=\"button\"\n//                 onClick={handleLogOut}\n//                 className={css.btnLogout}\n//               >\n//                 LogOut\n//               </button>\n//             </div>\n//           ) : (\n//             <div className={css.authorization}>\n//               <NavLink to=\"/login\" className={css.navText}>\n//                 LogIn\n//               </NavLink>\n//               <NavLink to=\"/register\" className={css.navText}>\n//                 Register\n//               </NavLink>\n//             </div>\n//           )}\n//         </nav>\n//       </header>\n//       <main>{children}</main>\n//       <footer></footer>\n//     </div>\n//   );\n\n// hook useAuth\n//     import { useSelector } from 'react-redux';\n// import {\n//   selectUser,\n//   selectIsLoggedIn,\n//   selectIsRefreshing,\n// } from '../redux/auth/selectors';\n\n// export const useAuth = () => {\n//   const isLoggedIn = useSelector(selectIsLoggedIn);\n//   const isRefreshing = useSelector(selectIsRefreshing);\n//   const user = useSelector(selectUser);\n\n//   return {\n//     isLoggedIn,\n//     isRefreshing,\n//     user,\n//   };\n// };\n\n// Selectors\n// export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\n// export const selectUser = state => state.auth.user;\n\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["BurgerButtonEl","styled","BurgerBtn","addSideBar","type","onClick","xlinkHref","sprite","FeedbackButton","FeedbackBtn","UserInfoBox","UserName","ThemeBtn","ThemeToggler","UserInfo","HeaderSection","props","showSideBar","Header","CloseBtn","CloseSideBarBtn","removeSideBar","LogoutButtonEl","LogoutBtn","SideBarEl","TitleBox","NavTitle","NavList","UserNavigation","to","SideBar","width","height","MainLayoutContainer","Container","children","useState","setShowSideBar","console","log"],"sourceRoot":""}