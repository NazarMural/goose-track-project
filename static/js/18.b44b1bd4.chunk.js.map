{"version":3,"file":"static/js/18.b44b1bd4.chunk.js","mappings":"kMAGaA,EAAOC,EAAAA,EAAAA,KAAH,gOAKbC,EAAAA,EAAAA,IAAIC,EAAAA,KAIJD,EAAAA,EAAAA,IAAIE,EAAAA,KAMKC,EAAYJ,EAAAA,EAAAA,IAAH,kFAGlBC,EAAAA,EAAAA,IAAIC,EAAAA,K,UCnBKG,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,OACE,SAACP,EAAD,WACE,SAACK,EAAD,UAAYE,KAGjB,C,qMCNYC,EAAgBP,EAAAA,EAAAA,IAAH,2VAOtBC,EAAAA,EAAAA,IAAIC,EAAAA,KAIJD,EAAAA,EAAAA,IAAIE,EAAAA,KAQKK,EAAgBR,EAAAA,EAAAA,IAAH,+XAOtBC,EAAAA,EAAAA,IAAIC,EAAAA,KAGJD,EAAAA,EAAAA,IAAIE,EAAAA,KASKM,EAAkBT,EAAAA,EAAAA,OAAH,ocAUxBC,EAAAA,EAAAA,IAAIC,EAAAA,KAEJD,EAAAA,EAAAA,IAAIE,EAAAA,KAYKO,EAAYV,EAAAA,EAAAA,IAAH,giBAYlBC,EAAAA,EAAAA,IAAIC,EAAAA,KAEJD,EAAAA,EAAAA,IAAIE,EAAAA,KAcKQ,EAAaX,EAAAA,EAAAA,IAAH,gbAWnBC,EAAAA,EAAAA,IAAIC,EAAAA,KAEJD,EAAAA,EAAAA,IAAIE,EAAAA,KAaKS,EAAWZ,EAAAA,EAAAA,EAAH,kdAWjBC,EAAAA,EAAAA,IAAIE,EAAAA,KAYKU,EAAab,EAAAA,EAAAA,EAAH,gcAWnBC,EAAAA,EAAAA,IAAIE,EAAAA,K,UC3IKW,EAAW,WACtB,OACE,UAACP,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CAAiBM,KAAK,SAAtB,UACE,SAACL,EAAD,WACE,gBAAKM,KAAI,UAAKC,EAAAA,EAAL,qBAGb,SAACN,EAAD,WACE,gBAAKK,KAAI,UAAKC,EAAAA,EAAL,yBAGb,SAACL,EAAD,wBACA,SAACC,EAAD,qBAGL,EC3BYT,EAAYJ,EAAAA,EAAAA,IAAH,6vBAQlBC,EAAAA,EAAAA,IAAIC,EAAAA,KAYJD,EAAAA,EAAAA,IAAIE,EAAAA,KAYKe,GAAclB,EAAAA,EAAAA,GAAOmB,EAAAA,GAAPnB,CAAH,uXAIpBC,EAAAA,EAAAA,IAAIC,EAAAA,KAKJD,EAAAA,EAAAA,IAAIE,EAAAA,KAWKiB,GAAYpB,EAAAA,EAAAA,GAAOqB,EAAAA,GAAPrB,CAAH,gtDAyBlBC,EAAAA,EAAAA,IAAIC,EAAAA,KAeJD,EAAAA,EAAAA,IAAIE,EAAAA,KA4BKmB,EAAQtB,EAAAA,EAAAA,MAAH,0eAYdC,EAAAA,EAAAA,IAAIE,EAAAA,KAaKoB,EAAOvB,EAAAA,EAAAA,IAAH,wFAGbC,EAAAA,EAAAA,IAAIE,EAAAA,KAKKqB,EAAcxB,EAAAA,EAAAA,IAAH,oYASpBC,EAAAA,EAAAA,IAAIE,EAAAA,KAYKsB,EAAkBzB,EAAAA,EAAAA,IAAH,+TAIxBC,EAAAA,EAAAA,IAAIC,EAAAA,KAKJD,EAAAA,EAAAA,IAAIE,EAAAA,KAUKuB,EAAS1B,EAAAA,EAAAA,OAAH,2kCAsBfC,EAAAA,EAAAA,IAAIC,EAAAA,KAEJD,EAAAA,EAAAA,IAAIE,EAAAA,K,wCCxMFwB,GAASC,EAAAA,EAAAA,MAASC,MAAM,CAC5BC,UAAUC,EAAAA,EAAAA,MAASC,IAAI,IAAIC,WAC3BC,OAAOC,EAAAA,EAAAA,MACPC,UAAUC,EAAAA,EAAAA,MAAOC,SAAQ,kBAAM,IAAIC,IAAV,IACzBC,OAAOT,EAAAA,EAAAA,MAASC,IAAI,IACpBS,OAAOV,EAAAA,EAAAA,MAASU,QAAQR,aAGbS,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEnBC,EAAgB,CACpBlB,SAAUe,EAAKI,KACff,MAAOW,EAAKX,MACZE,SAAUS,EAAKT,SACfI,MAAOK,EAAKK,OACZT,MAAOI,EAAKJ,OAGd,GAA+CU,EAAAA,EAAAA,IAAU,CACvDH,cAAeA,EACfI,iBAAkBzB,EAClB0B,kBAAkB,EAClBC,SAhB0B,8CAYpBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,aAZF,wCAmB5B,WAAwBF,GAAxB,8EACQG,EAAU,CACdT,KAAMM,EAAOzB,SACbW,MAAOc,EAAOd,MACdL,SAAUmB,EAAOnB,SACjBF,MAAOqB,EAAOrB,MACdgB,OAAQK,EAAOf,OANnB,SASQG,GAASgB,EAAAA,EAAAA,IAAwBD,IATzC,OAWEE,EAAAA,OAAAA,QAAe,4BAXjB,2CAnB4B,wBAiC5B,OACE,UAACxD,EAAD,YACE,SAACU,EAAD,KACA,SAAC,KAAD,WACE,UAACI,EAAD,CAAa+B,KAAK,WAAWY,aAAa,MAAMP,SAAUG,EAA1D,WACE,UAACnC,EAAD,wBAEE,SAACF,EAAD,CACEL,KAAK,OACLkC,KAAK,WACLa,YAAY,kBACZC,MAAOR,EAAOzB,SACdkC,SAAUR,KAEZ,SAAC,KAAD,CAAcP,KAAK,WAAWgB,UAAU,YAE1C,UAAC3C,EAAD,oBAEE,SAACF,EAAD,CACEL,KAAK,MACLkC,KAAK,QACLa,YAAY,0BACZC,MAAOR,EAAOrB,MACd8B,SAAUR,KAEZ,SAAC,KAAD,CAAcP,KAAK,QAAQgB,UAAU,YAGvC,UAAC3C,EAAD,uBAEE,UAACC,EAAD,YACE,SAACH,EAAD,CACEL,KAAK,OACLkC,KAAK,WACLa,YAAY,aACZC,MAAOR,EAAOnB,SACd4B,SAAUR,KAEZ,SAAChC,EAAD,WACE,gBAAKR,KAAI,UAAKC,EAAAA,EAAL,2BAEX,SAAC,KAAD,CAAcgC,KAAK,WAAWgB,UAAU,eAI5C,UAAC3C,EAAD,oBAEE,SAACF,EAAD,CACEL,KAAK,OACLkC,KAAK,QACLa,YAAY,qBACZC,MAAOR,EAAOf,MACdwB,SAAUR,KAEZ,SAAC,KAAD,CAAcP,KAAK,QAAQgB,UAAU,YAEvC,UAAC3C,EAAD,oBAEE,SAACF,EAAD,CACEL,KAAK,QACLkC,KAAK,QACLa,YAAY,mBACZC,MAAOR,EAAOd,MACduB,SAAUR,KAEZ,SAAC,KAAD,CAAcP,KAAK,QAAQgB,UAAU,YAEvC,SAACxC,EAAD,WACE,SAACC,EAAD,CAAQX,KAAK,SAAb,mCAMX,E,UC5HD,EARoB,WAClB,OACE,SAACV,EAAA,EAAD,WACE,SAACqC,EAAD,KAGL,C","sources":["components/MainContainer/MainContainer.styled.jsx","components/MainContainer/MainContainer.jsx","components/Account/UserInfo/UserInfo.styled.jsx","components/Account/UserInfo/UserInfo.jsx","components/Account/UserForm/UserForm.styled.jsx","components/Account/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const Main = styled.main`\n  background-color: var(--page-bg-color);\n  padding-top: 64px;\n  padding-bottom: 40px;\n\n  ${min(tablet)} {\n    padding-bottom: 38px;\n  }\n\n  ${min(desktop)} {\n    padding-top: 38px;\n    padding-bottom: 32px;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 0 20px;\n\n  ${min(tablet)} {\n    padding: 0 32px;\n  }\n`;\n","import { Container, Main } from './MainContainer.styled';\n\nexport const MainContainer = ({ children }) => {\n  return (\n    <Main>\n      <Container>{children}</Container>\n    </Main>\n  );\n};\n","import styled from '@emotion/styled';\nimport { min, tablet, desktop } from 'styles/media';\nexport const UserContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  margin-bottom: 40px;\n  width: 299px;\n  flex-direction: column;\n  align-items: center;\n  ${min(tablet)} {\n    width: 704px;\n    margin-bottom: 66px;\n  }\n  ${min(desktop)} {\n    width: 1087px;\n    display: flex;\n    margin-bottom: 44px;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  margin: -31px 0 18px;\n  border: solid 2px var(--accent-color);\n  ${min(tablet)} {\n    margin: 40px 0 20px;\n  }\n  ${min(desktop)} {\n    position: relative;\n    width: 124px;\n    height: 124px;\n    border-radius: 50%;\n    margin: 60px 0 20px;\n    border: solid 2px var(--accent-color);\n  }\n`;\nexport const AddAvatarButton = styled.button`\n  position: absolute;\n  bottom: -6px;\n  right: 14px;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: none;\n  background-color: var(--accent-color);\n  cursor: pointer;\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    bottom: -8px;\n    right: 24px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    border: none;\n    background-color: var(--accent-color);\n    cursor: pointer;\n  }\n`;\nexport const AddAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  fill: transparent;\n  stroke: var(--primary-bg-color);\n  .dark & {\n    stroke: var(--primary-text-color);\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 24px;\n    height: 24px;\n    fill: transparent;\n    stroke: var(--primary-bg-color);\n    .dark & {\n      stroke: var(--primary-text-color);\n    }\n  }\n`;\nexport const UserAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 48px;\n  height: 48px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 48px;\n    height: 48px;\n    fill: #3e85f32e;\n    .dark & {\n      fill: #ffffff2e;\n    }\n  }\n`;\nexport const UserName = styled.p`\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n\n  font-weight: 700;\n  line-height: 18px;\n  margin: 0 0 4px 0;\n  .dark & {\n    color: var(--primary-text-color);\n  }\n  ${min(desktop)} {\n    color: var(--secondary-text-color);\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 18px;\n    margin: 0 0 8px 0;\n    .dark & {\n      color: var(--primary-text-color);\n    }\n  }\n`;\nexport const UserStatus = styled.p`\n  margin: 0;\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 12px;\n\n  font-weight: 600;\n  line-height: 14px;\n  .dark & {\n    color: var(--user-label-color);\n  }\n  ${min(desktop)} {\n    margin: 0;\n    color: var(--secondary-text-color);\n    font-family: Inter;\n    font-size: 14px;\n\n    font-weight: 600;\n    line-height: 18px;\n    .dark & {\n      color: var(--user-label-color);\n    }\n  }\n`;\n","import React from 'react';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nimport {\n  UserContainer,\n  AvatarWrapper,\n  UserAvatar,\n  AddAvatar,\n  AddAvatarButton,\n  UserName,\n  UserStatus,\n} from './UserInfo.styled';\n\nexport const UserInfo = () => {\n  return (\n    <UserContainer>\n      <AvatarWrapper>\n        <AddAvatarButton type=\"submit\">\n          <AddAvatar>\n            <use href={`${sprite}#icon-plus`}></use>\n          </AddAvatar>\n        </AddAvatarButton>\n        <UserAvatar>\n          <use href={`${sprite}#icon-ph_user`}></use>\n        </UserAvatar>\n      </AvatarWrapper>\n      <UserName>Username</UserName>\n      <UserStatus>User</UserStatus>\n    </UserContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { min, tablet, desktop } from 'styles/media';\nexport const Container = styled.div`\n  width: 335px;\n  height: 653px;\n  border-radius: 16px;\n  background-color: var(--primary-bg-color);\n  .dark & {\n    background-color: var(--primary-bg-color);\n  }\n  ${min(tablet)} {\n    width: 704px;\n    height: 854px;\n    background-image: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.2) 100%\n      ),\n      linear-gradient(0deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%),\n      linear-gradient(0deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%);\n  }\n\n  ${min(desktop)} {\n    width: 1087px;\n    height: 752px;\n    background-image: none;\n    border-radius: 16px;\n    background-color: var(--primary-bg-color);\n    .dark & {\n      background-color: var(--primary-bg-color);\n    }\n  }\n`;\n\nexport const AddUserForm = styled(Form)`\n  width: 299px;\n  height: 392px;\n  margin: 0 auto;\n  ${min(tablet)} {\n    margin: 0 auto;\n    width: 354px;\n    height: 458px;\n  }\n  ${min(desktop)} {\n    position: relative;\n    width: 758px;\n    height: 200px;\n    margin: 0 auto;\n    display: grid;\n    grid-template: repeat(3, 1fr) / repeat(2, 1fr);\n    justify-content: center;\n    gap: 18px 50px;\n  }\n`;\nexport const FormField = styled(Field)`\n  ::-webkit-calendar-picker-indicator {\n    margin: 0 10px 0;\n    cursor: pointer;\n    opacity: 0;\n  }\n  width: 269px;\n  padding: 12px 14px;\n  margin-bottom: 18px;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  color: var(--primary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  &focus {\n    border-color: var(--input-border-color-focus);\n  }\n  .dark & {\n    background-color: var(--primary-bg-color);\n    color: var(--primary-text-color);\n    border-color: var(--calendar-grid-border);\n  }\n\n  ${min(tablet)} {\n    width: 318px;\n    padding: 14px 18px;\n    margin-bottom: 24px;\n\n    background-image: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.2) 100%\n      ),\n      linear-gradient(0deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%),\n      linear-gradient(0deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%);\n    border: 1px solid rgba(17, 17, 17, 0.15);\n    color: var(--primary-text-color);\n  }\n  ${min(desktop)} {\n    ::-webkit-calendar-picker-indicator {\n      margin: 0 10px 0;\n      cursor: pointer;\n      opacity: 0;\n    }\n    width: 334px;\n    margin: 0;\n    padding: 14px 0px 14px 18px;\n    background-image: none;\n    border-color: var(--input-border-color);\n    border-radius: 8px;\n    color: var(--primary-text-color);\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 18px;\n    &focus {\n      border-color: var(--input-border-color-focus);\n    }\n    .dark & {\n      background-color: var(--primary-bg-color);\n      color: var(--primary-text-color);\n      border-color: var(--calendar-grid-border);\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: var(--primary-text-color);\n  font-family: Inter;\n  font-size: 12px;\n\n  line-height: 14px;\n  .dark & {\n    color: var(--user-label-color);\n  }\n  ${min(desktop)} {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    color: var(--primary-text-color);\n    font-family: Inter;\n    font-size: 14px;\n    line-height: 18px;\n    .dark & {\n      color: var(--user-label-color);\n    }\n  }\n`;\nexport const Span = styled.div`\n  position: relative;\n\n  ${min(desktop)} {\n    position: relative;\n  }\n`;\n\nexport const ChevronDown = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  pointer-events: none;\n  fill: var(--primary-text-color);\n  ${min(desktop)} {\n    position: absolute;\n    top: 18px;\n    right: 14px;\n    width: 18px;\n    height: 18px;\n    cursor: pointer;\n    pointer-events: none;\n    fill: var(--primary-text-color);\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 22px;\n  ${min(tablet)} {\n    position: static;\n    display: flex;\n    justify-content: center;\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 352px;\n    right: 247px;\n    display: flex;\n    justify-content: center;\n    margin: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 196px;\n  height: 46px;\n  border: none;\n  cursor: pointer;\n  padding: 10px 0px;\n  border-radius: 16px;\n  color: var(--primary-bg-color);\n  background-color: var(--btn-bg-color);\n  text-align: center;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 18px;\n\n  &:hover {\n    background-color: var(--btn-bg-hover);\n  }\n  .dark & {\n    color: var(--primary-text-color);\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    width: 262px;\n    height: 48px;\n    border: none;\n    cursor: pointer;\n    padding: 10px 0px;\n    border-radius: 16px;\n    color: var(--primary-bg-color);\n    background-color: var(--btn-bg-color);\n    text-align: center;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n\n    &:hover {\n      background-color: var(--btn-bg-hover);\n    }\n    .dark & {\n      color: var(--primary-text-color);\n    }\n  }\n`;\n","import React from 'react';\nimport { Formik, ErrorMessage, useFormik } from 'formik';\nimport { object, string, number, date } from 'yup';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport {\n  Container,\n  AddUserForm,\n  FormField,\n  Label,\n  Button,\n  ButtonContainer,\n  ChevronDown,\n  Span,\n} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserDataOperation } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\nimport { Notify } from 'notiflix';\n\nconst schema = object().shape({\n  username: string().max(16).required(),\n  phone: number(),\n  birthday: date().default(() => new Date()),\n  skype: string().max(16),\n  email: string().email().required(),\n});\n\nexport const UserForm = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const initialValues = {\n    username: user.name,\n    phone: user.phone,\n    birthday: user.birthday,\n    skype: user.social,\n    email: user.email,\n  };\n\n  const { values, handleChange, handleSubmit } = useFormik({\n    initialValues: initialValues,\n    validationSchema: schema,\n    validateOnChange: false,\n    onSubmit: onSubmit,\n  });\n\n  async function onSubmit(values) {\n    const newData = {\n      name: values.username,\n      email: values.email,\n      birthday: values.birthday,\n      phone: values.phone,\n      social: values.skype,\n    };\n\n    await dispatch(updateUserDataOperation(newData));\n\n    Notify.success('Data update successfully');\n  }\n\n  return (\n    <Container>\n      <UserInfo />\n      <Formik>\n        <AddUserForm name=\"userform\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Label>\n            User Name\n            <FormField\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Enter your name\"\n              value={values.username}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"username\" component=\"div\" />\n          </Label>\n          <Label>\n            Phone\n            <FormField\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"Enter your phone number\"\n              value={values.phone}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"phone\" component=\"div\" />\n          </Label>\n\n          <Label>\n            Birthday\n            <Span>\n              <FormField\n                type=\"date\"\n                name=\"birthday\"\n                placeholder=\"DD/MM/YYYY\"\n                value={values.birthday}\n                onChange={handleChange}\n              />\n              <ChevronDown>\n                <use href={`${sprite}#icon-chevron-down`}></use>\n              </ChevronDown>\n              <ErrorMessage name=\"birthday\" component=\"div\" />\n            </Span>\n          </Label>\n\n          <Label>\n            Skype\n            <FormField\n              type=\"text\"\n              name=\"skype\"\n              placeholder=\"Add a skype number\"\n              value={values.skype}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"skype\" component=\"div\" />\n          </Label>\n          <Label>\n            Email\n            <FormField\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              value={values.email}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </Label>\n          <ButtonContainer>\n            <Button type=\"submit\">Save changes</Button>\n          </ButtonContainer>\n        </AddUserForm>\n      </Formik>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { UserForm } from 'components/Account/UserForm/UserForm';\nimport { MainContainer } from 'components/MainContainer/MainContainer';\nconst AccountPage = () => {\n  return (\n    <MainContainer>\n      <UserForm />\n    </MainContainer>\n  );\n};\n\nexport default AccountPage;\n"],"names":["Main","styled","min","tablet","desktop","Container","MainContainer","children","UserContainer","AvatarWrapper","AddAvatarButton","AddAvatar","UserAvatar","UserName","UserStatus","UserInfo","type","href","sprite","AddUserForm","Form","FormField","Field","Label","Span","ChevronDown","ButtonContainer","Button","schema","object","shape","username","string","max","required","phone","number","birthday","date","default","Date","skype","email","UserForm","dispatch","useDispatch","user","useSelector","selectUser","initialValues","name","social","useFormik","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","newData","updateUserDataOperation","Notify","autoComplete","placeholder","value","onChange","component"],"sourceRoot":""}