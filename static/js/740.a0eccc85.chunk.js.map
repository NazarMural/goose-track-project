{"version":3,"file":"static/js/740.a0eccc85.chunk.js","mappings":"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","sources":["components/Header/BurgerBtn/BurgerBtn.styled.jsx","components/Header/BurgerBtn/BurgerBtn.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.styled.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/ThemeToggler/ThemeToggle.styled.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.jsx","hooks/useAuth.js","components/Header/Header.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Header/AddFeedbackModal/ReviewForm/ReviewForm.styled.jsx","components/Header/AddFeedbackModal/Rating/Rating.styled.jsx","components/Header/AddFeedbackModal/Rating/Rating.jsx","components/Header/AddFeedbackModal/ReviewForm/ReviewForm.jsx","components/Header/Header.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/CloseBtn/CloseBtn.styled.jsx","components/SideBar/CloseBtn/CloseBtn.jsx","components/SideBar/GooseImage/GooseImage.styled.jsx","components/SideBar/GooseImage/GooseImage.jsx","components/SideBar/TitleBox/TitleBox.styled.jsx","components/SideBar/TitleBox/TitleBox.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/SideBar.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx","redux/theme/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BurgerButtonEl = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    display: block;\n    fill: transparent;\n    fill: var(--burger-color);\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { BurgerButtonEl } from './BurgerBtn.styled';\n\nexport const BurgerBtn = ({ addSideBar }) => {\n  return (\n    <BurgerButtonEl type=\"button\" onClick={addSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-menu_40px`} />\n      </svg>\n    </BurgerButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const FeedbackButton = styled.button`\n  display: block;\n  height: 100%;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  background-color: var(--btn-bg-color);\n  color: var(--btn-text-color);\n  margin-left: auto;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 16px;\n  cursor: pointer;\n  transition: ba  §ckground-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n  ${min(tablet)} {\n    padding: 12px 32px;\n    font-size: 14px;\n    line-height: 18px;\n  }\n`;\n","import React from 'react';\nimport { FeedbackButton } from './FeedbackBtn.styled';\n\nexport const FeedbackBtn = ({ openForm }) => {\n  const handleButtonClick = () => {\n    openForm();\n  };\n\n  return (\n    <FeedbackButton type=\"button\" onClick={handleButtonClick}>\n      Feedback\n    </FeedbackButton>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const UserInfoBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin-left: 18px;\n  ${min(tablet)} {\n    gap: 14px;\n    margin-left: 24px;\n  }\n`;\n\nexport const UserName = styled.p`\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  ${min(tablet)} {\n    font-size: 18px;\n  }\n`;\n\nexport const UserAvatarThumb = styled.div`\n  position: relative;\n  width: 44px;\n  height: 44px;\n  border: 1.8px solid #3e85f3;\n  overflow: hidden;\n  border-radius: 50%;\n`;\n\nexport const UserImage = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const UserAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 24px;\n    height: 24px;\n    fill: #3e85f32e;\n    .dark & {\n      fill: #ffffff2e;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const ThemeBtn = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    fill: var(--btn-bg-color);\n    display: block;\n    width: 20px;\n    height: 20px;\n    transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    :hover {\n      fill: var(--btn-bg-hover);\n    }\n\n    ${min(tablet)} {\n      width: 32px;\n      height: 32px;\n    }\n  }\n`;\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { ThemeBtn } from './ThemeToggle.styled';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { THEMES } from 'constants/theme/themes';\nimport { useEffect } from 'react';\n\nexport const ThemeToggler = () => {\n  const dispatch = useDispatch();\n  const curentTheme = useSelector(selectTheme);\n\n  useEffect(() => {\n    if (curentTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n      return;\n    }\n    document.documentElement.classList.remove('dark');\n  }, [curentTheme]);\n\n  const handleThemeClick = () => {\n    dispatch(\n      setTheme(curentTheme === THEMES.LIGHT ? THEMES.DARK : THEMES.LIGHT)\n    );\n    document.documentElement.classList.toggle('dark');\n  };\n  return (\n    <ThemeBtn type=\"button\" onClick={handleThemeClick}>\n      {curentTheme === THEMES.LIGHT ? (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-moon`} />\n        </svg>\n      ) : (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-sun`} />\n        </svg>\n      )}\n    </ThemeBtn>\n  );\n};\n\n","import {\n  UserAvatarThumb,\n  UserInfoBox,\n  UserName,\n  UserImage,\n  UserAvatar,\n} from './UserInfo.styled';\nimport { ThemeToggler } from '../ThemeToggler/ThemeToggler';\nimport { useAuth } from 'hooks/useAuth';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const UserInfo = () => {\n  const {\n    user: { name, avatarURL },\n  } = useAuth();\n\n  return (\n    <UserInfoBox>\n      <ThemeToggler />\n      <UserName>{name ? name : 'User'}</UserName>\n      <UserAvatarThumb>\n        {avatarURL ? (\n          <UserImage src={avatarURL} />\n        ) : (\n          <UserAvatar>\n            <use href={`${sprite}#icon-ph_user`}></use>\n          </UserAvatar>\n        )}\n      </UserAvatarThumb>\n    </UserInfoBox>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshingUser,\n} from '../redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshingUser = useSelector(selectIsRefreshingUser);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshingUser,\n    user,\n  };\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const HeaderSection = styled.header`\n  display: flex;\n  padding: 24px 20px 0px 20px;\n  max-width: 375px;\n  height: auto;\n  align-items: center;\n\n  ${min(tablet)} {\n    max-width: 768px;\n    padding: 24px 32px 0px 32px;\n  }\n  ${min(desktop)} {\n    max-width: 1087px;\n    padding: 40px 32px 0px 32px;\n  }\n`;\n\nexport const PageTitle = styled.h2`\n  color: var(--primary-text-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 32px;\n`;\n","import styled from '@emotion/styled';\nimport { mobile, max } from 'styles/media';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--primary-bg-color);\n  border: 1px solid #dce3e5cc;\n  border-radius: 8px;\n  box-shadow: 0px 4px 57px 0px rgba(17, 17, 17, 0.05);\n  z-index: 1000;\n  ${max(mobile)} {\n    width: 100%;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  z-index: 999;\n`;\n\nexport const Content = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 24px;\n  padding: 0;\n`;\n\nexport const IconClose = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--input-border-color-focus);\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    stroke: #84828a;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Backdrop, Container, IconClose, CloseButton } from './Modal.styled';\nimport sprite from '../../assets/images/icons/icons.svg';\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  closeButtonPosition = { top: '14px', right: '14px' },\n  children,\n}) => {\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscKeyPress = event => {\n      if (isOpen && event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n    window.addEventListener('keydown', handleEscKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyPress);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Container id=\"modal-container\">\n        <CloseButton onClick={onClose} style={closeButtonPosition}>\n          <IconClose>\n            <use xlinkHref={`${sprite}#icon-x-close`} width={24} height={24} />\n          </IconClose>\n        </CloseButton>\n\n        {children}\n      </Container>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { tablet, min, mobile, max } from 'styles/media';\n\nexport const FormContainer = styled.form`\n  max-width: 468px;\n  padding: 28px 20px 29px 20px;\n\n  ${min(tablet)} {\n    padding: 32px;\n  }\n`;\n\nexport const LabelText = styled.label`\n  display: flex;\n  margin-bottom: 8px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.16;\n  color: #343434cc;\n`;\n\nexport const CommentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  max-width: 100%;\n  ${min(tablet)} {\n    margin-top: 24px;\n  }\n`;\n\nexport const CommentText = styled.textarea`\n  width: 100%;\n  height: 130px;\n  padding: 12px 14px;\n  border: none;\n  border-radius: 8px;\n  background: #f6f6f6;\n  resize: none;\n  box-sizing: border-box;\n  ${min(mobile)} {\n    width: 295px;\n  }\n  ${min(tablet)} {\n    width: 404px;\n    height: 127px;\n    padding: 14px 18px;\n  }\n\n  &::placeholder {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.28;\n    color: var(--secondary-text-color);\n  }\n\n  &:focus::placeholder {\n    opacity: 0;\n  }\n`;\n\nexport const ButtonsBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const SaveButton = styled.button`\n  display: flex;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 56px;\n  margin-top: 14px;\n  outline: none;\n  background-color: var(--btn-bg-color);\n  color: var(--btn-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  cursor: pointer;\n  justify-content: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n  ${max(mobile)} {\n    width: 50%;\n    padding: 12px 5px;\n  }\n  ${min(tablet)} {\n   \n    width: 198px;\n`;\n\nexport const CancelButton = styled.button`\n  display: flex;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 47.5px;\n  margin-top: 14px;\n  outline: none;\n  background-color: var(--review-btn-cancel-bg);\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  cursor: pointer;\n  justify-content: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--switch-type-bg-active);\n  }\n  ${max(mobile)} {\n    width: 50%;\n    padding: 12px 5px;\n  }\n  ${min(tablet)} {\n    width: 198px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  z-index: 1000;\n`;\n\nexport const Star = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--star-color);\n`;\n\nexport const FilledStar = styled(Star)`\n  fill: var(--star-color-active);\n`;\n","import React, { useState } from 'react';\nimport { StarContainer, Star, FilledStar } from './Rating.styled';\nimport sprite from '../../../../assets/images/icons/icons.svg';\n\nconst Rating = ({ onRatingChange }) => {\n  const [rating, setRating] = useState(0);\n\n  const handleStarClick = selectedRating => {\n    setRating(selectedRating);\n    onRatingChange(selectedRating);\n  };\n\n  return (\n    <div>\n      <StarContainer>\n        {[1, 2, 3, 4, 5].map(star => (\n          <StarContainer key={star} onClick={() => handleStarClick(star)}>\n            {star <= rating ? (\n              <FilledStar>\n                <use xlinkHref={`${sprite}#icon-star`} width={24} height={24} />\n              </FilledStar>\n            ) : (\n              <Star>\n                <use xlinkHref={`${sprite}#icon-star`} width={24} height={24} />\n              </Star>\n            )}\n          </StarContainer>\n        ))}\n      </StarContainer>\n    </div>\n  );\n};\n\nexport default Rating;\n","import React, { useState } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { Notify } from 'notiflix';\nimport Modal from '../../../Modal/Modal';\nimport {\n  FormContainer,\n  LabelText,\n  CommentBox,\n  CommentText,\n  SaveButton,\n  CancelButton,\n  ButtonsBox,\n} from './ReviewForm.styled';\nimport Rating from '../Rating/Rating';\nimport { addReviewOperation } from '../../../../redux/reviews/operations';\n\nconst ReviewForm = ({ isOpen, onClose }) => {\n  const [formData, setFormData] = useState({\n    rating: '',\n    comment: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleRatingChange = newRating => {\n    setFormData({\n      ...formData,\n      rating: newRating,\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (formData.rating === '') {\n      Notify.warning('Please select a rating before submitting.');\n\n      return;\n    }\n    console.log(formData);\n    dispatch(addReviewOperation(formData));\n    onClose();\n  };\n\n  const handleCancel = () => {\n    setFormData({\n      rating: '',\n      comment: '',\n    });\n    onClose();\n  };\n\n  const closeButtonPosition = { top: '16px', right: '16px' };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      closeButtonPosition={closeButtonPosition}\n    >\n      <FormContainer onSubmit={handleSubmit}>\n        <div>\n          <LabelText>Rating</LabelText>\n          <Rating onRatingChange={handleRatingChange} required></Rating>\n        </div>\n\n        <CommentBox>\n          <LabelText htmlFor=\"comment\">Review</LabelText>\n          <CommentText\n            id=\"comment\"\n            name=\"comment\"\n            value={formData.comment}\n            onChange={handleChange}\n            required\n            maxLength={300}\n            placeholder=\"Enter Text\"\n          />\n        </CommentBox>\n        <ButtonsBox>\n          <SaveButton type=\"submit\">Save</SaveButton>\n          <CancelButton type=\"button\" onClick={handleCancel}>\n            Cancel\n          </CancelButton>\n        </ButtonsBox>\n      </FormContainer>\n    </Modal>\n  );\n};\n\nexport default ReviewForm;\n","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { BurgerBtn } from './BurgerBtn/BurgerBtn';\nimport { FeedbackBtn } from './FeedbackBtn.jsx/FeedbackBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { HeaderSection, PageTitle } from './Header.styled';\nimport { useLocation } from 'react-router-dom';\nimport ReviewForm from './AddFeedbackModal/ReviewForm/ReviewForm';\n\nexport const Header = ({ addSideBar, showSideBar }) => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1440px)',\n  });\n  const location = useLocation();\n\n  const defineCurentPage = () => {\n    if (location.pathname.includes('account')) return 'User profile';\n    if (location.pathname.includes('calendar')) return 'Calendar';\n    if (location.pathname.includes('statistics')) return 'Statistics';\n  };\n  const currentPageTitle = defineCurentPage();\n\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  const openForm = () => {\n    setIsFormOpen(true);\n  };\n\n  const closeForm = () => {\n    setIsFormOpen(false);\n  };\n\n  return (\n    <HeaderSection showSideBar={showSideBar}>\n      {isDesktop ? (\n        <PageTitle>{currentPageTitle}</PageTitle>\n      ) : (\n        <BurgerBtn addSideBar={addSideBar} />\n      )}\n      <FeedbackBtn openForm={openForm} />\n      <UserInfo />\n      {isFormOpen && <ReviewForm isOpen={isFormOpen} onClose={closeForm} />}\n    </HeaderSection>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, max, desktop } from 'styles/media';\n\nexport const LogoutButtonEl = styled.button`\n  display: flex;\n  width: 131px;\n  height: 46px;\n  margin: auto auto 0px 0px;\n  flex-shrink: 0;\n  border-radius: 16px;\n  border: none;\n  background-color: var(--btn-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  justify-content: center;\n  align-items: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n\n  color: var(--invert-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.36px;\n\n  ${min(tablet)} {\n    font-size: 18px;\n    width: 141px;\n    height: 56px;\n    line-height: 24px;\n  }\n\n  svg {\n    stroke: var(--btn-text-color);\n    fill: transparent;\n    width: 20px;\n    height: 20px;\n    margin-left: 6px;\n  }\n\n  ${max(desktop - 0.02)} {\n    margin-bottom: 35px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { LogoutButtonEl } from './LogoutBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { logOutOperation } from 'redux/auth/operations';\n\nexport const LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    localStorage.removeItem('type');\n    localStorage.removeItem('date');\n    dispatch(logOutOperation());\n  };\n  return (\n    <LogoutButtonEl type=\"button\" onClick={handleLogOut}>\n      Logout\n      <svg>\n        <use xlinkHref={`${sprite}#icon-log-out`} />\n      </svg>\n    </LogoutButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop, max } from 'styles/media';\n\nconst isShowSideBar = props => {\n  if (props.showSideBar) return '0%';\n  return '-110%';\n};\n\nexport const SideBarEl = styled.aside`\n  display: inline-flex;\n  padding: 24px 24px;\n  flex-direction: column;\n  width: 225px;\n  background-color: var(--sidebar-bg-color);\n  z-index: 5;\n  position: absolute;\n  transform: translateX(${isShowSideBar});\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${min(tablet)} {\n    width: 289px;\n  }\n  ${min(desktop)} {\n    height: 100vh;\n    max-height: 900px;\n    position: fixed;\n    z-index: 1;\n    transform: translateX(0%);\n  }\n\n  ${max(desktop - 0.02)} {\n    height: 100vh;\n    max-height: 900px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { min, tablet, desktop } from 'styles/media';\n\nexport const CloseBtn = styled.button`\n  display: block;\n  border: none;\n  background-color: inherit;\n  align-items: center;\n  padding: 0px;\n  margin-left: auto;\n  cursor: pointer;\n  svg {\n    fill: transparent;\n    stroke: var(--primary-text-color);\n    display: block;\n    width: 24px;\n    height: 24px;\n    ${min(tablet)} {\n      width: 34px;\n      height: 34px;\n    }\n    ${min(desktop)} {\n      display: none;\n    }\n  }\n`;\n","import { CloseBtn } from './CloseBtn.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const CloseSideBarBtn = ({ removeSideBar }) => {\n  return (\n    <CloseBtn onClick={removeSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-x-close`} />\n      </svg>\n    </CloseBtn>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const GooseImg = styled.img`\n  width: 36px;\n  height: 35px;\n\n  ${min(tablet)} {\n    width: 60px;\n    height: 58px;\n  }\n  ${min(desktop)} {\n    width: 71px;\n    height: 68px;\n  }\n`;\n","import desktopGooseMainPage from 'assets/images/mainPage/desktop_GooseMainPage.png';\nimport desktopGooseMainPage2x from 'assets/images/mainPage/desktop_GooseMainPage@2x.png';\nimport { GooseImg } from './GooseImage.styled';\n\nexport const GooseImage = () => {\n  return (\n    <GooseImg\n      src={desktopGooseMainPage}\n      srcSet={`${desktopGooseMainPage} 1x, ${desktopGooseMainPage2x} 2x`}\n      alt=\"The goose invites you to organize your life and manage your team \"\n    />\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const TitleBoxEl = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n  ${min(tablet)} {\n    margin-bottom: 50px;\n  }\n  ${min(desktop)} {\n    margin-bottom: 32px;\n  }\n\n  h2 {\n    display: block;\n    margin: 0 0 0 6px;\n    color: var(--accent-color);\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n      0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 22px;\n    ${min(tablet)} {\n      font-size: 22px;\n    }\n    ${min(desktop)} {\n      font-size: 24px;\n      line-height: 24px;\n      margin: 0 0 0 10px;\n    }\n\n    span {\n      color: var(--accent-color);\n      font-family: Inter;\n      font-size: 16px;\n      font-style: italic;\n      font-weight: 700;\n      line-height: 24px;\n      margin-left: -1px;\n      margin-right: 2px;\n      ${min(tablet)} {\n        font-size: 22px;\n      }\n      ${min(desktop)} {\n        font-size: 24px;\n      }\n    }\n  }\n`;\n","import { CloseSideBarBtn } from '../CloseBtn/CloseBtn';\nimport { GooseImage } from '../GooseImage/GooseImage';\nimport { TitleBoxEl } from './TitleBox.styled';\n\nexport const TitleBox = ({ removeSideBar }) => {\n  return (\n    <TitleBoxEl>\n      <GooseImage />\n      <h2>\n        G<span>oo</span>seTrack\n      </h2>\n      <CloseSideBarBtn removeSideBar={removeSideBar} />\n    </TitleBoxEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { tablet, min } from 'styles/media';\n\n// const isFilledIcon = props => {\n//   if (props.to === 'statistics') return 'var(--sidebar-text-color)';\n//   return 'transparent';\n// };\n\nexport const NavTitle = styled.h3`\n  margin: 0 0 24px 0;\n  color: var(--sidebar-text-color);\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 14px;\n  }\n`;\nexport const NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin: 0px;\n  padding: 0px;\n  gap: 18px;\n  list-style: none;\n`;\n\nexport const NavListItem = styled.li`\n  display: block;\n\n  background-color: ${props => {\n    const location = useLocation();\n    if (location.pathname.includes(props.page))\n      return 'var(--sidebar-accent-color)';\n    return 'transparent';\n  }};\n\n  padding: 10px 0px 10px 12px;\n  border-radius: 8px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--sidebar-accent-color);\n  }\n`;\n\nexport const NavLinkSideBar = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: var(--sidebar-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 16px;\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 8px;\n    ${min(tablet)} {\n      width: 24px;\n      height: 24px;\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const IconWithFill = styled.svg`\n  stroke: transparent;\n  fill: var(--sidebar-text-color);\n  /* stroke: var(--sidebar-text-color);\n    fill: transparent; */\n  /* width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  ${min(tablet)} {\n    width: 24px;\n    height: 24px;\n    margin-right: 10px;\n  } */\n`;\n\nexport const IconWithStroke = styled.svg`\n  stroke: var(--sidebar-text-color);\n  fill: transparent;\n`;\n","import {\n  NavTitle,\n  NavList,\n  NavListItem,\n  NavLinkSideBar,\n  IconWithStroke,\n  IconWithFill,\n} from './UserNav.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n// import { pages } from 'components/MainLayout/MainLayout';\n\nexport const UserNavigation = ({\n  removeSideBar,\n  // currentPage,\n  // changeCurrentPage,\n}) => {\n  const handleChangeCurrentPage = page => {\n    removeSideBar();\n    // changeCurrentPage(page);\n  };\n  // console.log(pages);\n  return (\n    <>\n      <NavTitle>User panel</NavTitle>\n      <nav>\n        <NavList>\n          <NavListItem page=\"account\">\n            <NavLinkSideBar to=\"account\" onClick={handleChangeCurrentPage}>\n              <IconWithStroke>\n                <use xlinkHref={`${sprite}#icon-user`} />\n              </IconWithStroke>\n              My account\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem page=\"calendar\">\n            <NavLinkSideBar to=\"calendar\" onClick={handleChangeCurrentPage}>\n              <IconWithStroke>\n                <use xlinkHref={`${sprite}#icon-calendar`} />\n              </IconWithStroke>\n              Calendar\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem page=\"statistics\">\n            <NavLinkSideBar to=\"statistics\" onClick={handleChangeCurrentPage}>\n              <IconWithFill>\n                <use xlinkHref={`${sprite}#icon-chart`} />\n              </IconWithFill>\n              Statistics\n            </NavLinkSideBar>\n          </NavListItem>\n        </NavList>\n      </nav>\n    </>\n  );\n};\n","import { LogoutBtn } from './LogoutBtn.jsx/LogoutBtn';\nimport { SideBarEl } from './SideBar.styled';\nimport { TitleBox } from './TitleBox/TitleBox';\nimport { UserNavigation } from './UserNav/UserNav';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const SideBar = ({ removeSideBar, showSideBar }) => {\n  const desktop = useMediaQuery({ minWidth: 1440 });\n  if (showSideBar && !desktop) {\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = 'auto';\n  }\n\n  return (\n    <SideBarEl showSideBar={showSideBar}>\n      <TitleBox removeSideBar={removeSideBar} />\n      <UserNavigation removeSideBar={removeSideBar} />\n      <LogoutBtn />\n    </SideBarEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const MainLayoutContainer = styled.div`\n  display: flex;\n  position: relative;\n  margin: 0 auto;\n  height: 100%;\n  max-width: 375px;\n  background: var(--page-bg-color);\n  overflow-x: hidden;\n  ${min(tablet)} {\n    max-width: 768px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1087px;\n  background-color: var(--page-bg-color);\n`;\n\nexport const SideBarPlaceholder = styled.div`\nwidth: 289px;\n`\n","import { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { Header } from 'components/Header/Header';\nimport { SideBar } from 'components/SideBar/SideBar';\nimport { Outlet } from 'react-router-dom';\nimport { MainLayoutContainer, SideBarPlaceholder } from './MainLayout.styled';\nimport { Container } from './MainLayout.styled';\nimport { useCallback } from 'react';\n\nexport const pages = {\n  account: 'User Profile',\n  calendar: 'Calendar',\n  statistics: 'Statistics',\n};\n\nconst MainLayout = ({ children }) => {\n  const [showSideBar, setShowSideBar] = useState(false);\n\n  const addSideBar = () => setShowSideBar(true);\n\n  const removeSideBar = useCallback(() => {\n    setShowSideBar(false);\n  }, []);\n\n  const desktop = useMediaQuery({ minWidth: 1440 });\n\n  return (\n    <MainLayoutContainer>\n      <SideBar removeSideBar={removeSideBar} showSideBar={showSideBar} />\n      {desktop && <SideBarPlaceholder />}\n      <Container>\n        <Header addSideBar={addSideBar} showSideBar={showSideBar} />\n        <Container>\n          {children}\n          <Outlet />\n        </Container>\n      </Container>\n    </MainLayoutContainer>\n  );\n};\n\nexport default MainLayout;\n","const selectTheme = state => state.theme.theme;\n\nexport { selectTheme };\n"],"names":["BurgerButtonEl","styled","BurgerBtn","addSideBar","type","onClick","xlinkHref","sprite","FeedbackButton","min","tablet","FeedbackBtn","openForm","UserInfoBox","UserName","UserAvatarThumb","UserImage","UserAvatar","desktop","ThemeBtn","ThemeToggler","dispatch","useDispatch","curentTheme","useSelector","selectTheme","useEffect","document","documentElement","classList","remove","add","setTheme","THEMES","toggle","UserInfo","isLoggedIn","selectIsLoggedIn","isRefreshingUser","selectIsRefreshingUser","user","selectUser","name","avatarURL","src","href","HeaderSection","PageTitle","Container","max","mobile","Backdrop","CloseButton","IconClose","isOpen","onClose","closeButtonPosition","top","right","children","handleEscKeyPress","event","key","body","style","overflow","window","addEventListener","removeEventListener","ReactDOM","target","currentTarget","id","width","height","getElementById","FormContainer","LabelText","CommentBox","CommentText","ButtonsBox","SaveButton","CancelButton","StarContainer","Star","FilledStar","onRatingChange","useState","rating","setRating","map","star","selectedRating","comment","formData","setFormData","onSubmit","e","preventDefault","console","log","addReviewOperation","Notify","newRating","required","htmlFor","value","onChange","maxLength","placeholder","Header","showSideBar","isDesktop","useMediaQuery","query","location","useLocation","currentPageTitle","pathname","includes","isFormOpen","setIsFormOpen","LogoutButtonEl","LogoutBtn","localStorage","removeItem","logOutOperation","SideBarEl","props","CloseBtn","CloseSideBarBtn","removeSideBar","GooseImg","GooseImage","desktopGooseMainPage","srcSet","desktopGooseMainPage2x","alt","TitleBoxEl","TitleBox","NavTitle","NavList","NavListItem","page","NavLinkSideBar","NavLink","IconWithFill","IconWithStroke","UserNavigation","handleChangeCurrentPage","to","SideBar","minWidth","MainLayoutContainer","SideBarPlaceholder","pages","account","calendar","statistics","setShowSideBar","useCallback","state","theme"],"sourceRoot":""}