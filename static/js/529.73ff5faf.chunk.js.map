{"version":3,"file":"static/js/529.73ff5faf.chunk.js","mappings":"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","sources":["components/Header/BurgerBtn/BurgerBtn.styled.jsx","components/Header/BurgerBtn/BurgerBtn.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.styled.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/ThemeToggler/ThemeToggle.styled.jsx","redux/theme/selectors.js","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.jsx","hooks/useAuth.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/CloseBtn/CloseBtn.styled.jsx","components/SideBar/CloseBtn/CloseBtn.jsx","components/SideBar/GooseImage/GooseImage.styled.jsx","components/SideBar/GooseImage/GooseImage.jsx","components/SideBar/TitleBox/TitleBox.styled.jsx","components/SideBar/TitleBox/TitleBox.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/SideBar.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BurgerButtonEl = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    display: block;\n    fill: transparent;\n    fill: var(--burger-color);\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { BurgerButtonEl } from './BurgerBtn.styled';\n\nexport const BurgerBtn = ({ addSideBar }) => {\n  return (\n    <BurgerButtonEl type=\"button\" onClick={addSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-menu_40px`} />\n      </svg>\n    </BurgerButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const FeedbackButton = styled.button`\n  display: block;\n  height: 100%;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  background-color: var(--btn-bg-color);\n  color: var(--btn-text-color);\n  margin-left: auto;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n  ${min(tablet)} {\n    padding: 12px 32px;\n    font-size: 14px;\n    line-height: 18px;\n  }\n`;\n","import { FeedbackButton } from './FeedbackBtn.styled';\n\nexport const FeedbackBtn = () => {\n  return <FeedbackButton type=\"button\">Feedback</FeedbackButton>;\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const UserInfoBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin-left: 18px;\n  ${min(tablet)} {\n    gap: 14px;\n    margin-left: 24px;\n  }\n`;\n\nexport const UserName = styled.p`\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  ${min(tablet)} {\n    font-size: 18px;\n  }\n`;\n\nexport const UserAvatarThumb = styled.div`\n  position: relative;\n  width: 44px;\n  height: 44px;\n  border: 1.8px solid #3e85f3;\n  overflow: hidden;\n  border-radius: 50%;\n`;\n\nexport const UserImage = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const UserAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 24px;\n    height: 24px;\n    fill: #3e85f32e;\n    .dark & {\n      fill: #ffffff2e;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const ThemeBtn = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    fill: var(--btn-bg-color);\n    display: block;\n    width: 20px;\n    height: 20px;\n    transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    :hover {\n      fill: var(--btn-bg-hover);\n    }\n\n    ${min(tablet)} {\n      width: 32px;\n      height: 32px;\n    }\n  }\n`;\n\n\n","const selectTheme = state => state.theme.theme;\n\nexport { selectTheme };\n","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { ThemeBtn } from './ThemeToggle.styled';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { THEMES } from 'constants/theme/themes';\nimport { useEffect } from 'react';\n\nexport const ThemeToggler = () => {\n  const dispatch = useDispatch();\n  const curentTheme = useSelector(selectTheme);\n\n  useEffect(() => {\n    if (curentTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n      return;\n    }\n    document.documentElement.classList.remove('dark');\n  }, [curentTheme]);\n\n  const handleThemeClick = () => {\n    dispatch(\n      setTheme(curentTheme === THEMES.LIGHT ? THEMES.DARK : THEMES.LIGHT)\n    );\n    document.documentElement.classList.toggle('dark');\n  };\n  return (\n    <ThemeBtn type=\"button\" onClick={handleThemeClick}>\n      {curentTheme === THEMES.LIGHT ? (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-moon`} />\n        </svg>\n      ) : (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-sun`} />\n        </svg>\n      )}\n    </ThemeBtn>\n  );\n};\n\n","import {\n  UserAvatarThumb,\n  UserInfoBox,\n  UserName,\n  UserImage,\n  UserAvatar,\n} from './UserInfo.styled';\nimport { ThemeToggler } from '../ThemeToggler/ThemeToggler';\nimport { useAuth } from 'hooks/useAuth';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const UserInfo = () => {\n  const {\n    user: { name, avatarURL },\n  } = useAuth();\n\n  return (\n    <UserInfoBox>\n      <ThemeToggler />\n      <UserName>{name ? name : 'User'}</UserName>\n      <UserAvatarThumb>\n        {avatarURL ? (\n          <UserImage src={avatarURL} />\n        ) : (\n          <UserAvatar>\n            <use href={`${sprite}#icon-ph_user`}></use>\n          </UserAvatar>\n        )}\n      </UserAvatarThumb>\n    </UserInfoBox>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshingUser,\n} from '../redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshingUser = useSelector(selectIsRefreshingUser);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshingUser,\n    user,\n  };\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const HeaderSection = styled.header`\n  display: flex;\n  padding: 24px 20px 0px 20px;\n  max-width: 375px;\n  height: auto;\n  align-items: center;\n\n  ${min(tablet)} {\n    max-width: 768px;\n    padding: 24px 32px 0px 32px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n    padding: 40px 32px 0px 32px;\n  }\n`;\n\nexport const PageTitle = styled.h2`\n  color: var(--primary-text-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 32px;\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport { BurgerBtn } from './BurgerBtn/BurgerBtn';\nimport { FeedbackBtn } from './FeedbackBtn.jsx/FeedbackBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { HeaderSection, PageTitle } from './Header.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const Header = ({ addSideBar, showSideBar }) => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1440px)',\n  });\n  const location = useLocation();\n\n  const defineCurentPage = () => {\n    if (location.pathname.includes('account')) return 'User profile';\n    if (location.pathname.includes('calendar')) return 'Calendar';\n    if (location.pathname.includes('statistics')) return 'Statistics';\n  };\n  const currentPageTitle = defineCurentPage();\n\n  return (\n    <HeaderSection showSideBar={showSideBar}>\n      {isDesktop ? (\n        <PageTitle>{currentPageTitle}</PageTitle>\n      ) : (\n        <BurgerBtn addSideBar={addSideBar} />\n      )}\n      <FeedbackBtn />\n      <UserInfo />\n    </HeaderSection>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, max, desktop } from 'styles/media';\n\nexport const LogoutButtonEl = styled.button`\n  display: flex;\n  width: 131px;\n  height: 46px;\n  margin: auto auto 0px 0px;\n  flex-shrink: 0;\n  border-radius: 16px;\n  border: none;\n  background-color: var(--btn-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  justify-content: center;\n  align-items: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n\n  color: var(--invert-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.36px;\n\n  ${min(tablet)} {\n    font-size: 18px;\n    width: 141px;\n    height: 56px;\n    line-height: 24px;\n  }\n\n  svg {\n    stroke: var(--btn-text-color);\n    fill: transparent;\n    width: 20px;\n    height: 20px;\n    margin-left: 6px;\n  }\n\n  ${max(desktop - 0.02)} {\n    margin-bottom: 35px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { LogoutButtonEl } from './LogoutBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { logOutOperation } from 'redux/auth/operations';\n\nexport const LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    localStorage.removeItem('type');\n    localStorage.removeItem('date');\n    dispatch(logOutOperation());\n  };\n  return (\n    <LogoutButtonEl type=\"button\" onClick={handleLogOut}>\n      Logout\n      <svg>\n        <use xlinkHref={`${sprite}#icon-log-out`} />\n      </svg>\n    </LogoutButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop, max } from 'styles/media';\n\nconst isShowSideBar = props => {\n  if (props.showSideBar) return '0%';\n  return '-110%';\n};\n\nexport const SideBarEl = styled.aside`\n  display: inline-flex;\n  padding: 24px 24px;\n  flex-direction: column;\n  width: 177px;\n  /* height: 764px; */\n  background-color: var(--sidebar-bg-color);\n  z-index: 5;\n  position: absolute;\n  transform: translateX(${isShowSideBar});\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${min(tablet)} {\n    width: 241px;\n    /* height: 976px; */\n  }\n  ${min(desktop)} {\n    /* height: 852px; */\n    position: static;\n    z-index: 1;\n    transform: translateX(0%);\n  }\n\n  ${max(desktop - 0.02)} {\n    height: 100vh;\n  }\n`;\n\n\n","import styled from '@emotion/styled';\nimport { min, tablet, desktop } from 'styles/media';\n\nexport const CloseBtn = styled.button`\n  display: block;\n  border: none;\n  background-color: inherit;\n  align-items: center;\n  padding: 0px;\n  margin-left: auto;\n  cursor: pointer;\n  svg {\n    fill: transparent;\n    stroke: var(--primary-text-color);\n    display: block;\n    width: 24px;\n    height: 24px;\n    ${min(tablet)} {\n      width: 34px;\n      height: 34px;\n    }\n    ${min(desktop)} {\n      display: none;\n    }\n  }\n`;\n","import { CloseBtn } from './CloseBtn.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const CloseSideBarBtn = ({ removeSideBar }) => {\n  return (\n    <CloseBtn onClick={removeSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-x-close`} />\n      </svg>\n    </CloseBtn>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const GooseImg = styled.img`\n  width: 36px;\n  height: 35px;\n\n  ${min(tablet)} {\n    width: 60px;\n    height: 58px;\n  }\n  ${min(desktop)} {\n    width: 71px;\n    height: 68px;\n  }\n`;\n","import desktopGooseMainPage from 'assets/images/mainPage/desktop_GooseMainPage.png';\nimport desktopGooseMainPage2x from 'assets/images/mainPage/desktop_GooseMainPage@2x.png';\nimport { GooseImg } from './GooseImage.styled';\n\nexport const GooseImage = () => {\n  return (\n    <GooseImg\n      src={desktopGooseMainPage}\n      srcSet={`${desktopGooseMainPage} 1x, ${desktopGooseMainPage2x} 2x`}\n      alt=\"The goose invites you to organize your life and manage your team \"\n    />\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const TitleBoxEl = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n  ${min(tablet)} {\n    margin-bottom: 50px;\n  }\n  ${min(desktop)} {\n    margin-bottom: 32px;\n  }\n\n  h2 {\n    display: block;\n    margin: 0 0 0 6px;\n    color: var(--accent-color);\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n      0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 22px;\n    ${min(tablet)} {\n      font-size: 22px;\n    }\n    ${min(desktop)} {\n      font-size: 24px;\n      line-height: 24px;\n      margin: 0 0 0 10px;\n    }\n\n    span {\n      color: var(--accent-color);\n      font-family: Inter;\n      font-size: 16px;\n      font-style: italic;\n      font-weight: 700;\n      line-height: 24px;\n      margin-left: -1px;\n      margin-right: 2px;\n      ${min(tablet)} {\n        font-size: 22px;\n      }\n      ${min(desktop)} {\n        font-size: 24px;\n      }\n    }\n  }\n`;\n","import { CloseSideBarBtn } from '../CloseBtn/CloseBtn';\nimport { GooseImage } from '../GooseImage/GooseImage';\nimport { TitleBoxEl } from './TitleBox.styled';\n\nexport const TitleBox = ({ removeSideBar }) => {\n  return (\n    <TitleBoxEl>\n      <GooseImage />\n      <h2>\n        G<span>oo</span>seTrack\n      </h2>\n      <CloseSideBarBtn removeSideBar={removeSideBar} />\n    </TitleBoxEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { tablet, min } from 'styles/media';\n\n// const isFilledIcon = props => {\n//   if (props.to === 'statistics') return 'var(--sidebar-text-color)';\n//   return 'transparent';\n// };\n\nexport const NavTitle = styled.h3`\n  margin: 0 0 24px 0;\n  color: var(--sidebar-text-color);\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 14px;\n  }\n`;\nexport const NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin: 0px;\n  padding: 0px;\n  gap: 18px;\n  list-style: none;\n`;\n\nexport const NavListItem = styled.li`\n  display: block;\n\n  background-color: ${props => {\n    const location = useLocation();\n    if (location.pathname.includes(props.page))\n      return 'var(--sidebar-accent-color)';\n    return 'transparent';\n  }};\n\n  padding: 10px 0px 10px 12px;\n  border-radius: 8px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--sidebar-accent-color);\n  }\n`;\n\nexport const NavLinkSideBar = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: var(--sidebar-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 16px;\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 8px;\n    ${min(tablet)} {\n      width: 24px;\n      height: 24px;\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const IconWithFill = styled.svg`\n  stroke: transparent;\n  fill: var(--sidebar-text-color);\n  /* stroke: var(--sidebar-text-color);\n    fill: transparent; */\n  /* width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  ${min(tablet)} {\n    width: 24px;\n    height: 24px;\n    margin-right: 10px;\n  } */\n`;\n\nexport const IconWithStroke = styled.svg`\n  stroke: var(--sidebar-text-color);\n  fill: transparent;\n`;\n","import {\n  NavTitle,\n  NavList,\n  NavListItem,\n  NavLinkSideBar,\n  IconWithStroke,\n  IconWithFill,\n} from './UserNav.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n// import { pages } from 'components/MainLayout/MainLayout';\n\nexport const UserNavigation = ({\n  removeSideBar,\n  // currentPage,\n  // changeCurrentPage,\n}) => {\n  const handleChangeCurrentPage = page => {\n    removeSideBar();\n    // changeCurrentPage(page);\n  };\n  // console.log(pages);\n  return (\n    <>\n      <NavTitle>User panel</NavTitle>\n      <nav>\n        <NavList>\n          <NavListItem page=\"account\">\n            <NavLinkSideBar to=\"account\" onClick={handleChangeCurrentPage}>\n              <IconWithStroke>\n                <use xlinkHref={`${sprite}#icon-user`} />\n              </IconWithStroke>\n              My account\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem page=\"calendar\">\n            <NavLinkSideBar to=\"calendar\" onClick={handleChangeCurrentPage}>\n              <IconWithStroke>\n                <use xlinkHref={`${sprite}#icon-calendar`} />\n              </IconWithStroke>\n              Calendar\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem page=\"statistics\">\n            <NavLinkSideBar to=\"statistics\" onClick={handleChangeCurrentPage}>\n              <IconWithFill>\n                <use xlinkHref={`${sprite}#icon-chart`} />\n              </IconWithFill>\n              Statistics\n            </NavLinkSideBar>\n          </NavListItem>\n        </NavList>\n      </nav>\n    </>\n  );\n};\n","import { LogoutBtn } from './LogoutBtn.jsx/LogoutBtn';\nimport { SideBarEl } from './SideBar.styled';\nimport { TitleBox } from './TitleBox/TitleBox';\nimport { UserNavigation } from './UserNav/UserNav';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const SideBar = ({ removeSideBar, showSideBar }) => {\n  const desktop = useMediaQuery({ minWidth: 1440 });\n  if (showSideBar && !desktop) {\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = 'auto';\n  }\n\n  return (\n    <SideBarEl showSideBar={showSideBar}>\n      <TitleBox removeSideBar={removeSideBar} />\n      <UserNavigation removeSideBar={removeSideBar} />\n      <LogoutBtn />\n    </SideBarEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const MainLayoutContainer = styled.div`\n  display: flex;\n  position: relative;\n  margin: 0 auto;\n  height: 100%;\n  max-width: 375px;\n  background: var(--page-bg-color);\n  overflow-x: hidden;\n  ${min(tablet)} {\n    max-width: 768px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  background-color: var(--page-bg-color);\n`;\n\n","import { useState } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { SideBar } from 'components/SideBar/SideBar';\nimport { Outlet } from 'react-router-dom';\nimport { MainLayoutContainer } from './MainLayout.styled';\nimport { Container } from './MainLayout.styled';\nimport { useCallback } from 'react';\n\nexport const pages = {\n  account: 'User Profile',\n  calendar: 'Calendar',\n  statistics: 'Statistics',\n};\n\nconst MainLayout = ({ children }) => {\n  const [showSideBar, setShowSideBar] = useState(false);\n\n  const addSideBar = () => setShowSideBar(true);\n  \n  const removeSideBar = useCallback(() => {\n    setShowSideBar(false);\n  }, []);\n\n\n  return (\n    <MainLayoutContainer>\n      <SideBar removeSideBar={removeSideBar} showSideBar={showSideBar} />\n      <Container>\n        <Header addSideBar={addSideBar} showSideBar={showSideBar} />\n        <Container>\n          {children}\n          <Outlet />\n        </Container>\n      </Container>\n    </MainLayoutContainer>\n  );\n};\n\nexport default MainLayout;\n"],"names":["BurgerButtonEl","styled","BurgerBtn","addSideBar","type","onClick","xlinkHref","sprite","FeedbackButton","min","tablet","FeedbackBtn","UserInfoBox","UserName","UserAvatarThumb","UserImage","UserAvatar","desktop","ThemeBtn","selectTheme","state","theme","ThemeToggler","dispatch","useDispatch","curentTheme","useSelector","useEffect","document","documentElement","classList","remove","add","setTheme","THEMES","toggle","UserInfo","isLoggedIn","selectIsLoggedIn","isRefreshingUser","selectIsRefreshingUser","user","selectUser","name","avatarURL","src","href","HeaderSection","PageTitle","Header","showSideBar","isDesktop","useMediaQuery","query","location","useLocation","currentPageTitle","pathname","includes","LogoutButtonEl","max","LogoutBtn","localStorage","removeItem","logOutOperation","SideBarEl","props","CloseBtn","CloseSideBarBtn","removeSideBar","GooseImg","GooseImage","desktopGooseMainPage","srcSet","desktopGooseMainPage2x","alt","TitleBoxEl","TitleBox","NavTitle","NavList","NavListItem","page","NavLinkSideBar","NavLink","IconWithFill","IconWithStroke","UserNavigation","handleChangeCurrentPage","to","SideBar","minWidth","body","style","overflow","MainLayoutContainer","Container","pages","account","calendar","statistics","children","useState","setShowSideBar","useCallback"],"sourceRoot":""}