{"version":3,"file":"static/js/666.b62cad55.chunk.js","mappings":"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","sources":["components/MainContainer/MainContainer.styled.jsx","components/MainContainer/MainContainer.jsx","components/Account/UserInfo/UserInfo.styled.jsx","helpers/optimizeImage.js","components/Account/UserInfo/UserInfo.jsx","components/Account/UserForm/UserForm.styled.jsx","components/Account/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const Main = styled.main`\n  background-color: var(--page-bg-color);\n  padding-top: 64px;\n  padding-bottom: 40px;\n\n  ${min(tablet)} {\n    padding-bottom: 38px;\n  }\n\n  ${min(desktop)} {\n    padding-top: 38px;\n    padding-bottom: 32px;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 0 20px;\n\n  ${min(tablet)} {\n    padding: 0 32px;\n  }\n`;\n","import { Container, Main } from './MainContainer.styled';\n\nexport const MainContainer = ({ children }) => {\n  return (\n    <Main>\n      <Container>{children}</Container>\n    </Main>\n  );\n};\n","import styled from '@emotion/styled';\nimport { min, tablet, desktop } from 'styles/media';\n\nexport const UserContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  margin-bottom: 40px;\n  max-width: 299px;\n  flex-direction: column;\n  align-items: center;\n\n  ${min(tablet)} {\n    max-width: 704px;\n    margin-bottom: 66px;\n  }\n  ${min(desktop)} {\n    max-width: 1087px;\n    display: flex;\n    margin-bottom: 44px;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  margin: -31px 0 18px;\n  border: solid 2px var(--accent-color);\n  overflow: hidden;\n  ${min(tablet)} {\n    margin: 40px 0 20px;\n  }\n  ${min(desktop)} {\n    position: relative;\n    width: 124px;\n    height: 124px;\n    border-radius: 50%;\n    margin: 60px 0 20px;\n    border: solid 2px var(--accent-color);\n  }\n`;\nexport const AddAvatarButton = styled.label`\n  position: absolute;\n  bottom: 16px;\n  right: 14px;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: none;\n  background-color: var(--accent-color);\n  z-index: 1;\n  cursor: pointer;\n  ${min(tablet)} {\n    bottom: 19px;\n  }\n  ${min(desktop)} {\n    position: absolute;\n    bottom: 16px;\n    right: 24px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    border: none;\n    background-color: var(--accent-color);\n    cursor: pointer;\n  }\n`;\nexport const AddAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  fill: transparent;\n  stroke: var(--primary-bg-color);\n  .dark & {\n    stroke: var(--primary-text-color);\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 24px;\n    height: 24px;\n    fill: transparent;\n    stroke: var(--primary-bg-color);\n    .dark & {\n      stroke: var(--primary-text-color);\n    }\n  }\n`;\nexport const UserAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 48px;\n  height: 48px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 48px;\n    height: 48px;\n    fill: #3e85f32e;\n    .dark & {\n      fill: #ffffff2e;\n    }\n  }\n`;\nexport const UserName = styled.p`\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n\n  font-weight: 700;\n  line-height: 18px;\n  margin: 0 0 4px 0;\n  .dark & {\n    color: var(--primary-text-color);\n  }\n  ${min(desktop)} {\n    color: var(--secondary-text-color);\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 18px;\n    margin: 0 0 8px 0;\n    .dark & {\n      color: var(--primary-text-color);\n    }\n  }\n`;\nexport const UserStatus = styled.p`\n  margin: 0;\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 12px;\n\n  font-weight: 600;\n  line-height: 14px;\n  .dark & {\n    color: var(--user-label-color);\n  }\n  ${min(desktop)} {\n    margin: 0;\n    color: var(--secondary-text-color);\n    font-family: Inter;\n    font-size: 14px;\n\n    font-weight: 600;\n    line-height: 18px;\n    .dark & {\n      color: var(--user-label-color);\n    }\n  }\n`;\n\nexport const InputFile = styled.input`\n  display: none;\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n\n  object-fit: cover;\n`;\nexport const UserWrapper = styled.div`\n  position: relative;\n`;\n","export const optimizeImage = async file => {\n  const maxWidth = 200;\n  const maxHeight = 200;\n\n  return new Promise(resolve => {\n    const img = new Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      let newWidth, newHeight;\n\n      if (img.width > img.height) {\n        newWidth = maxWidth;\n        newHeight = (img.height * maxWidth) / img.width;\n      } else {\n        newWidth = (img.width * maxHeight) / img.height;\n        newHeight = maxHeight;\n      }\n\n      canvas.width = newWidth;\n      canvas.height = newHeight;\n      ctx.drawImage(img, 0, 0, newWidth, newHeight);\n\n      canvas.toBlob(blob => {\n        resolve(new File([blob], file.name, { type: file.type }));\n      }, file.type);\n    };\n  });\n};\n","import React from 'react';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nimport {\n  UserContainer,\n  AvatarWrapper,\n  UserAvatar,\n  AddAvatar,\n  AddAvatarButton,\n  UserName,\n  UserStatus,\n  InputFile,\n  AvatarImage,\n  UserWrapper,\n} from './UserInfo.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserAvatarOperation } from 'redux/auth/operations';\nimport { selectUser, selectUserAvatar } from 'redux/auth/selectors';\nimport { optimizeImage } from 'helpers/optimizeImage';\n\nexport const UserInfo = () => {\n  const dispatch = useDispatch();\n  const avatarCloud = useSelector(selectUserAvatar);\n  const { name } = useSelector(selectUser);\n\n  const fileInputChange = async e => {\n    const file = e.target.files[0];\n    console.log(file);\n\n    const optimizedImage = await optimizeImage(file);\n\n    const formData = new FormData();\n    formData.append('avatar', optimizedImage);\n\n    dispatch(updateUserAvatarOperation(formData));\n  };\n\n  return (\n    <UserContainer>\n      <UserWrapper>\n        <AddAvatarButton>\n          <InputFile type=\"file\" name=\"avatar\" onChange={fileInputChange} />\n          <AddAvatar>\n            <use href={`${sprite}#icon-plus`}></use>\n          </AddAvatar>\n        </AddAvatarButton>\n        <AvatarWrapper>\n          {avatarCloud ? (\n            <AvatarImage src={avatarCloud} alt=\"avatar\" />\n          ) : (\n            <UserAvatar>\n              <use href={`${sprite}#icon-ph_user`}></use>\n            </UserAvatar>\n          )}\n        </AvatarWrapper>\n      </UserWrapper>\n      <UserName>{name}</UserName>\n      <UserStatus>User</UserStatus>\n    </UserContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { min, tablet, desktop } from 'styles/media';\nimport DatePicker from 'react-datepicker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nexport const Container = styled.div`\n  max-width: 335px;\n  height: 653px;\n  border-radius: 16px;\n  background-color: var(--primary-bg-color);\n  .dark & {\n    background-color: var(--primary-bg-color);\n  }\n  ${min(tablet)} {\n    max-width: 704px;\n    height: 854px;\n  }\n\n  ${min(desktop)} {\n    max-width: 1087px;\n    height: 752px;\n    background-image: none;\n    border-radius: 16px;\n    background-color: var(--primary-bg-color);\n    .dark & {\n      background-color: var(--primary-bg-color);\n    }\n  }\n`;\n\nexport const AddUserForm = styled(Form)`\n  max-width: 299px;\n  height: 392px;\n  margin: 0 auto;\n  ${min(tablet)} {\n    margin: 0 auto;\n    max-width: 354px;\n    height: 458px;\n  }\n  ${min(desktop)} {\n    position: relative;\n    max-width: 758px;\n    height: 200px;\n    margin: 0 auto;\n    display: grid;\n    grid-template: repeat(3, 1fr) / repeat(2, 1fr);\n    justify-content: center;\n    gap: 18px 50px;\n  }\n`;\nexport const FieldContainer = styled.div`\n  position: relative;\n  max-width: 283px;\n\n  ${min(tablet)} {\n    max-width: 334px;\n  }\n`;\nexport const FormField = styled(Field)`\n  ::-webkit-calendar-picker-indicator {\n    margin: 0 10px 0;\n    cursor: pointer;\n    opacity: 0;\n  }\n  max-width: 299px;\n  padding: 12px 0 12px 14px;\n  margin-bottom: 18px;\n  border: 1px solid;\n  border-color: ${({ errors, touched }) =>\n    touched\n      ? errors\n        ? 'var(--error-color);'\n        : 'var(--success-color);'\n      : 'var(--input-border-color);'};\n  border-radius: 8px;\n  color: var(--primary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  &focus {\n    border-color: var(--input-border-color-focus);\n  }\n  .dark & {\n    background-color: var(--primary-bg-color);\n    color: var(--primary-text-color);\n    border-color: var(--calendar-grid-border);\n  }\n\n  ${min(tablet)} {\n    max-width: 334px;\n    padding: 14px 0 14px 18px;\n    margin-bottom: 24px;\n  }\n  ${min(desktop)} {\n    margin: 0;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 18px;\n    &focus {\n      border-color: var(--input-border-color-focus);\n    }\n    .dark & {\n      background-color: var(--primary-bg-color);\n      color: var(--primary-text-color);\n      border-color: var(--calendar-grid-border);\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: var(--primary-text-color);\n  font-family: Inter;\n  font-size: 12px;\n  line-height: 14px;\n  .dark & {\n    color: var(--user-label-color);\n  }\n  ${min(desktop)} {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    color: var(--primary-text-color);\n    font-family: Inter;\n    font-size: 14px;\n    line-height: 18px;\n    .dark & {\n      color: var(--user-label-color);\n    }\n  }\n`;\n\nexport const Span = styled.div`\n  position: relative;\n  max-width: 299px;\n\n  .react-datepicker__header {\n    text-align: center;\n    background-color: #3e85f3;\n    border-bottom: 1px solid #fff;\n    border-top-left-radius: 16px;\n    padding: 8px 0;\n    position: relative;\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n  }\n\n  .react-datepicker {\n    background-color: #3e85f3;\n    color: #000;\n    border-radius: 16px;\n    display: inline-block;\n    position: relative;\n  }\n  .react-datepicker__navigation-icon::before {\n    border-color: #fff;\n  }\n  .react-datepicker__current-month {\n    margin-top: 0;\n    color: #fff;\n    font-weight: bold;\n    font-size: 0.944rem;\n  }\n  .react-datepicker__day-name {\n    color: #fff;\n    display: inline-block;\n    width: 1.7rem;\n    line-height: 1.7rem;\n    text-align: center;\n    margin: 0.166rem;\n  }\n\n  .react-datepicker__day {\n    cursor: pointer;\n    color: #fff;\n    display: inline-block;\n    width: 1.7rem;\n    line-height: 1.7rem;\n    text-align: center;\n    margin: 0.166rem;\n    &:hover {\n      border-radius: 50%;\n      background-color: var(--datepicker-day-accent-bg-color) !important;\n      color: var(--datepicker-day-accent-text-color);\n    }\n  }\n\n  .react-datepicker__day--selected {\n    border-radius: 50%;\n    background-color: #fff;\n    color: #3e85f3;\n  }\n  .react-datepicker__navigation {\n    border-color: #fff;\n  }\n  ${min(tablet)} {\n    max-width: 354px;\n  }\n\n  .react-datepicker__month-dropdown,\n  .react-datepicker__year-dropdown,\n  .react-datepicker__month-dropdown-container--select,\n  .react-datepicker__year-dropdown-container--select {\n    padding: 10px 0;\n    text-align: left;\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: transparent;\n  }\n\n  .react-datepicker__month-select,\n  .react-datepicker__year-select {\n    background-color: var(--accent-color) !important;\n    color: var(--datepicker-day-text-color);\n    outline: none;\n    border: none;\n\n    & option {\n      margin-bottom: 2px;\n      display: inline-flex;\n      font-size: 12px;\n      min-height: 10px;\n      line-height: 18px !important;\n      display: block;\n      height: 18px !important;\n      padding: 0;\n      /* text-align: left; */\n      align-self: flex-start;\n\n      &:hover {\n        background-color: var(--datepicker-day-accent-bg-color) !important;\n        color: var(--datepicker-day-accent-text-color);\n      }\n    }\n    /* \n    } */\n  }\n\n  .react-datepicker__triangle {\n    display: none;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: transparent !important;\n  }\n\n  .weekend {\n    opacity: 0.35;\n  }\n`;\n\nexport const ChevronDown = styled.svg`\n  position: absolute;\n  top: 36px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  pointer-events: none;\n  fill: var(--primary-text-color);\n  ${min(tablet)} {\n    top: 38px;\n  }\n  ${min(desktop)} {\n    top: 42px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 22px;\n\n  ${min(desktop)} {\n    position: absolute;\n    top: 352px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Button = styled.button`\n  width: 196px;\n  height: 46px;\n  border: none;\n  cursor: pointer;\n  padding: 10px 0px;\n  border-radius: 16px;\n  color: var(--primary-bg-color);\n  background-color: var(--btn-bg-color);\n  text-align: center;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n\n  &:hover {\n    background-color: var(--btn-bg-hover);\n  }\n  .dark & {\n    color: var(--primary-text-color);\n  }\n\n  ${min(desktop)} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    max-width: 262px;\n    height: 48px;\n    border: none;\n    cursor: pointer;\n    padding: 10px 0px;\n    border-radius: 16px;\n    color: var(--primary-bg-color);\n    background-color: var(--btn-bg-color);\n\n    &:hover {\n      background-color: var(--btn-bg-hover);\n    }\n    .dark & {\n      color: var(--primary-text-color);\n    }\n  }\n`;\nexport const IconStatus = styled.svg`\n  position: absolute;\n  fill: ${({ error }) =>\n    error ? 'var(--error-color)' : 'var(--success-color)'};\n  height: 22px;\n  width: 22px;\n  right: ${({ birthday }) => (birthday ? '35px' : '14px')};\n  top: 45px;\n  transform: translateY(-50%);\n\n  ${min(tablet)} {\n    height: 24px;\n    width: 24px;\n    right: ${({ birthday }) => (birthday ? '39px' : '18px')};\n  }\n  ${min(desktop)} {\n    top: 50px;\n  }\n`;\nexport const ErrorMessageText = styled.span`\n  position: absolute;\n  top: 70px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  color: ${({ error }) =>\n    error ? 'var(--error-color)' : 'var(--success-color)'};\n  ${min(tablet)} {\n    top: 75px;\n  }\n  ${min(desktop)} {\n    top: 80px;\n  }\n`;\nexport const Wrapper = styled(DatePicker)`\n  width: 100%;\n  color: white;\n  padding: 12px 0 12px 14px;\n  margin-bottom: 18px;\n  border: 1px solid;\n  width: 100%;\n  border-color: ${({ errors, touched }) =>\n    touched\n      ? errors\n        ? 'var(--error-color);'\n        : 'var(--success-color);'\n      : 'var(--input-border-color);'};\n  border-radius: 8px;\n  color: var(--primary-text-color);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  cursor: pointer;\n  &focus {\n    border-color: var(--input-border-color-focus);\n  }\n  .dark & {\n    background-color: var(--primary-bg-color);\n    color: var(--primary-text-color);\n    border-color: var(--calendar-grid-border);\n  }\n`;\n","import React from 'react';\nimport { Formik, useFormik } from 'formik';\nimport { object, string, number, date } from 'yup';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport {\n  Container,\n  AddUserForm,\n  FormField,\n  Label,\n  Button,\n  ButtonContainer,\n  ChevronDown,\n  Span,\n  IconStatus,\n  FieldContainer,\n  ErrorMessageText,\n  Wrapper,\n} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserDataOperation } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\nimport { Notify } from 'notiflix';\nimport moment from 'moment';\n\nconst schema = object().shape({\n  username: string().max(16).required(),\n  phone: number(),\n  birthday: date(),\n  skype: string().max(16),\n  email: string().email().required(),\n});\n\nexport const UserForm = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const initialValues = {\n    username: user.name,\n    phone: user.phone,\n    birthday: user.birthday,\n    skype: user.social,\n    email: user.email,\n  };\n\n  const {\n    values,\n    errors,\n    dirty,\n    isSubmitting,\n    resetForm,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n  } = useFormik({\n    initialValues: initialValues,\n    validationSchema: schema,\n    validateOnChange: false,\n    enableReinitialize: true,\n    onSubmit: onSubmit,\n  });\n\n  async function onSubmit(values) {\n    const newData = {\n      name: values.username,\n      email: values.email,\n      birthday: moment(values.birthday).format('YYYY-MM-DD'),\n      phone: values.phone,\n      social: values.skype,\n    };\n    await dispatch(updateUserDataOperation(newData));\n    Notify.success('Data update successfully');\n    resetForm();\n  }\n\n  const isWeekend = date => {\n    const day = date.getDay();\n    return day === 0 || day === 6 ? 'weekend' : '';\n  };\n\n  return (\n    <Container>\n      <UserInfo />\n      <Formik>\n        <AddUserForm name=\"userform\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <FieldContainer>\n            <Label>\n              User Name\n              <FormField\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Enter your name\"\n                value={values.username}\n                onChange={handleChange('username')}\n                onBlur={handleBlur('username')}\n                errors={errors.username}\n                touched={\n                  values.username !== initialValues.username\n                    ? values.username\n                    : ''\n                }\n              />\n              {values.username !== initialValues.username && (\n                <IconStatus error={errors.username}>\n                  <use\n                    xlinkHref={`${sprite}${\n                      errors.username ? '#icon-error' : '#icon-done'\n                    }`}\n                  />\n                </IconStatus>\n              )}\n              {values.username !== initialValues.username &&\n                (errors.username ? (\n                  <ErrorMessageText error>{errors.username}</ErrorMessageText>\n                ) : (\n                  <ErrorMessageText>This is an CORRECT name</ErrorMessageText>\n                ))}\n            </Label>\n          </FieldContainer>\n          <FieldContainer>\n            <Label>\n              Phone\n              <FormField\n                type=\"tel\"\n                name=\"phone\"\n                placeholder=\"Enter your phone number\"\n                value={values.phone}\n                onChange={handleChange('phone')}\n                onBlur={handleBlur('phone')}\n                errors={errors.phone}\n                touched={\n                  values.phone !== initialValues.phone ? values.phone : ''\n                }\n              />\n              {values.phone !== initialValues.phone && (\n                <IconStatus error={errors.phone}>\n                  <use\n                    xlinkHref={`${sprite}${\n                      errors.phone ? '#icon-error' : '#icon-done'\n                    }`}\n                  />\n                </IconStatus>\n              )}\n              {values.phone !== initialValues.phone &&\n                (errors.phone ? (\n                  <ErrorMessageText error>{errors.phone}</ErrorMessageText>\n                ) : (\n                  <ErrorMessageText>This is an CORRECT phone</ErrorMessageText>\n                ))}\n            </Label>\n          </FieldContainer>\n          <Span>\n            <FieldContainer>\n              <Label>\n                Birthday\n                <Wrapper\n                  name=\"birthday\"\n                  placeholderText=\"YYYY-MM-DD\"\n                  value={values.birthday}\n                  dateFormat=\"yyyy-MM-dd\"\n                  selected={values.birthday ? new Date(values.birthday) : null}\n                  onChange={date => setFieldValue('birthday', date)}\n                  calendarStartDay={1}\n                  formatWeekDay={weekDay => weekDay.charAt(0)}\n                  minDate={new Date(1950, 0, 1)}\n                  maxDate={new Date()}\n                  onBlur={handleBlur('birthday')}\n                  showMonthDropdown\n                  showYearDropdown\n                  shouldCloseOnSelect\n                  dropdownMode=\"select\"\n                  dayClassName={isWeekend}\n                />\n                <ChevronDown>\n                  <use href={`${sprite}#icon-chevron-down`}></use>\n                </ChevronDown>\n                {values.birthday !== initialValues.birthday && (\n                  <IconStatus error={errors.birthday} birthday>\n                    <use\n                      xlinkHref={`${sprite}${\n                        errors.birthday ? '#icon-error' : '#icon-done'\n                      }`}\n                    />\n                  </IconStatus>\n                )}\n                {values.birthday !== initialValues.birthday &&\n                  (errors.birthday ? (\n                    <ErrorMessageText error>{errors.birthday}</ErrorMessageText>\n                  ) : (\n                    <ErrorMessageText>This is an CORRECT date</ErrorMessageText>\n                  ))}\n              </Label>\n            </FieldContainer>\n          </Span>\n          <FieldContainer>\n            <Label>\n              Skype\n              <FormField\n                type=\"text\"\n                name=\"skype\"\n                placeholder=\"Add a skype number\"\n                value={values.skype}\n                onChange={handleChange('skype')}\n                onBlur={handleBlur('skype')}\n                errors={errors.skype}\n                touched={\n                  values.skype !== initialValues.skype ? values.skype : ''\n                }\n              />\n              {values.skype !== initialValues.skype && (\n                <IconStatus error={errors.skype}>\n                  <use\n                    xlinkHref={`${sprite}${\n                      errors.skype ? '#icon-error' : '#icon-done'\n                    }`}\n                  />\n                </IconStatus>\n              )}\n              {values.skype !== initialValues.skype &&\n                (errors.skype ? (\n                  <ErrorMessageText error>{errors.skype}</ErrorMessageText>\n                ) : (\n                  <ErrorMessageText>\n                    This is an CORRECT skype number\n                  </ErrorMessageText>\n                ))}\n            </Label>\n          </FieldContainer>\n          <FieldContainer>\n            <Label>\n              Email\n              <FormField\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={values.email}\n                onChange={handleChange('email')}\n                onBlur={handleBlur('email')}\n                errors={errors.email}\n                touched={\n                  values.email !== initialValues.email ? values.email : ''\n                }\n              />\n              {values.email !== initialValues.email && (\n                <IconStatus error={errors.email}>\n                  <use\n                    xlinkHref={`${sprite}${\n                      errors.email ? '#icon-error' : '#icon-done'\n                    }`}\n                  />\n                </IconStatus>\n              )}\n              {values.email !== initialValues.email &&\n                (errors.email ? (\n                  <ErrorMessageText error>{errors.email}</ErrorMessageText>\n                ) : (\n                  <ErrorMessageText>This is an CORRECT email</ErrorMessageText>\n                ))}\n            </Label>\n          </FieldContainer>\n          <ButtonContainer>\n            <Button type=\"submit\" disabled={!dirty || isSubmitting}>\n              Save changes\n            </Button>\n          </ButtonContainer>\n        </AddUserForm>\n      </Formik>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { UserForm } from 'components/Account/UserForm/UserForm';\nimport { MainContainer } from 'components/MainContainer/MainContainer';\nconst AccountPage = () => {\n  return (\n    <MainContainer>\n      <UserForm />\n    </MainContainer>\n  );\n};\n\nexport default AccountPage;\n"],"names":["Main","styled","min","tablet","desktop","Container","MainContainer","children","UserContainer","AvatarWrapper","AddAvatarButton","AddAvatar","UserAvatar","UserName","UserStatus","InputFile","AvatarImage","UserWrapper","optimizeImage","file","Promise","resolve","img","Image","src","URL","createObjectURL","onload","newWidth","newHeight","canvas","document","createElement","ctx","getContext","width","height","drawImage","toBlob","blob","File","name","type","UserInfo","dispatch","useDispatch","avatarCloud","useSelector","selectUserAvatar","selectUser","fileInputChange","e","target","files","console","log","optimizedImage","formData","FormData","append","updateUserAvatarOperation","onChange","href","sprite","alt","AddUserForm","Form","FieldContainer","FormField","Field","errors","touched","Label","Span","ChevronDown","ButtonContainer","Button","IconStatus","error","birthday","ErrorMessageText","Wrapper","DatePicker","schema","object","shape","username","string","max","required","phone","number","date","skype","email","UserForm","user","initialValues","social","useFormik","validationSchema","validateOnChange","enableReinitialize","onSubmit","values","dirty","isSubmitting","resetForm","handleChange","handleBlur","handleSubmit","setFieldValue","newData","moment","format","updateUserDataOperation","Notify","autoComplete","placeholder","value","onBlur","xlinkHref","placeholderText","dateFormat","selected","Date","calendarStartDay","formatWeekDay","weekDay","charAt","minDate","maxDate","showMonthDropdown","showYearDropdown","shouldCloseOnSelect","dropdownMode","dayClassName","day","getDay","disabled"],"sourceRoot":""}