{"version":3,"file":"static/js/647.87234570.chunk.js","mappings":"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","sources":["components/Header/BurgerBtn/BurgerBtn.styled.jsx","components/Header/BurgerBtn/BurgerBtn.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.styled.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/ThemeToggler/ThemeToggle.styled.jsx","redux/theme/selectors.js","constants/theme/themes.js","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.jsx","hooks/useAuth.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/CloseBtn/CloseBtn.styled.jsx","components/SideBar/CloseBtn/CloseBtn.jsx","components/SideBar/GooseImage/GooseImage.styled.jsx","components/SideBar/GooseImage/GooseImage.jsx","components/SideBar/TitleBox/TitleBox.styled.jsx","components/SideBar/TitleBox/TitleBox.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/SideBar.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BurgerButtonEl = styled.button`\n  display: block;\n  /* width: 24px;\n  height: 24px; */\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    display: block;\n    fill: transparent;\n    stroke: var(--star-color-active);\n    width: 24px;\n    height: 24px;\n    use {\n      fill: var(--star-color-active);\n      /* stroke: var(--star-color-active); */\n    }\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { BurgerButtonEl } from './BurgerBtn.styled';\n\n\nexport const BurgerBtn = ({ addSideBar }) => {\n  return (\n    <BurgerButtonEl type=\"button\" onClick={addSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-burger`} />\n      </svg>\n    </BurgerButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const FeedbackButton = styled.button`\n  display: block;\n  height: 100%;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  background-color: var(--btn-bg-color);\n  color: var(--btn-text-color);\n  margin-left: auto;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n  ${min(tablet)} {\n    padding: 12px 32px;\n    font-size: 14px;\n    line-height: 18px;\n  }\n`;\n","import { FeedbackButton } from './FeedbackBtn.styled';\n\nexport const FeedbackBtn = () => {\n  return <FeedbackButton type=\"button\">Feedback</FeedbackButton>;\n};\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const UserInfoBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin-left: 18px;\n  ${min(tablet)} {\n    gap: 14px;\n    margin-left: 24px;\n  }\n`;\n\nexport const UserName = styled.p`\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  ${min(tablet)} {\n    font-size: 18px;\n  }\n`;\n\nexport const UserAvatarThumb = styled.div`\n  width: 44px;\n  height: 44px;\n  border-radius: 44px;\n  border: 1.8px solid #3e85f3;\n\n  background: ${props => (props.userAvatarUrl ? props.userAvatarUrl : '')},\n    lightgray 50% / cover no-repeat;\n`;\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const ThemeBtn = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    fill: var(--btn-bg-color);\n    display: block;\n    width: 20px;\n    height: 20px;\n    transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    :hover {\n      fill: var(--btn-bg-hover);\n    }\n\n    ${min(tablet)} {\n      width: 32px;\n      height: 32px;\n    }\n  }\n`;\n\n\n","const selectTheme = state => state.theme.theme;\n\nexport { selectTheme };\n","export const THEMES = Object.freeze({\n  LIGHT: 'light',\n  DARK: 'dark',\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { ThemeBtn } from './ThemeToggle.styled';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { THEMES } from 'constants/theme/themes';\nimport { useEffect } from 'react';\n// import { useEffect } from 'react';\n\nexport const ThemeToggler = () => {\n  const dispatch = useDispatch();\n  const curentTheme = useSelector(selectTheme);\n\n  useEffect(() => {\n    if (curentTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n      return;\n    }\n    document.documentElement.classList.remove('dark');\n  }, [curentTheme]);\n\n  const handleThemeClick = () => {\n    // const r = localStorage.getItem('persist:theme');\n    dispatch(\n      setTheme(curentTheme === THEMES.LIGHT ? THEMES.DARK : THEMES.LIGHT)\n    );\n\n    document.documentElement.classList.toggle('dark');\n  };\n  return (\n    <ThemeBtn type=\"button\" onClick={handleThemeClick}>\n      {curentTheme === THEMES.LIGHT ? (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-sun`} />\n        </svg>\n      ) : (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-moon`} />\n        </svg>\n      )}\n    </ThemeBtn>\n  );\n};\n\n// по спрайту. я в компонент, де треба юзати імпортую цей файл\n\n// import sprite from '../../../images/icons/icons.svg';\n\n// і в місці, де треба вставляти прописую\n\n//  <IconDone>\n//         <use xlinkHref={`${sprite}#icon-Done`} width={40} height={40} />\n//       </IconDone>\n\n// окремо в файлі стилів\n\n// export const IconDone = styled.svg`\n//   margin-top: 10px;\n//   margin-left: 500px;\n//   stroke: pink;\n//   height: 40px;\n//   width: 40px;\n// `;\n","import { UserAvatarThumb, UserInfoBox, UserName } from './UserInfo.styled';\nimport { ThemeToggler } from '../ThemeToggler/ThemeToggler';\nimport { useAuth } from 'hooks/useAuth';\n\nexport const UserInfo = () => {\n  const {\n    user: { name, userAvatar },\n  } = useAuth();\n\n  return (\n    <UserInfoBox>\n      <ThemeToggler />\n      <UserName>{name ? name : 'User'}</UserName>\n      <UserAvatarThumb userAvatarUrl={userAvatar}/>\n    </UserInfoBox>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshingUser,\n} from '../redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshingUser = useSelector(selectIsRefreshingUser);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshingUser,\n    user,\n  };\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\n\nexport const HeaderSection = styled.header`\n  display: flex;\n  padding: 24px 20px 0px 20px;\n  max-width: 375px;\n  height: auto;\n  align-items: center;\n  /* background: #f7f6f9; */\n  /* justify-content: space-between; */\n\n  ${min(tablet)} {\n    max-width: 768px;\n    padding: 24px 32px 0px 32px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n    padding: 40px 32px 0px 32px;\n  }\n`;\n\n// export const Thumb = styled.div`\n//   width: 100%;\n//   display: flex;\n//   align-items: center;\n//   /* margin-left: 100px; */\n// `;\n\n// ${min(tablet)} {\n//   padding: 64px 32px;\n// }\n// ${min(desktop)} {\n// padding: 64px 128px;\n// // margin-left: auto;\n// // margin-right: auto;\n// }\n","import { useMediaQuery } from 'react-responsive';\nimport { BurgerBtn } from './BurgerBtn/BurgerBtn';\nimport { FeedbackBtn } from './FeedbackBtn.jsx/FeedbackBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { HeaderSection } from './Header.styled';\n\nexport const Header = ({ addSideBar, showSideBar }) => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1440px)',\n  });\n\n  return (\n    <HeaderSection showSideBar={showSideBar}>\n      {!isDesktop && <BurgerBtn addSideBar={addSideBar} />}\n      <FeedbackBtn />\n      <UserInfo />\n    </HeaderSection>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const LogoutButtonEl = styled.button`\n  display: flex;\n  width: 131px;\n  height: 46px;\n  margin: auto auto 0px 0px;\n  flex-shrink: 0;\n  border-radius: 16px;\n  border: none;\n  background-color: var(--btn-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  justify-content: center;\n  align-items: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n\n  color: var(--invert-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.36px;\n\n  ${min(tablet)} {\n    font-size: 18px;\n    width: 141px;\n    height: 56px;\n    line-height: 24px;\n  }\n\n  svg {\n    stroke: var(--btn-text-color);\n    fill: transparent;\n    width: 20px;\n    height: 20px;\n    margin-left: 6px;\n  }\n`;\n","import { LogoutButtonEl } from './LogoutBtn.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { useDispatch } from 'react-redux';\nimport { logOutOperation } from 'redux/auth/operations';\n\nexport const LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    dispatch(logOutOperation());\n  };\n  return (\n    <LogoutButtonEl type=\"button\" onClick={handleLogOut}>\n      Logout\n      <svg>\n        <use xlinkHref={`${sprite}#icon-log-out`} />\n      </svg>\n    </LogoutButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nconst isShowSideBar = props => {\n  if (props.showSideBar) return '0%';\n  return '-110%';\n};\n\nexport const SideBarEl = styled.aside`\n  display: inline-flex;\n  padding: 24px 24px;\n  flex-direction: column;\n  width: 177px;\n  height: 764px;\n  background-color: var(--sidebar-bg-color);\n  z-index: 5;\n  position: absolute;\n  transform: translateX(${isShowSideBar});\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${min(tablet)} {\n    width: 241px;\n    height: 976px;\n  }\n  ${min(desktop)} {\n    height: 852px;\n    position: static;\n    z-index: 1;\n    transform: translateX(0%);\n  }\n`;\n\n","import styled from '@emotion/styled';\nimport { min, tablet, desktop } from 'styles/media';\n\nexport const CloseBtn = styled.button`\n  display: block;\n  border: none;\n  background-color: inherit;\n  align-items: center;\n  padding: 0px;\n  margin-left: auto;\n  cursor: pointer;\n  svg {\n    fill: transparent;\n    stroke: var(--primary-text-color);\n    display: block;\n    width: 24px;\n    height: 24px;\n    ${min(tablet)} {\n      width: 34px;\n      height: 34px;\n    }\n    ${min(desktop)} {\n      display: none;\n    }\n  }\n`;\n","import { CloseBtn } from './CloseBtn.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const CloseSideBarBtn = ({ removeSideBar }) => {\n  return (\n    <CloseBtn onClick={removeSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-x-close`} />\n      </svg>\n    </CloseBtn>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const GooseImg = styled.img`\n  width: 36px;\n  height: 35px;\n\n  ${min(tablet)} {\n    width: 60px;\n    height: 58px;\n  }\n  ${min(desktop)} {\n    width: 71px;\n    height: 68px;\n  }\n`;\n","import desktopGooseMainPage from 'assets/images/mainPage/desktop_GooseMainPage.png';\nimport desktopGooseMainPage2x from 'assets/images/mainPage/desktop_GooseMainPage@2x.png';\nimport { GooseImg } from './GooseImage.styled';\n\nexport const GooseImage = () => {\n  return (\n    <GooseImg\n      src={desktopGooseMainPage}\n      srcSet={`${desktopGooseMainPage} 1x, ${desktopGooseMainPage2x} 2x`}\n      alt=\"The goose invites you to organize your life and manage your team \"\n    />\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const TitleBoxEl = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n  ${min(tablet)} {\n    margin-bottom: 50px;\n  }\n  ${min(desktop)} {\n    margin-bottom: 32px;\n  }\n\n  h2 {\n    display: block;\n    margin: 0 0 0 6px;\n    color: var(--accent-color);\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n      0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 22px;\n    ${min(tablet)} {\n      font-size: 22px;\n    }\n    ${min(desktop)} {\n      font-size: 24px;\n      line-height: 24px;\n      margin: 0 0 0 10px;\n    }\n\n    span {\n      color: var(--accent-color);\n      font-family: Inter;\n      font-size: 16px;\n      font-style: italic;\n      font-weight: 700;\n      line-height: 24px;\n      margin-left: -1px;\n      margin-right: 2px;\n      ${min(tablet)} {\n        font-size: 22px;\n      }\n      ${min(desktop)} {\n        font-size: 24px;\n      }\n    }\n  }\n`;\n","import { CloseSideBarBtn } from '../CloseBtn/CloseBtn';\nimport { GooseImage } from '../GooseImage/GooseImage';\nimport { TitleBoxEl } from './TitleBox.styled';\n\nexport const TitleBox = ({ removeSideBar }) => {\n  return (\n    <TitleBoxEl>\n      <GooseImage />\n      <h2>\n        G<span>oo</span>seTrack\n      </h2>\n      <CloseSideBarBtn removeSideBar={removeSideBar} />\n    </TitleBoxEl>\n  );\n};\n","import styled from '@emotion/styled';\n// import { pages } from 'components/MainLayout/MainLayout';\nimport { NavLink } from 'react-router-dom';\nimport { tablet, min } from 'styles/media';\n\n\nexport const NavTitle = styled.h3`\n  margin: 0 0 24px 0;\n  color: var(--sidebar-text-color);\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 14px;\n  }\n`;\nexport const NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin: 0px;\n  padding: 0px;\n  gap: 18px;\n  list-style: none;\n`;\n\nexport const NavListItem = styled.li`\n  display: block;\n\n  background-color: inherit;\n  padding: 10px 0px 10px 12px;\n  border-radius: 8px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--sidebar-accent-color);\n  }\n`;\n\nexport const NavLinkSideBar = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: var(--sidebar-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 16px;\n  }\n\n  svg {\n    stroke: var(--sidebar-text-color);\n    fill: transparent;\n    width: 20px;\n    height: 20px;\n    margin-right: 8px;\n    ${min(tablet)} {\n      width: 24px;\n      height: 24px;\n      margin-right: 10px;\n    }\n  }\n`;\n","import {\n  NavTitle,\n  NavList,\n  NavListItem,\n  NavLinkSideBar,\n} from './UserNav.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n// import { pages } from 'components/MainLayout/MainLayout';\n\nexport const UserNavigation = ({\n  removeSideBar,\n  // currentPage,\n  // changeCurrentPage,\n}) => {\n  const handleChangeCurrentPage = page => {\n    removeSideBar();\n    // changeCurrentPage(page);\n  };\n  // console.log(pages);\n  return (\n    <>\n      <NavTitle>User panel</NavTitle>\n      <nav>\n        <NavList>\n          <NavListItem>\n            <NavLinkSideBar to=\"account\" onClick={handleChangeCurrentPage}>\n              <svg>\n                <use xlinkHref={`${sprite}#icon-user`} />\n              </svg>\n              My account\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem>\n            <NavLinkSideBar to=\"calendar\" onClick={handleChangeCurrentPage}>\n              <svg>\n                <use xlinkHref={`${sprite}#icon-calendar`} />\n              </svg>\n              Calendar\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem>\n            <NavLinkSideBar to=\"statistics\" onClick={handleChangeCurrentPage}>\n              <svg>\n                <use xlinkHref={`${sprite}#icon-chart`} />\n              </svg>\n              Statistics\n            </NavLinkSideBar>\n          </NavListItem>\n        </NavList>\n      </nav>\n    </>\n  );\n};\n","import { LogoutBtn } from './LogoutBtn.jsx/LogoutBtn';\nimport { SideBarEl } from './SideBar.styled';\nimport { TitleBox } from './TitleBox/TitleBox';\nimport { UserNavigation } from './UserNav/UserNav';\n\nexport const SideBar = ({\n  removeSideBar,\n  showSideBar,\n  // currentPage,\n  // changeCurrentPage,\n}) => {\n  return (\n    <SideBarEl showSideBar={showSideBar}>\n      <TitleBox removeSideBar={removeSideBar} />\n      <UserNavigation\n        removeSideBar={removeSideBar}\n        // currentPage={currentPage}\n        // changeCurrentPage={changeCurrentPage}\n      />\n      <LogoutBtn />\n    </SideBarEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\n\n\nexport const MainLayoutContainer = styled.div`\n  display: flex;\n  position: relative;\n  margin: 0 auto;\n  height: 100%;\n  max-width: 375px;\n  background: var(--page-bg-color);\n  overflow-x: hidden;\n  ${min(tablet)} {\n    max-width: 768px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  background-color: var(--page-bg-color);\n`;\n\n","import { useState } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { SideBar } from 'components/SideBar/SideBar';\nimport { Outlet } from 'react-router-dom';\nimport { MainLayoutContainer } from './MainLayout.styled';\nimport { Container } from './MainLayout.styled';\n\nexport const pages = {\n  account: 'User Profile',\n  calendar: 'Calendar',\n  statistics: 'Statistics',\n};\n\nconst MainLayout = ({ children }) => {\n  const [showSideBar, setShowSideBar] = useState(false);\n  // const [currentPage, setCurrentPage] = useState(pages.account);\n\n  const addSideBar = () => setShowSideBar(true);\n  const removeSideBar = () => setShowSideBar(false);\n\n  // const changeCurrentPage = newCurentPage => setCurrentPage(newCurentPage);\n\n  return (\n    <MainLayoutContainer>\n      <SideBar\n        removeSideBar={removeSideBar}\n        showSideBar={showSideBar}\n        // currentPage={currentPage}\n        // changeCurrentPage={changeCurrentPage}\n      />\n      <Container>\n        <Header\n          addSideBar={addSideBar}\n          showSideBar={showSideBar}\n          // currentPage={currentPage}\n        />\n        <Container>\n          {children}\n          <Outlet />\n        </Container>\n      </Container>\n    </MainLayoutContainer>\n  );\n};\n\nexport default MainLayout;\n\n\n"],"names":["BurgerButtonEl","styled","BurgerBtn","addSideBar","type","onClick","xlinkHref","sprite","FeedbackButton","min","tablet","FeedbackBtn","UserInfoBox","UserName","UserAvatarThumb","props","userAvatarUrl","ThemeBtn","selectTheme","state","theme","THEMES","Object","freeze","LIGHT","DARK","ThemeToggler","dispatch","useDispatch","curentTheme","useSelector","useEffect","document","documentElement","classList","remove","add","setTheme","toggle","UserInfo","isLoggedIn","selectIsLoggedIn","isRefreshingUser","selectIsRefreshingUser","user","selectUser","name","userAvatar","HeaderSection","desktop","Header","showSideBar","isDesktop","useMediaQuery","query","LogoutButtonEl","LogoutBtn","logOutOperation","SideBarEl","CloseBtn","CloseSideBarBtn","removeSideBar","GooseImg","GooseImage","src","desktopGooseMainPage","srcSet","desktopGooseMainPage2x","alt","TitleBoxEl","TitleBox","NavTitle","NavList","NavListItem","NavLinkSideBar","NavLink","UserNavigation","handleChangeCurrentPage","page","to","SideBar","MainLayoutContainer","Container","pages","account","calendar","statistics","children","useState","setShowSideBar"],"sourceRoot":""}