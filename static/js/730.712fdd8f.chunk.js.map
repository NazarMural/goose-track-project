{"version":3,"file":"static/js/730.712fdd8f.chunk.js","mappings":"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","sources":["components/Calendar/ChoosedMonth/CalendarTable/CalendarTable.styled.jsx","components/Calendar/ChoosedMonth/TaskList/TaskList.styled.jsx","components/Calendar/ChoosedMonth/TaskList/TaskList.jsx","components/Calendar/ChoosedMonth/CalendarTable/CalendarTable.jsx","components/Calendar/ChoosedMonth/MonthCalendarHead/MonthCalendarHead.styled.jsx","components/Calendar/ChoosedMonth/MonthCalendarHead/MonthCalendarHead.jsx","components/Calendar/ChoosedMonth/ChoosedMonth.styled.jsx","components/Calendar/ChoosedMonth/ChoosedMonth.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/TaskModal/TaskForm/TaskForm.styled.jsx","components/TaskModal/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","helpers/setDay.js","redux/tasks/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n// import { NavLink } from 'react-router-dom';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const CalendarGrid = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: #dce3e580; */\n  background-color: var(--calendar-grid-border);\n  display: grid;\n  grid-gap: 1px;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(${props => props.rows}, 1fr);\n  border: 1px solid var(--calendar-grid-border);\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const Cell = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: flex-end; */\n  /* background-color: #ffffff; */\n  background-color: var(--cell-background);\n  padding: 8px 0;\n  height: 94px;\n\n  ${min(tablet)} {\n    padding: 14px 0;\n    min-height: 144px;\n  }\n\n  ${min(desktop)} {\n    min-height: 125px;\n  }\n`;\n\nexport const DayLink = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  cursor: pointer;\n`;\n\nexport const WrapperDay = styled.div`\n  display: flex;\n  text-align: end;\n  align-items: center;\n  justify-content: center;\n  align-self: flex-end;\n  height: 22px;\n  width: 22px;\n  text-decoration: none;\n  font-size: 12px;\n  font-weight: 700;\n  margin-bottom: 14px;\n  margin-right: 4px;\n  cursor: pointer;\n\n  ${min(tablet)} {\n    margin-right: 14px;\n  }\n`;\n\nexport const Day = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4px 6px;\n  border-radius: 6px;\n  color: ${props => props.color};\n  background: ${props => props.background};\n`;\n","import styled from '@emotion/styled';\n// import { NavLink } from 'react-router-dom';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0 2px;\n  overflow-y: auto;\n  max-width: 44px;\n  /* width: 100%; */\n  /* max-width: 100%; */\n  height: 65px;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--task-scrollbar-track);\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: var(--task-scrollbar-thumb);\n    border-radius: 12px;\n  }\n\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: var(--task-scrollbar-thumb-hover);\n  }\n\n  ${min(tablet)} {\n    max-width: 92px;\n    /* max-width: 100%; */\n    padding: 0 4px;\n  }\n\n  ${min(desktop)} {\n    max-width: 139px;\n  }\n`;\n\nexport const TaskItem = styled.li`\n  background-color: ${props => props.bg};\n  color: ${props => props.color};\n  border-radius: 8px;\n  padding: 4px 8px;\n  /* display: flex; */\n  /* flex-wrap: nowrap; */\n  margin-bottom: 8px;\n  /* max-width: 100%; */\n  /* overflow-x: hidden; */\n  /* white-space: pre-wrap;\n  word-break: break-all;\n  word-wrap: break-word; */\n  max-width: 44px;  \n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  cursor: pointer;\n\n${min(tablet)} {\n    max-width: 92px;\n  }\n\n  ${min(desktop)} {\n    max-width: 139px;\n  } \n`;\n\nexport const TaskLink = styled.p`\n  text-decoration: none;\n  /* color: ${props => props.color}; */\n  color: inherit;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n","import { useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport { List, TaskItem, TaskLink } from './TaskList.styled';\nimport { TaskModal } from 'components/TaskModal/TaskModal';\n\nexport const TaskList = ({ tasks, currentDate }) => {\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [taskForForm, setTaskForForm] = useState({});\n\n  const handleChangeTask = task => {\n    setTaskForForm(task);\n    setIsFormOpen(true);\n  };\n\n  const closeForm = () => {\n    setTaskForForm({});\n    setIsFormOpen(false);\n  };\n\n  return (\n    <List>\n      {tasks\n        .filter(task => !moment(task.date).diff(moment(currentDate), 'day'))\n        .map((task, idx) => (\n          <TaskItem\n            key={idx + 1}\n            bg={`var(--calend-${task.priority}-bg-color)`}\n            color={`var(--calend-${task.priority}-color)`}\n          >\n            <div onClick={() => handleChangeTask(task)} id=\"task-link\">\n              <TaskLink>{task.title}</TaskLink>\n            </div>\n            {isFormOpen && (\n              <TaskModal\n                isOpen={isFormOpen}\n                onClose={closeForm}\n                category={task.category}\n                task={taskForForm}\n              />\n            )}\n          </TaskItem>\n        ))}\n    </List>\n  );\n};\n\nTaskList.propTypes = {\n  tasks: PropTypes.array,\n  currentDate: PropTypes.object.isRequired,\n};\n\n","import moment from 'moment';\nimport {\n  CalendarGrid,\n  Cell,\n  Day,\n  DayLink,\n  WrapperDay,\n} from './CalendarTable.styled';\nimport { TaskList } from '../TaskList/TaskList';\nimport { setDay } from 'helpers/setDay';\nimport { useNavigate, useParams } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport { fetchTasksOperation } from 'redux/tasks/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsUpdating } from 'redux/tasks/selectors';\n\nexport const CalendarTable = () => {\n  const { currentMonth } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const date = moment(`${currentMonth}-01`, 'YYYY-MM-DD');\n  const { startMonth, endMonth, weeks, daysArray } = setDay(date);\n  const isCurrentDay = day => moment().isSame(day, 'day');\n  const editTask = useSelector(selectIsUpdating);\n\n  useEffect(() => {\n    (async () => {\n      const { payload } = await dispatch(fetchTasksOperation(currentMonth));\n      setTasks(payload);\n    })();\n  }, [currentMonth, dispatch, editTask]);\n\n  const handleNavigateToDay = date => {\n    const day = moment(date).format('YYYY-MM-DD');\n    localStorage.setItem('type', 'day');\n    localStorage.setItem('date', day);\n    navigate(`/calendar/day/${day}`);\n  };\n\n  return (\n    <CalendarGrid rows={weeks}>\n      {daysArray.map((dayItem, idx) => (\n        <Cell key={idx}>\n          <DayLink onClick={() => handleNavigateToDay(dayItem)}>\n            <WrapperDay>\n              <Day\n                color={`${\n                  isCurrentDay(dayItem)\n                    ? '#FFFFFF'\n                    : `${\n                        startMonth > dayItem || endMonth < dayItem\n                          ? 'transparent'\n                          : 'var(--date-color)'\n                      }`\n                }`}\n                background={`${\n                  isCurrentDay(dayItem) ? 'var(--accent-color)' : 'transparent'\n                }`}\n              >\n                {dayItem.format('D')}\n              </Day>\n            </WrapperDay>\n          </DayLink>\n          {startMonth < dayItem && endMonth > dayItem && (\n            <TaskList currentDate={dayItem} tasks={tasks} />\n          )}\n        </Cell>\n      ))}\n    </CalendarGrid>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeadWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  height: 50px;\n  border: 1px solid var(--calendar-grid-border);\n  border-radius: 8px;\n  margin-bottom: 14px;\n  overflow: hidden;\n`;\n\nexport const HeadCell = styled.div`\n  /* display: flex; */\n  /* justify-content: center; */\n  /* align-items: center; */\n  text-align: center;\n  text-transform: uppercase;\n  background-color: var(--cell-background);\n  color: ${props => props.weekend};\n\n  padding: 16px 0;\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport moment from 'moment';\n\nimport { HeadCell, HeadWrapper } from './MonthCalendarHead.styled';\n\nexport const MonthCalendarHead = () => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  //   const day = moment().day(1).format('ddd');\n  //   console.log(day);\n\n  return (\n    <HeadWrapper>\n      {[...Array(7)].map((_, idx) => (\n        <HeadCell\n          key={idx}\n          weekend={\n            idx === 5 || idx === 6\n              ? `var(--accent-color)`\n              : `var(--primary-text-color)`\n          }\n        >\n          {isMobile\n            ? moment()\n                .day(idx + 1)\n                .format('ddd')\n                .charAt(0)\n            : moment()\n                .day(idx + 1)\n                .format('ddd')}\n        </HeadCell>\n      ))}\n    </HeadWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CalendarWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: var(--page-bg-color); */\n  /* padding: 38px 0; */\n`;\n\n// export const Container = styled.div`\n//   padding: 0 20px;\n// `;\n","import { CalendarTable } from './CalendarTable/CalendarTable';\nimport { MonthCalendarHead } from './MonthCalendarHead/MonthCalendarHead';\nimport { CalendarWrapper } from './ChoosedMonth.styled';\n\nconst ChoosedMonth = () => {\n  return (\n    <CalendarWrapper>\n      <MonthCalendarHead />\n      <CalendarTable />\n    </CalendarWrapper>\n  );\n};\n\nexport default ChoosedMonth;\n","import styled from '@emotion/styled';\nimport { mobile, max } from 'styles/media';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--primary-bg-color);\n  border: 1px solid #dce3e5cc;\n  border-radius: 8px;\n  box-shadow: 0px 4px 57px 0px rgba(17, 17, 17, 0.05);\n  z-index: 1000;\n  ${max(mobile)} {\n    width: 100%;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  z-index: 999;\n`;\n\nexport const Content = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 24px;\n  padding: 0;\n`;\n\nexport const IconClose = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--input-border-color-focus);\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    stroke: #84828a;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Backdrop, Container, IconClose, CloseButton } from './Modal.styled';\nimport sprite from '../../assets/images/icons/icons.svg';\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  closeButtonPosition = { top: '14px', right: '14px' },\n  children,\n}) => {\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscKeyPress = event => {\n      if (isOpen && event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n    window.addEventListener('keydown', handleEscKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyPress);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Container id=\"modal-container\">\n        <CloseButton onClick={onClose} style={closeButtonPosition}>\n          <IconClose>\n            <use xlinkHref={`${sprite}#icon-x-close`} width={24} height={24} />\n          </IconClose>\n        </CloseButton>\n\n        {children}\n      </Container>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired, \n  onClose: PropTypes.func.isRequired,\n  closeButtonPosition: PropTypes.object,\n  children: PropTypes.node, \n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { min, tablet } from 'styles/media';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  width: 303px;\n  padding: 48px 18px 40px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background-color: var(--task-popup-bg);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n  ${min(tablet)} {\n    width: 396px;\n    padding: 40px 28px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover {\n    & svg {\n      stroke: var(--accent-color);\n    }\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: rgba(17, 17, 17, 0.1);\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: rgba(52, 52, 52, 1);\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16;\n`;\n\nexport const TitleField = styled(Field)`\n  width: 267px;\n  height: 42px;\n  flex-shrink: 0;\n  padding: 12px 14px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(246, 246, 246, 1);\n  color: rgba(52, 52, 52, 1);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  /* cursor: pointer; */\n\n  ${min(tablet)} {\n    height: 46px;\n    width: 340px;\n    padding: 14px 18px;\n    margin-bottom: 18px;\n  }\n\n  &::placeholder {\n    opacity: 1;\n    color: var(--task-popup-color-text);\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n\nexport const FieldContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const TimeField = styled(Field)`\n  width: 126px;\n  height: 42px;\n  flex-shrink: 0;\n  padding: 12px 14px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(246, 246, 246, 1);\n  color: rgba(52, 52, 52, 1);\n  font-size: 14px;\n  line-height: 1.28;\n  &::-webkit-calendar-picker-indicator {\n    opacity: 0;\n    /* cursor: pointer; */\n    width: 32px;\n  }\n\n  ${min(tablet)} {\n    width: 163px;\n    height: 46px;\n    padding: 14px 18px;\n    margin-bottom: 32px;\n    &::-webkit-calendar-picker-indicator {\n      width: 60px;\n    }\n  }\n`;\n\nexport const PriorityContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const PriorityLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  color: rgba(52, 52, 52, 1);\n  font-size: 12px;\n  line-height: 1.16;\n  cursor: pointer;\n\n  &:after {\n    content: '';\n    background: none repeat scroll 0 0 transparent;\n    bottom: -5px;\n    display: block;\n    height: 2px;\n    left: 50%;\n    position: absolute;\n    background: var(--accent-color);\n    transition: width 0.3s ease 0s, left 0.3s ease 0s;\n    width: 0;\n  }\n  &:hover:after {\n    width: 100%;\n    left: 0;\n  }\n\n  ${min(tablet)} {\n    font-size: 14px;\n    line-height: 1.16;\n  }\n`;\n\nexport const PriorityField = styled(Field)`\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  cursor: pointer;\n`;\n\nexport const Blue = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\nexport const BlueLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const Orange = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const OrangeLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const Red = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const RedLine = styled.svg`\n  width: 10px;\n  height: 10px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const OperationButton = styled.button`\n  display: flex;\n  width: 135px;\n  height: 42px;\n  padding: 8px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 8px;\n  border: none;\n  background: var(--accent-color);\n  color: var(--invert-text-color);\n  text-align: center;\n  font-size: 14px;\n  line-height: 1.28;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--btn-bg-hover);\n  }\n\n  ${min(tablet)} {\n    width: 182px;\n    height: 48px;\n    padding: 10px 20px;\n  }\n`;\n\nexport const AddIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const CancelButton = styled.button`\n  width: 118px;\n  height: 42px;\n  padding: 10px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--task-btn-cancel);\n  color: var(--primary-text-color);\n  text-align: center;\n  font-size: 14px;\n  line-height: 1.28;\n  transition: all cubic-bezier(0.19, 1, 0.22, 1) 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--btn-bg-hover);\n    color: var(--task-popup-bg);\n  }\n\n  ${min(tablet)} {\n    width: 144px;\n    height: 48px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport icons from '../../../assets/images/icons/icons.svg';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport {\n  addTaskOperation,\n  updateTaskOperation,\n} from '../../../redux/tasks/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  OperationButton,\n  AddIcon,\n  Blue,\n  BlueLine,\n  ButtonContainer,\n  CancelButton,\n  CloseButton,\n  CloseIcon,\n  EditIcon,\n  FieldContainer,\n  FormContainer,\n  Label,\n  Orange,\n  OrangeLine,\n  PriorityContainer,\n  PriorityField,\n  PriorityLabel,\n  Red,\n  RedLine,\n  TimeField,\n  TitleField,\n} from './TaskForm.styled';\n\nconst taskFormSchema = Yup.object().shape({\n  title: Yup.string('Enter title')\n    .max(250, 'Text must be at most 250characters')\n    .required('Title is required'),\n  start: Yup.string('Enter start')\n    .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid start time')\n    .required('Start time is required'),\n  end: Yup.string()\n    .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid end time')\n    .when('start', (start, schema) =>\n      schema.test({\n        test: function (end) {\n          if (!start || !end) return true;\n          return end > start;\n        },\n        message: 'End time must be greater than start time',\n      })\n    ),\n});\n\nexport const TaskForm = ({ category, task, onClose }) => {\n  const [operation, setOperation] = useState('create');\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    title: '',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n  };\n\n  useEffect(() => {\n    if (task?._id) setOperation('edit');\n  }, [task]);\n\n  const onSubmit = values => {\n    const taskId = task?._id;\n    const taskData = {\n      title: values.title,\n      start: values.start,\n      end: values.end,\n      priority: values.priority,\n      date: task?.date || moment().format('YYYY-MM-DD'),\n      category: category,\n    };\n\n    if (operation === 'edit') {\n      dispatch(updateTaskOperation({ taskId, updateTaskData: taskData }))\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.info('Task has been edited.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    } else {\n      dispatch(addTaskOperation(taskData))\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.success('Task has been successfully created.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={task || initialValues}\n      validationSchema={taskFormSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values }) => (\n        <FormContainer>\n          <CloseButton\n            type=\"button\"\n            aria-label=\"close button\"\n            onClick={onClose}\n          >\n            <CloseIcon>\n              <use href={icons + '#icon-x-close'}></use>\n            </CloseIcon>\n          </CloseButton>\n          <Form>\n            <Label>\n              Title\n              <ErrorMessage name=\"title\" component=\"div\" />\n              <TitleField type=\"text\" name=\"title\" placeholder=\"Enter text\" />\n            </Label>\n\n            <FieldContainer>\n              <Label>\n                Start\n                <ErrorMessage name=\"start\" component=\"div\" />\n                <TimeField type=\"time\" name=\"start\" />\n              </Label>\n              <Label>\n                End\n                <ErrorMessage name=\"end\" component=\"div\" />\n                <TimeField type=\"time\" name=\"end\" />\n              </Label>\n            </FieldContainer>\n\n            <PriorityContainer role=\"group\">\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"low\" />\n                {values.priority === 'low' ? (\n                  <BlueLine>\n                    <use href={icons + '#icon-ellipse-blue-stroke'}></use>\n                  </BlueLine>\n                ) : (\n                  <Blue>\n                    <use href={icons + '#icon-ellipse-blue'}></use>\n                  </Blue>\n                )}\n                Low\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"medium\" />\n                {values.priority === 'medium' ? (\n                  <OrangeLine>\n                    <use href={icons + '#icon-ellipse-orange-stroke'}></use>\n                  </OrangeLine>\n                ) : (\n                  <Orange>\n                    <use href={icons + '#icon-ellipse-orange'}></use>\n                  </Orange>\n                )}\n                Medium\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField type=\"radio\" name=\"priority\" value=\"high\" />\n                {values.priority === 'high' ? (\n                  <RedLine>\n                    <use href={icons + '#icon-ellipse-pink-stroke'}></use>\n                  </RedLine>\n                ) : (\n                  <Red>\n                    <use href={icons + '#icon-ellipse-pink'}></use>\n                  </Red>\n                )}\n                High\n              </PriorityLabel>\n            </PriorityContainer>\n\n            <ButtonContainer>\n              {operation === 'edit' ? (\n                <OperationButton type=\"submit\">\n                  <EditIcon stroke=\"#fff\" fill=\"none\">\n                    <use href={icons + '#icon-pencil'}></use>\n                  </EditIcon>\n                  Edit\n                </OperationButton>\n              ) : (\n                <OperationButton type=\"submit\">\n                  <AddIcon stroke=\"#fff\">\n                    <use href={icons + '#icon-plus'}></use>\n                  </AddIcon>\n                  Add\n                </OperationButton>\n              )}\n\n              <CancelButton type=\"button\" onClick={onClose}>\n                Cancel\n              </CancelButton>\n            </ButtonContainer>\n          </Form>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\nimport  Modal  from 'components/Modal/Modal';\nimport { TaskForm } from 'components/TaskModal/TaskForm/TaskForm';\n\nexport const TaskModal = ({ category, task, onClose, isOpen }) => {\n    const closeButtonPosition = { top: '16px', right: '16px' };\n    \n    return (\n        <Modal onClose={onClose} isOpen={isOpen} closeButtonPosition={closeButtonPosition}>\n        <TaskForm onClose={onClose} category={category} task={task} />\n        </Modal>\n    );\n};","import moment from 'moment';\n\nexport const setDay = day => {\n  moment.updateLocale('en', { week: { dow: 1 } });\n  let currentDay;\n  if (!day) {\n    currentDay = moment();\n  } else {\n    currentDay = moment(day).clone();\n  }\n  const startMonth = currentDay.clone().startOf('month'); // початок поточного місяця\n  const endMonth = currentDay.clone().endOf('month'); // кінець поточного місяця\n\n  const startDay = startMonth.clone().startOf('week'); // перший день тижня, в якому починається поточний місяць\n  const endDay = endMonth.clone().endOf('week'); // останній день тижня, в якому закінчується поточний місяць\n\n  const startWeek = currentDay.clone().startOf('week'); // перший день тижня, якому знаходиться обрана дата\n  const endWeek = currentDay.clone().endOf('week'); // останній  день тижня, якому знаходиться обрана дата\n\n  const dayDifference = endDay.diff(startDay, 'days') + 1; // кількість днів, що відображаються на календарі (ячейки)\n  const weeks = dayDifference / 7; //кількість тижнів в місяці (рядки)\n\n  const startCalendar = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(dayDifference)].map(() =>\n    startCalendar.add(1, 'day').clone()\n  );\n\n  const dates = {\n    startMonth,\n    endMonth,\n    startDay,\n    endDay,\n    startWeek,\n    endWeek,\n    dayDifference,\n    weeks,\n    daysArray,\n  };\n  return dates;\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectTasksState = state => state.tasks;\nconst selectTasks = state => state.tasks.tasks;\nconst selectTasksError = state => state.tasks.error;\nconst selectIsTasksLoading = state => state.tasks.isTasksLoading;\nconst selectIsFetchingTasks = state => state.tasks.isFetchingTasks;\nconst selectIsAdding = state => state.tasks.isAdding;\nconst selectIsDeleting = state => state.tasks.isDeleting;\nconst selectIsUpdating = state => state.tasks.isUpdating;\nconst selectCurrentTaskId = state => state.tasks.currentTaskId;\n\nconst selectTaskOperations = createSelector(\n  [selectIsFetchingTasks, selectIsAdding, selectIsDeleting, selectIsUpdating],\n  (isFetchingTasks, isAdding, isDeleting, isUpdating) => ({\n    isFetchingTasks,\n    isAdding,\n    isDeleting,\n    isUpdating,\n  })\n);\n\nexport {\n  selectTasks,\n  selectCurrentTaskId,\n  selectTasksError,\n  selectIsAdding,\n  selectIsDeleting,\n  selectIsTasksLoading,\n  selectIsUpdating,\n  selectIsFetchingTasks,\n  selectTaskOperations,\n  selectTasksState,\n};\n"],"names":["CalendarGrid","styled","props","rows","Cell","min","tablet","desktop","DayLink","WrapperDay","Day","color","background","List","TaskItem","bg","TaskLink","TaskList","tasks","currentDate","useState","isFormOpen","setIsFormOpen","taskForForm","setTaskForForm","closeForm","filter","task","moment","date","diff","map","idx","priority","onClick","handleChangeTask","id","title","TaskModal","isOpen","onClose","category","CalendarTable","currentMonth","useParams","setTasks","navigate","useNavigate","dispatch","useDispatch","setDay","startMonth","endMonth","weeks","daysArray","isCurrentDay","day","isSame","editTask","useSelector","selectIsUpdating","useEffect","fetchTasksOperation","payload","dayItem","format","localStorage","setItem","handleNavigateToDay","HeadWrapper","HeadCell","weekend","MonthCalendarHead","isMobile","useMediaQuery","maxWidth","Array","_","charAt","CalendarWrapper","Container","max","mobile","Backdrop","CloseButton","IconClose","closeButtonPosition","top","right","children","handleEscKeyPress","event","key","document","body","style","overflow","window","addEventListener","removeEventListener","ReactDOM","target","currentTarget","xlinkHref","sprite","width","height","getElementById","FormContainer","CloseIcon","Label","TitleField","Field","FieldContainer","TimeField","PriorityContainer","PriorityLabel","PriorityField","Blue","BlueLine","Orange","OrangeLine","Red","RedLine","ButtonContainer","OperationButton","AddIcon","EditIcon","CancelButton","taskFormSchema","Yup","shape","required","start","matches","end","when","schema","test","message","TaskForm","operation","setOperation","_id","initialValues","validationSchema","onSubmit","values","taskId","taskData","updateTaskOperation","updateTaskData","then","data","error","Error","Notify","catch","addTaskOperation","type","href","icons","name","component","placeholder","role","value","stroke","fill","Modal","currentDay","week","dow","clone","startOf","endOf","startDay","endDay","startWeek","endWeek","dayDifference","startCalendar","subtract","add","selectTasks","state","isUpdating","createSelector","isFetchingTasks","isAdding","isDeleting"],"sourceRoot":""}