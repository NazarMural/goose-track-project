{"version":3,"file":"static/js/744.daa50fc2.chunk.js","mappings":"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","sources":["components/Header/BurgerBtn/BurgerBtn.styled.jsx","components/Header/BurgerBtn/BurgerBtn.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.styled.jsx","components/Header/FeedbackBtn.jsx/FeedbackBtn.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/ThemeToggler/ThemeToggle.styled.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.jsx","hooks/useAuth.js","components/Header/Header.styled.jsx","components/Header/AddFeedbackModal/ReviewForm/ReviewForm.styled.jsx","components/Header/AddFeedbackModal/Rating/Rating.styled.jsx","components/Header/AddFeedbackModal/Rating/Rating.jsx","components/Header/AddFeedbackModal/ReviewForm/ReviewForm.jsx","components/Header/GooseImageWithTitle/GooseImageWithTitle.styled.jsx","components/Header/GooseImageWithTitle/GooseImageWithTitle.jsx","components/Header/Header.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn.jsx/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/CloseBtn/CloseBtn.styled.jsx","components/SideBar/CloseBtn/CloseBtn.jsx","components/SideBar/GooseImage/GooseImage.styled.jsx","components/SideBar/GooseImage/GooseImage.jsx","components/SideBar/TitleBox/TitleBox.styled.jsx","components/SideBar/TitleBox/TitleBox.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/SideBar.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","redux/tasks/selectors.js","redux/theme/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BurgerButtonEl = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    display: block;\n    fill: transparent;\n    fill: var(--burger-color);\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { BurgerButtonEl } from './BurgerBtn.styled';\nimport PropTypes from 'prop-types';\n\nexport const BurgerBtn = ({ addSideBar }) => {\n  return (\n    <BurgerButtonEl type=\"button\" onClick={addSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-menu_40px`} />\n      </svg>\n    </BurgerButtonEl>\n  );\n};\n\nBurgerBtn.propTypes = {\n  addSideBar: PropTypes.func,\n};\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const FeedbackButton = styled.button`\n  display: block;\n  height: 100%;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  background-color: var(--btn-bg-color);\n  color: var(--btn-text-color);\n  margin-left: auto;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 16px;\n  cursor: pointer;\n  transition: ba  §ckground-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n  ${min(tablet)} {\n    padding: 12px 32px;\n    font-size: 14px;\n    line-height: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FeedbackButton } from './FeedbackBtn.styled';\n\nexport const FeedbackBtn = ({ openForm }) => {\n  const handleButtonClick = () => {\n    openForm();\n  };\n\n  return (\n    <FeedbackButton type=\"button\" onClick={handleButtonClick}>\n      Feedback\n    </FeedbackButton>\n  );\n};\n\nFeedbackBtn.propTypes = {\n  openForm: PropTypes.func,\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const UserInfoBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin-left: 18px;\n  ${min(tablet)} {\n    gap: 14px;\n    margin-left: 24px;\n  }\n`;\n\nexport const UserName = styled.p`\n  color: var(--name-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  ${min(tablet)} {\n    font-size: 18px;\n  }\n`;\n\nexport const UserAvatarThumb = styled.div`\n  position: relative;\n  width: 44px;\n  height: 44px;\n  border: 1.8px solid #3e85f3;\n  overflow: hidden;\n  border-radius: 50%;\n`;\n\nexport const UserImage = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const UserAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 24px;\n    height: 24px;\n    fill: #3e85f32e;\n    .dark & {\n      fill: #ffffff2e;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { tablet, min } from 'styles/media';\n\nexport const ThemeBtn = styled.button`\n  display: block;\n  align-items: center;\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n\n  svg {\n    fill: var(--btn-bg-color);\n    display: block;\n    width: 20px;\n    height: 20px;\n    transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    :hover {\n      fill: var(--btn-bg-hover);\n    }\n\n    ${min(tablet)} {\n      width: 32px;\n      height: 32px;\n    }\n  }\n`;\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { ThemeBtn } from './ThemeToggle.styled';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { THEMES } from 'constants/theme/themes';\nimport { useEffect } from 'react';\n\nexport const ThemeToggler = () => {\n  const dispatch = useDispatch();\n  const curentTheme = useSelector(selectTheme);\n\n  useEffect(() => {\n    if (curentTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n      return;\n    }\n    document.documentElement.classList.remove('dark');\n  }, [curentTheme]);\n\n  const handleThemeClick = () => {\n    dispatch(\n      setTheme(curentTheme === THEMES.LIGHT ? THEMES.DARK : THEMES.LIGHT)\n    );\n    document.documentElement.classList.toggle('dark');\n  };\n  return (\n    <ThemeBtn type=\"button\" onClick={handleThemeClick}>\n      {curentTheme === THEMES.LIGHT ? (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-moon`} />\n        </svg>\n      ) : (\n        <svg>\n          <use xlinkHref={`${sprite}#icon-sun`} />\n        </svg>\n      )}\n    </ThemeBtn>\n  );\n};\n\n","import {\n  UserAvatarThumb,\n  UserInfoBox,\n  UserName,\n  UserImage,\n  UserAvatar,\n} from './UserInfo.styled';\nimport { ThemeToggler } from '../ThemeToggler/ThemeToggler';\nimport { useAuth } from 'hooks/useAuth';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const UserInfo = () => {\n  const {\n    user: { name, avatarURL },\n  } = useAuth();\n\n  return (\n    <UserInfoBox>\n      <ThemeToggler />\n      <UserName>{name ? name : 'User'}</UserName>\n      <UserAvatarThumb>\n        {avatarURL ? (\n          <UserImage src={avatarURL} />\n        ) : (\n          <UserAvatar>\n            <use href={`${sprite}#icon-ph_user`}></use>\n          </UserAvatar>\n        )}\n      </UserAvatarThumb>\n    </UserInfoBox>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshingUser,\n} from '../redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshingUser = useSelector(selectIsRefreshingUser);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshingUser,\n    user,\n  };\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const HeaderSection = styled.header`\n  display: flex;\n  padding: 24px 20px 0px 20px;\n  max-width: 375px;\n  height: auto;\n  align-items: center;\n\n  ${min(tablet)} {\n    max-width: 768px;\n    padding: 24px 32px 0px 32px;\n  }\n  ${min(desktop)} {\n    max-width: 1087px;\n    padding: 40px 32px 0px 32px;\n  }\n`;\n\n","import styled from '@emotion/styled';\nimport { tablet, min, mobile, max } from 'styles/media';\n\nexport const FormContainer = styled.form`\n  max-width: 468px;\n  padding: 28px 20px 29px 20px;\n  .dark & {\n    background-color: var(--main-page-title);\n    border: 1px solid rgba(220, 227, 229, 0.8);\n   box-shadow: 0px 4px 57px 0px rgba(17, 17, 17, 0.05);\n    border-radius: 8px;\n  }\n\n  ${min(tablet)} {\n    padding: 32px;\n  }\n`;\n\nexport const LabelText = styled.label`\n  display: flex;\n  margin-bottom: 8px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.16;\n  color: #343434cc;\n  .dark & {\n    color: var(--user-label-color);\n  }\n`;\n\nexport const CommentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 28px;\n  max-width: 100%;\n  ${min(tablet)} {\n    margin-top: 24px;\n  }\n`;\n\nexport const CommentText = styled.textarea`\n  width: 295px;\n  height: 130px;\n  padding: 12px 14px;\n  border: none;\n  border-radius: 8px;\n  background: #f6f6f6;\n  resize: none;\n  box-sizing: border-box;\n  outline: none;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.29;\n  color: var(--secondary-text-color);\n  .dark & {\n    border: 1px solid var(--calendar-grid-border);\n    background: transparent;\n    color: var(--review-btn-cancel-color);\n  }\n\n  ${max(mobile)} {\n    width: 100%;\n  }\n  ${min(tablet)} {\n    width: 404px;\n    height: 127px;\n    padding: 14px 18px;\n  }\n\n  &::placeholder {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.28;\n    color: var(--secondary-text-color);\n\n    .dark & {\n      color: var(--review-btn-cancel-color);\n    }\n  }\n\n  &:focus::placeholder {\n    opacity: 0;\n  }\n`;\n\nexport const ButtonsBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const SaveButton = styled.button`\n  display: flex;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 56px;\n  margin-top: 14px;\n  outline: none;\n  width: 144px;\n  background-color: var(--btn-bg-color);\n  color: var(--btn-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  cursor: pointer;\n  justify-content: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n  ${max(mobile)} {\n    width: 50%;\n    padding: 12px 5px;\n  }\n  ${min(tablet)} {\n   \n    width: 198px;\n`;\n\nexport const CancelButton = styled.button`\n  display: flex;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 47.5px;\n  margin-top: 14px;\n  outline: none;\n  background-color: var(--review-btn-cancel-bg);\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  width: 143px;\n  cursor: pointer;\n  justify-content: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--switch-type-bg-active);\n  }\n  .dark & {\n    background-color: var(--primary-bg-color);\n    color: var(--review-btn-cancel-color);\n  }\n  ${max(mobile)} {\n    width: 50%;\n    padding: 12px 5px;\n  }\n  ${min(tablet)} {\n    width: 198px;\n  }\n`;\n\nexport const EditButton = styled(SaveButton)`\n  padding: 12px 59px;\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 88px;\n  right: 20px;\n  gap: 8px;\n  ${min(tablet)} {\n    right: 32px;\n  }\n`;\n\nexport const IconEditBox = styled.div`\n  // display: flex;\n  // align-items: center;\n  // justify-content: center;\n  // border: none;\n  // border-radius: 50%;\n  // background-color: var(--icon-edit-bg);\n`;\nexport const ButtonEdit = styled.button`\n  display: flex;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  background-color: var(--icon-edit-bg);\n  border: none;\n  padding: 7px;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :active,\n  :focus {\n    background-color: var(--accent-color);\n  }\n\n  :hover {\n    > svg {\n      stroke: var(--btn-text-color);\n    }\n  }\n\n  :focus {\n    > svg {\n      stroke: var(--btn-text-color);\n    }\n  }\n`;\nexport const IconEdit = styled.svg`\n  width: 100%;\n  height: 100%;\n  stroke: var(--accent-color);\n  fill: none;\n\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const IconDel = styled(IconEdit)`\n  stroke: var(--icon-delete-color);\n`;\n\nexport const ButtonDel = styled(ButtonEdit)`\n  background-color: #ee3d6565;\n\n  :hover,\n  :active {\n    background-color: var(--icon-delete-bg);\n  }\n  :hover {\n    > svg {\n      stroke: var(--icon-delete-color);\n    }\n  }\n\n  :focus {\n    > svg {\n      stroke: var(--icon-delete-color);\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  z-index: 1000;\n`;\n\nexport const Star = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--star-color);\n`;\n\nexport const FilledStar = styled(Star)`\n  fill: var(--star-color-active);\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types'; \nimport { StarContainer, Star, FilledStar } from './Rating.styled';\nimport sprite from '../../../../assets/images/icons/icons.svg';\n\nconst Rating = ({ value, onRatingChange, disabled }) => {\n  const [rating, setRating] = useState(0);\n\n  const handleStarClick = selectedRating => {\n    if (disabled) return;\n    setRating(selectedRating);\n    onRatingChange(selectedRating);\n  };\n\n  useEffect(() => {\n    setRating(value);\n  }, [value]);\n\n  return (\n    <div>\n      <StarContainer>\n        {[1, 2, 3, 4, 5].map(star => (\n          <StarContainer key={star} onClick={() => handleStarClick(star)}>\n            {star <= rating ? (\n              <FilledStar>\n                <use xlinkHref={`${sprite}#icon-star`} width={24} height={24} />\n              </FilledStar>\n            ) : (\n              <Star>\n                <use xlinkHref={`${sprite}#icon-star`} width={24} height={24} />\n              </Star>\n            )}\n          </StarContainer>\n        ))}\n      </StarContainer>\n    </div>\n  );\n};\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired, \n  onRatingChange: PropTypes.func.isRequired, \n  disabled: PropTypes.bool,\n};\n\nexport default Rating;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Confirm, Notify } from 'notiflix';\nimport Modal from '../../../Modal/Modal';\nimport {\n  FormContainer,\n  LabelText,\n  CommentBox,\n  CommentText,\n  SaveButton,\n  CancelButton,\n  EditButton,\n  ButtonsBox,\n  ButtonEdit,\n  ButtonDel,\n  IconEditBox,\n  IconContainer,\n  IconDel,\n  IconEdit,\n} from './ReviewForm.styled';\nimport sprite from '../../../../assets/images/icons/icons.svg';\nimport Rating from '../Rating/Rating';\nimport {\n  addReviewOperation,\n  updateReviewOperation,\n  deleteReviewOperation,\n} from '../../../../redux/reviews/operations';\n\nconst ReviewForm = ({ isOpen, onClose, review }) => {\n  const [formData, setFormData] = useState({\n    rating: '',\n    comment: '',\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setFormData({\n      rating: review?.rating ?? '',\n      comment: review?.comment ?? '',\n    });\n  }, [review]);\n\n  const handleChange = e => {\n    // if (!isEditing || !review) return;\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleRatingChange = newRating => {\n    // if (!isEditing || !review) return;\n    setFormData({\n      ...formData,\n      rating: newRating,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // if (!isEditing) return;\n    if (formData?.rating === '') {\n      Notify.warning('Please select a rating before submitting.');\n      return;\n    }\n\n    if (isEditMode) {\n      (async () => {\n        await dispatch(\n          updateReviewOperation({\n            rating: formData?.rating,\n            comment: formData?.comment,\n          })\n        );\n      })();\n    } else {\n      dispatch(addReviewOperation(formData));\n    }\n\n    onClose();\n  };\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleDelete = () => {\n    Confirm.show(\n      'Confirm',\n      'Are you sure you want to delete this?',\n      'Delete',\n      'Cancel',\n      async () => {\n        await dispatch(deleteReviewOperation());\n        onClose();\n      },\n      () => {},\n      {\n        messageColor: 'var(--primary-text-color);',\n        backgroundColor: 'var(--primary-bg-color)',\n        okButtonBackground: 'var(--accent-color)',\n        titleColor: 'var(--accent-color)',\n      }\n    );\n  };\n\n  const handleCancel = () => {\n    setFormData({\n      rating: '',\n      comment: '',\n    });\n    onClose();\n  };\n\n  const closeButtonPosition = { top: '16px', right: '16px' };\n  const isEditMode = review;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      closeButtonPosition={closeButtonPosition}\n    >\n      <FormContainer onSubmit={handleSubmit}>\n        <div>\n          <LabelText>Rating</LabelText>\n          <Rating\n            onRatingChange={handleRatingChange}\n            required\n            value={parseInt(formData?.rating)}\n            disabled={isEditMode && !isEditing}\n          ></Rating>\n        </div>\n        <div>\n          {isEditMode ? (\n            <>\n              <IconContainer>\n                <IconEditBox>\n                  <ButtonEdit type=\"button\" onClick={handleEdit}>\n                    <IconEdit>\n                      <use xlinkHref={`${sprite}#icon-pencil`} width={16} />\n                    </IconEdit>\n                  </ButtonEdit>\n                </IconEditBox>\n                <ButtonDel type=\"button\" onClick={handleDelete}>\n                  <IconDel>\n                    <use xlinkHref={`${sprite}#icon-trash`} width={16} />\n                  </IconDel>\n                </ButtonDel>\n              </IconContainer>\n              <CommentBox>\n                <LabelText htmlFor=\"comment\">Review</LabelText>\n                <CommentText\n                  id=\"comment\"\n                  name=\"comment\"\n                  value={formData?.comment}\n                  onChange={handleChange}\n                  required\n                  maxLength={300}\n                  placeholder=\"Enter Text\"\n                  disabled={!isEditing}\n                />\n              </CommentBox>\n              {isEditing && (\n                <ButtonsBox>\n                  <EditButton type=\"submit\">Edit</EditButton>\n                  <CancelButton type=\"button\" onClick={handleCancel}>\n                    Cancel\n                  </CancelButton>\n                </ButtonsBox>\n              )}\n            </>\n          ) : (\n            <div>\n              <CommentBox>\n                <LabelText htmlFor=\"comment\">Review</LabelText>\n                <CommentText\n                  id=\"comment\"\n                  name=\"comment\"\n                  value={formData?.comment}\n                  onChange={handleChange}\n                  required\n                  maxLength={300}\n                  placeholder=\"Enter Text\"\n                />\n              </CommentBox>\n              <ButtonsBox>\n                <SaveButton type=\"submit\">Save</SaveButton>\n                <CancelButton type=\"button\" onClick={handleCancel}>\n                  Cancel\n                </CancelButton>\n              </ButtonsBox>\n            </div>\n          )}\n        </div>\n      </FormContainer>\n    </Modal>\n  );\n};\n\nReviewForm.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  review: PropTypes.object,\n};\n\nexport default ReviewForm;\n","import styled from '@emotion/styled';\n\nexport const GooseImageEl = styled.img`\n  display: block;\n  width: 64px;\n  height: auto;\n`;\n\nexport const PageTitle = styled.h2`\n  color: var(--primary-text-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 32px; \n`;\n\nexport const GooseText = styled.p`\n  display: block;\n  color: var(--primary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  span {\n    color: var(--accent-color);\n  }\n`;\n\nexport const Thumb = styled.div`\n  margin-left: 8px;\n`;\n","import gooseHeader1x from 'assets/images/gooseHeader1x.png';\nimport gooseHeader2x from 'assets/images/gooseHeader2x.png';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport {\n  GooseImageEl,\n  GooseText,\n  PageTitle,\n  Thumb,\n} from './GooseImageWithTitle.styled';\n\nexport const GooseImageWithTitle = () => {\n  const location = useLocation();\n  const tasks = useSelector(selectTasks);\n  const selectedDay = location.pathname.split('/');\n  const defineCurentPage = () => {\n    if (location.pathname.includes('account')) return 'User profile';\n    if (location.pathname.includes('calendar')) return 'Calendar';\n    if (location.pathname.includes('statistics')) return 'Statistics';\n  };\n  const currentPageTitle = defineCurentPage();\n  const tasksInProgress = tasks.filter(\n    item => item.date === selectedDay[3]\n  ).length;\n\n  return (\n    <>\n      {tasksInProgress ? (\n        <>\n          <GooseImageEl\n            src={gooseHeader1x}\n            srcSet={`${gooseHeader1x} 1x, ${gooseHeader2x} 2x`}\n            alt=\"The goose invites you to organize your life and manage your team \"\n          />\n          <Thumb>\n            <PageTitle>{currentPageTitle}</PageTitle>\n            <GooseText>\n              <span>Let go</span> of the past and focus on the present!\n            </GooseText>\n          </Thumb>\n        </>\n      ) : (\n        <PageTitle>{currentPageTitle}</PageTitle>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchOwnReviewOperation } from 'redux/reviews/operations';\nimport { useMediaQuery } from 'react-responsive';\nimport { BurgerBtn } from './BurgerBtn/BurgerBtn';\nimport { FeedbackBtn } from './FeedbackBtn.jsx/FeedbackBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { HeaderSection } from './Header.styled';\nimport ReviewForm from './AddFeedbackModal/ReviewForm/ReviewForm';\nimport { GooseImageWithTitle } from './GooseImageWithTitle/GooseImageWithTitle';\nimport { useDispatch } from 'react-redux';\n\nexport const Header = ({ addSideBar, showSideBar }) => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1440px)',\n  });\n  const dispatch = useDispatch();\n  const [review, setReview] = useState(null);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  const openForm = () => {\n    setIsFormOpen(true);\n  };\n\n  const closeForm = () => {\n    setIsFormOpen(false);\n  };\n\n  useEffect(() => {\n    isFormOpen &&\n      (async () => {\n        const { payload } = await dispatch(fetchOwnReviewOperation());\n        setReview(\n          payload?.review && payload?.review?.length > 0\n            ? payload.review[0]\n            : undefined\n        );\n      })();\n  }, [isFormOpen, dispatch]);\n\n  return (\n    <HeaderSection showSideBar={showSideBar}>\n      {isDesktop ? (\n        <GooseImageWithTitle />\n      ) : (\n        <BurgerBtn addSideBar={addSideBar} />\n      )}\n      <FeedbackBtn openForm={openForm} />\n      <UserInfo />\n      {isFormOpen && (\n        <ReviewForm isOpen={isFormOpen} onClose={closeForm} review={review} />\n      )}\n    </HeaderSection>\n  );\n};\n\nHeader.propTypes = {\n  addSideBar: PropTypes.func,\n  showSideBar: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, max, desktop } from 'styles/media';\n\nexport const LogoutButtonEl = styled.button`\n  display: flex;\n  width: 131px;\n  height: 46px;\n  margin: auto auto 0px 0px;\n  flex-shrink: 0;\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  background-color: var(--btn-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  justify-content: center;\n  align-items: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--btn-bg-hover);\n  }\n\n  color: var(--invert-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.36px;\n\n  ${min(tablet)} {\n    font-size: 18px;\n    width: 141px;\n    height: 56px;\n    line-height: 24px;\n  }\n\n  svg {\n    stroke: var(--btn-text-color);\n    fill: transparent;\n    width: 20px;\n    height: 20px;\n    margin-left: 6px;\n  }\n\n  ${max(desktop - 0.02)} {\n    margin-bottom: 35px;\n  }\n`;\n","import sprite from '../../../assets/images/icons/icons.svg';\nimport { LogoutButtonEl } from './LogoutBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { logOutOperation } from 'redux/auth/operations';\n\nexport const LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    localStorage.removeItem('type');\n    localStorage.removeItem('date');\n    document.body.style.overflow = 'auto';\n    dispatch(logOutOperation());\n  };\n  return (\n    <LogoutButtonEl type=\"button\" onClick={handleLogOut}>\n      Logout\n      <svg>\n        <use xlinkHref={`${sprite}#icon-log-out`} />\n      </svg>\n    </LogoutButtonEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop, max } from 'styles/media';\n\nconst isShowSideBar = props => {\n  if (props.showSideBar) return '0%';\n  return '-110%';\n};\n\nexport const SideBarEl = styled.aside`\n  display: inline-flex;\n  padding: 24px 24px;\n  flex-direction: column;\n  width: 225px;\n  background-color: var(--sidebar-bg-color);\n  z-index: 5;\n  position: absolute;\n  transform: translateX(${isShowSideBar});\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${min(tablet)} {\n    width: 289px;\n  }\n  ${min(desktop)} {\n    height: 100vh;\n    /* max-height: 900px; */\n    position: fixed;\n    z-index: 1;\n    transform: translateX(0%);\n  }\n\n  ${max(desktop - 0.02)} {\n    height: 100vh;\n    /* max-height: 900px; */\n  }\n`;\n","import styled from '@emotion/styled';\nimport { min, tablet, desktop } from 'styles/media';\n\nexport const CloseBtn = styled.button`\n  display: block;\n  border: none;\n  background-color: inherit;\n  align-items: center;\n  padding: 0px;\n  margin-left: auto;\n  cursor: pointer;\n  svg {\n    fill: transparent;\n    stroke: var(--primary-text-color);\n    display: block;\n    width: 24px;\n    height: 24px;\n    ${min(tablet)} {\n      width: 34px;\n      height: 34px;\n    }\n    ${min(desktop)} {\n      display: none;\n    }\n  }\n`;\n","import { CloseBtn } from './CloseBtn.styled';\nimport PropTypes from 'prop-types';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const CloseSideBarBtn = ({ removeSideBar }) => {\n  return (\n    <CloseBtn onClick={removeSideBar}>\n      <svg>\n        <use xlinkHref={`${sprite}#icon-x-close`} />\n      </svg>\n    </CloseBtn>\n  );\n};\n\nCloseSideBarBtn.propTypes = {\n  removeSideBar: PropTypes.func,\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const GooseImg = styled.img`\n  width: 36px;\n  height: 35px;\n\n  ${min(tablet)} {\n    width: 60px;\n    height: 58px;\n  }\n  ${min(desktop)} {\n    width: 71px;\n    height: 68px;\n  }\n`;\n","import desktopGooseMainPage from 'assets/images/mainPage/desktop_GooseMainPage.png';\nimport desktopGooseMainPage2x from 'assets/images/mainPage/desktop_GooseMainPage@2x.png';\nimport { GooseImg } from './GooseImage.styled';\n\nexport const GooseImage = () => {\n  return (\n    <GooseImg\n      src={desktopGooseMainPage}\n      srcSet={`${desktopGooseMainPage} 1x, ${desktopGooseMainPage2x} 2x`}\n      alt=\"The goose invites you to organize your life and manage your team \"\n    />\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const TitleBoxEl = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n  ${min(tablet)} {\n    margin-bottom: 50px;\n  }\n  ${min(desktop)} {\n    margin-bottom: 32px;\n  }\n\n  h2 {\n    display: block;\n    margin: 0 0 0 6px;\n    color: var(--sidebar-logo-color);\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n      0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 22px;\n    ${min(tablet)} {\n      font-size: 22px;\n    }\n    ${min(desktop)} {\n      font-size: 24px;\n      line-height: 24px;\n      margin: 0 0 0 10px;\n    }\n\n    span {\n      color: var(--sidebar-logo-color);\n      font-family: Inter;\n      font-size: 16px;\n      font-style: italic;\n      font-weight: 700;\n      line-height: 24px;\n      margin-left: -1px;\n      margin-right: 2px;\n      ${min(tablet)} {\n        font-size: 22px;\n      }\n      ${min(desktop)} {\n        font-size: 24px;\n      }\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { CloseSideBarBtn } from '../CloseBtn/CloseBtn';\nimport { GooseImage } from '../GooseImage/GooseImage';\nimport { TitleBoxEl } from './TitleBox.styled';\n\nexport const TitleBox = ({ removeSideBar }) => {\n  return (\n    <TitleBoxEl>\n      <GooseImage />\n      <h2>\n        G<span>oo</span>seTrack\n      </h2>\n      <CloseSideBarBtn removeSideBar={removeSideBar} />\n    </TitleBoxEl>\n  );\n};\n\nTitleBox.propTypes = {\n  removeSideBar: PropTypes.func,\n};","import styled from '@emotion/styled';\nimport { useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { tablet, min } from 'styles/media';\n\nexport const NavTitle = styled.h3`\n  margin: 0 0 24px 0;\n  color: var(--sidebar-navTitle-color);\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 14px;\n  }\n`;\nexport const NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin: 0px;\n  padding: 0px;\n  gap: 18px;\n  list-style: none;\n`;\n\nexport const NavListItem = styled.li`\n  display: block;\n\n  background-color: ${props => {\n    const location = useLocation();\n    if (location.pathname.includes(props.page))\n      return 'var(--sidebar-accent-color)';\n    return 'transparent';\n  }};\n\n  padding: 10px 0px 10px 12px;\n  border-radius: 8px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: var(--sidebar-accent-color);\n  }\n`;\n\nexport const NavLinkSideBar = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => {\n    const location = useLocation();\n    const curentTheme = useSelector(selectTheme);\n    if (curentTheme === 'dark') return 'var(--invert-text-color)';\n    if (location.pathname.includes(props.to)) return 'var(--accent-color)';\n    return 'var(--sidebar-text-color)';\n  }};\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  ${min(tablet)} {\n    font-size: 16px;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 8px;\n    ${min(tablet)} {\n      width: 24px;\n      height: 24px;\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const IconWithFill = styled.svg`\n  stroke: transparent;\n  fill: ${props => {\n    const location = useLocation();\n    const curentTheme = useSelector(selectTheme);\n    if (curentTheme === 'dark') return 'var(--invert-text-color)';\n    if (location.pathname.includes(props.page)) return 'var(--accent-color)';\n    return 'var(--sidebar-text-color)';\n  }};\n`;\n\nexport const IconWithStroke = styled.svg`\n  stroke: ${props => {\n    const location = useLocation();\n    const curentTheme = useSelector(selectTheme);\n    if (curentTheme === 'dark') return 'var(--invert-text-color)';\n    if (location.pathname.includes(props.page)) return 'var(--accent-color)';\n    return 'var(--sidebar-text-color)';\n  }};\n  fill: transparent;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  NavTitle,\n  NavList,\n  NavListItem,\n  NavLinkSideBar,\n  IconWithStroke,\n  IconWithFill,\n} from './UserNav.styled';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nexport const UserNavigation = ({ removeSideBar }) => {\n  const handleChangeCurrentPage = () => {\n    removeSideBar();\n  };\n\n  return (\n    <>\n      <NavTitle>User panel</NavTitle>\n      <nav>\n        <NavList>\n          <NavListItem page=\"account\">\n            <NavLinkSideBar to=\"account\" onClick={handleChangeCurrentPage}>\n              <IconWithStroke page=\"account\">\n                <use xlinkHref={`${sprite}#icon-user`} />\n              </IconWithStroke>\n              My account\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem page=\"calendar\">\n            <NavLinkSideBar to=\"calendar\" onClick={handleChangeCurrentPage}>\n              <IconWithStroke page=\"calendar\">\n                <use xlinkHref={`${sprite}#icon-calendar`} />\n              </IconWithStroke>\n              Calendar\n            </NavLinkSideBar>\n          </NavListItem>\n          <NavListItem page=\"statistics\">\n            <NavLinkSideBar to=\"statistics\" onClick={handleChangeCurrentPage}>\n              <IconWithFill page=\"statistics\">\n                <use xlinkHref={`${sprite}#icon-chart`} />\n              </IconWithFill>\n              Statistics\n            </NavLinkSideBar>\n          </NavListItem>\n        </NavList>\n      </nav>\n    </>\n  );\n};\n\nUserNavigation.propTypes = {\n  removeSideBar: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { LogoutBtn } from './LogoutBtn.jsx/LogoutBtn';\nimport { SideBarEl } from './SideBar.styled';\nimport { TitleBox } from './TitleBox/TitleBox';\nimport { UserNavigation } from './UserNav/UserNav';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const SideBar = ({ removeSideBar, showSideBar }) => {\n  const desktop = useMediaQuery({ minWidth: 1440 });\n  if (showSideBar && !desktop) {\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = 'auto';\n  }\n\n  return (\n    <SideBarEl showSideBar={showSideBar}>\n      <TitleBox removeSideBar={removeSideBar} />\n      <UserNavigation removeSideBar={removeSideBar} />\n      <LogoutBtn />\n    </SideBarEl>\n  );\n};\n\nSideBar.propTypes = {\n  removeSideBar: PropTypes.func,\n  showSideBar: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\nimport { tablet, min, desktop } from 'styles/media';\n\nexport const MainLayoutContainer = styled.div`\n  display: flex;\n  position: relative;\n  margin: 0 auto;\n  height: 100%;\n  max-width: 375px;\n  background: var(--page-bg-color);\n  overflow-x: hidden;\n  ${min(tablet)} {\n    max-width: 768px;\n  }\n  ${min(desktop)} {\n    max-width: 1440px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1087px;\n  background-color: var(--page-bg-color);\n`;\n\nexport const SideBarPlaceholder = styled.div`\nwidth: 289px;\n`\n","import { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { Header } from 'components/Header/Header';\nimport { SideBar } from 'components/SideBar/SideBar';\nimport { Outlet } from 'react-router-dom';\nimport { MainLayoutContainer, SideBarPlaceholder } from './MainLayout.styled';\nimport { Container } from './MainLayout.styled';\nimport { useCallback } from 'react';\n\nexport const pages = {\n  account: 'User Profile',\n  calendar: 'Calendar',\n  statistics: 'Statistics',\n};\n\nconst MainLayout = ({ children }) => {\n  const [showSideBar, setShowSideBar] = useState(false);\n\n  const addSideBar = () => setShowSideBar(true);\n\n  const removeSideBar = useCallback(() => {\n    setShowSideBar(false);\n  }, []);\n\n  const desktop = useMediaQuery({ minWidth: 1440 });\n\n  return (\n    <MainLayoutContainer>\n      <SideBar removeSideBar={removeSideBar} showSideBar={showSideBar} />\n      {desktop && <SideBarPlaceholder />}\n      <Container>\n        <Header addSideBar={addSideBar} showSideBar={showSideBar} />\n        <Container>\n          {children}\n          <Outlet />\n        </Container>\n      </Container>\n    </MainLayoutContainer>\n  );\n};\n\nexport default MainLayout;\n","import styled from '@emotion/styled';\nimport { mobile, max } from 'styles/media';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--primary-bg-color);\n  border: 1px solid #dce3e5cc;\n  border-radius: 8px;\n  box-shadow: 0px 4px 57px 0px rgba(17, 17, 17, 0.05);\n  z-index: 1000;\n  ${max(mobile)} {\n    width: 100%;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  z-index: 999;\n`;\n\nexport const Content = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 24px;\n  padding: 0;\n`;\n\nexport const IconClose = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--close-color);\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    stroke: #84828a;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Backdrop, Container, IconClose, CloseButton } from './Modal.styled';\nimport sprite from '../../assets/images/icons/icons.svg';\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  closeButtonPosition = { top: '14px', right: '14px' },\n  children,\n}) => {\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscKeyPress = event => {\n      if (isOpen && event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n    window.addEventListener('keydown', handleEscKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyPress);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Container id=\"modal-container\">\n        <CloseButton onClick={onClose} style={closeButtonPosition}>\n          <IconClose>\n            <use xlinkHref={`${sprite}#icon-x-close`} width={24} height={24} />\n          </IconClose>\n        </CloseButton>\n        {children}\n      </Container>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired, \n  onClose: PropTypes.func.isRequired,\n  closeButtonPosition: PropTypes.object,\n  children: PropTypes.node, \n};\n\nexport default Modal;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectTasksState = state => state.tasks;\nconst selectTasks = state => state.tasks.tasks;\nconst selectTasksError = state => state.tasks.error;\nconst selectIsTasksLoading = state => state.tasks.isTasksLoading;\nconst selectIsFetchingTasks = state => state.tasks.isFetchingTasks;\nconst selectIsAdding = state => state.tasks.isAdding;\nconst selectIsDeleting = state => state.tasks.isDeleting;\nconst selectIsUpdating = state => state.tasks.isUpdating;\nconst selectCurrentTaskId = state => state.tasks.currentTaskId;\n\nconst selectTaskOperations = createSelector(\n  [selectIsFetchingTasks, selectIsAdding, selectIsDeleting, selectIsUpdating],\n  (isFetchingTasks, isAdding, isDeleting, isUpdating) => ({\n    isFetchingTasks,\n    isAdding,\n    isDeleting,\n    isUpdating,\n  })\n);\n\nexport {\n  selectTasks,\n  selectCurrentTaskId,\n  selectTasksError,\n  selectIsAdding,\n  selectIsDeleting,\n  selectIsTasksLoading,\n  selectIsUpdating,\n  selectIsFetchingTasks,\n  selectTaskOperations,\n  selectTasksState,\n};\n","const selectTheme = state => state.theme.theme;\n\nexport { selectTheme };\n"],"names":["BurgerButtonEl","styled","BurgerBtn","addSideBar","type","onClick","xlinkHref","sprite","FeedbackButton","min","tablet","FeedbackBtn","openForm","UserInfoBox","UserName","UserAvatarThumb","UserImage","UserAvatar","desktop","ThemeBtn","ThemeToggler","dispatch","useDispatch","curentTheme","useSelector","selectTheme","useEffect","document","documentElement","classList","remove","add","setTheme","THEMES","toggle","UserInfo","isLoggedIn","selectIsLoggedIn","isRefreshingUser","selectIsRefreshingUser","user","selectUser","name","avatarURL","src","href","HeaderSection","FormContainer","LabelText","CommentBox","CommentText","max","mobile","ButtonsBox","SaveButton","CancelButton","EditButton","IconContainer","IconEditBox","ButtonEdit","IconEdit","IconDel","ButtonDel","StarContainer","Star","FilledStar","value","onRatingChange","disabled","useState","rating","setRating","map","star","selectedRating","width","height","isOpen","onClose","review","comment","formData","setFormData","isEditing","setIsEditing","handleChange","e","target","handleCancel","isEditMode","Modal","closeButtonPosition","top","right","onSubmit","preventDefault","updateReviewOperation","addReviewOperation","Notify","newRating","required","parseInt","Confirm","deleteReviewOperation","messageColor","backgroundColor","okButtonBackground","titleColor","htmlFor","id","onChange","maxLength","placeholder","GooseImageEl","PageTitle","GooseText","Thumb","GooseImageWithTitle","location","useLocation","tasks","selectTasks","selectedDay","pathname","split","currentPageTitle","includes","tasksInProgress","filter","item","date","length","gooseHeader1x","srcSet","gooseHeader2x","alt","Header","showSideBar","isDesktop","useMediaQuery","query","setReview","isFormOpen","setIsFormOpen","fetchOwnReviewOperation","payload","undefined","LogoutButtonEl","LogoutBtn","localStorage","removeItem","body","style","overflow","logOutOperation","SideBarEl","props","CloseBtn","CloseSideBarBtn","removeSideBar","GooseImg","GooseImage","desktopGooseMainPage","desktopGooseMainPage2x","TitleBoxEl","TitleBox","NavTitle","NavList","NavListItem","page","NavLinkSideBar","NavLink","to","IconWithFill","IconWithStroke","UserNavigation","handleChangeCurrentPage","SideBar","minWidth","MainLayoutContainer","Container","SideBarPlaceholder","pages","account","calendar","statistics","children","setShowSideBar","useCallback","Backdrop","CloseButton","IconClose","handleEscKeyPress","event","key","window","addEventListener","removeEventListener","ReactDOM","currentTarget","getElementById","state","selectIsUpdating","isUpdating","createSelector","isFetchingTasks","isAdding","isDeleting","theme"],"sourceRoot":""}