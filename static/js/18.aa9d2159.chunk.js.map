{"version":3,"file":"static/js/18.aa9d2159.chunk.js","mappings":"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","sources":["components/MainContainer/MainContainer.styled.jsx","components/MainContainer/MainContainer.jsx","components/Account/UserInfo/UserInfo.styled.jsx","components/Account/UserInfo/UserInfo.jsx","components/Account/UserForm/UserForm.styled.jsx","components/Account/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const Main = styled.main`\n  background-color: var(--page-bg-color);\n  padding-top: 64px;\n  padding-bottom: 40px;\n\n  ${min(tablet)} {\n    padding-bottom: 38px;\n  }\n\n  ${min(desktop)} {\n    padding-top: 38px;\n    padding-bottom: 32px;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 0 20px;\n\n  ${min(tablet)} {\n    padding: 0 32px;\n  }\n`;\n","import { Container, Main } from './MainContainer.styled';\n\nexport const MainContainer = ({ children }) => {\n  return (\n    <Main>\n      <Container>{children}</Container>\n    </Main>\n  );\n};\n","import styled from '@emotion/styled';\nimport { min, tablet, desktop } from 'styles/media';\n\nexport const UserContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  margin-bottom: 40px;\n  max-width: 299px;\n  flex-direction: column;\n  align-items: center;\n\n  ${min(tablet)} {\n    max-width: 704px;\n    margin-bottom: 66px;\n  }\n  ${min(desktop)} {\n    max-width: 1087px;\n    display: flex;\n    margin-bottom: 44px;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  margin: -31px 0 18px;\n  border: solid 2px var(--accent-color);\n  overflow: hidden;\n  ${min(tablet)} {\n    margin: 40px 0 20px;\n  }\n  ${min(desktop)} {\n    position: relative;\n    width: 124px;\n    height: 124px;\n    border-radius: 50%;\n    margin: 60px 0 20px;\n    border: solid 2px var(--accent-color);\n  }\n`;\nexport const AddAvatarButton = styled.label`\n  position: absolute;\n  bottom: 16px;\n  right: 14px;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: none;\n  background-color: var(--accent-color);\n  z-index: 1;\n  cursor: pointer;\n  ${min(tablet)} {\n    bottom: 19px;\n  }\n  ${min(desktop)} {\n    position: absolute;\n    bottom: 16px;\n    right: 24px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    border: none;\n    background-color: var(--accent-color);\n    cursor: pointer;\n  }\n`;\nexport const AddAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  fill: transparent;\n  stroke: var(--primary-bg-color);\n  .dark & {\n    stroke: var(--primary-text-color);\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 24px;\n    height: 24px;\n    fill: transparent;\n    stroke: var(--primary-bg-color);\n    .dark & {\n      stroke: var(--primary-text-color);\n    }\n  }\n`;\nexport const UserAvatar = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 48px;\n  height: 48px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 48px;\n    height: 48px;\n    fill: #3e85f32e;\n    .dark & {\n      fill: #ffffff2e;\n    }\n  }\n`;\nexport const UserName = styled.p`\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n\n  font-weight: 700;\n  line-height: 18px;\n  margin: 0 0 4px 0;\n  .dark & {\n    color: var(--primary-text-color);\n  }\n  ${min(desktop)} {\n    color: var(--secondary-text-color);\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 18px;\n    margin: 0 0 8px 0;\n    .dark & {\n      color: var(--primary-text-color);\n    }\n  }\n`;\nexport const UserStatus = styled.p`\n  margin: 0;\n  color: var(--secondary-text-color);\n  font-family: Inter;\n  font-size: 12px;\n\n  font-weight: 600;\n  line-height: 14px;\n  .dark & {\n    color: var(--user-label-color);\n  }\n  ${min(desktop)} {\n    margin: 0;\n    color: var(--secondary-text-color);\n    font-family: Inter;\n    font-size: 14px;\n\n    font-weight: 600;\n    line-height: 18px;\n    .dark & {\n      color: var(--user-label-color);\n    }\n  }\n`;\n\nexport const InputFile = styled.input`\n  display: none;\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n\n  object-fit: cover;\n`;\nexport const UserWrapper = styled.div`\n  position: relative;\n`;\n","import React from 'react';\nimport sprite from '../../../assets/images/icons/icons.svg';\n\nimport {\n  UserContainer,\n  AvatarWrapper,\n  UserAvatar,\n  AddAvatar,\n  AddAvatarButton,\n  UserName,\n  UserStatus,\n  InputFile,\n  AvatarImage,\n  UserWrapper,\n} from './UserInfo.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserAvatarOperation } from 'redux/auth/operations';\nimport { selectUserAvatar } from 'redux/auth/selectors';\n\nexport const UserInfo = () => {\n  const dispatch = useDispatch();\n  const avatarCloud = useSelector(selectUserAvatar);\n\n  const fileInputChange = e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('avatar', file);\n    dispatch(updateUserAvatarOperation(formData));\n  };\n\n  return (\n    <UserContainer>\n      <UserWrapper>\n        <AddAvatarButton>\n          <InputFile type=\"file\" name=\"avatar\" onChange={fileInputChange} />\n          <AddAvatar>\n            <use href={`${sprite}#icon-plus`}></use>\n          </AddAvatar>\n        </AddAvatarButton>\n        <AvatarWrapper>\n          {avatarCloud ? (\n            <AvatarImage src={avatarCloud} alt=\"avatar\" />\n          ) : (\n            <UserAvatar>\n              <use href={`${sprite}#icon-ph_user`}></use>\n            </UserAvatar>\n          )}\n        </AvatarWrapper>\n      </UserWrapper>\n      <UserName>Username</UserName>\n      <UserStatus>User</UserStatus>\n    </UserContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { min, tablet, desktop } from 'styles/media';\nexport const Container = styled.div`\n  max-width: 335px;\n  height: 653px;\n  border-radius: 16px;\n  background-color: var(--primary-bg-color);\n  .dark & {\n    background-color: var(--primary-bg-color);\n  }\n  ${min(tablet)} {\n    max-width: 704px;\n    height: 854px;\n  }\n\n  ${min(desktop)} {\n    max-width: 1087px;\n    height: 752px;\n    background-image: none;\n    border-radius: 16px;\n    background-color: var(--primary-bg-color);\n    .dark & {\n      background-color: var(--primary-bg-color);\n    }\n  }\n`;\n\nexport const AddUserForm = styled(Form)`\n  max-width: 299px;\n  height: 392px;\n  margin: 0 auto;\n  ${min(tablet)} {\n    margin: 0 auto;\n    max-width: 354px;\n    height: 458px;\n  }\n  ${min(desktop)} {\n    position: relative;\n    max-width: 758px;\n    height: 200px;\n    margin: 0 auto;\n    display: grid;\n    grid-template: repeat(3, 1fr) / repeat(2, 1fr);\n    justify-content: center;\n    gap: 18px 50px;\n  }\n`;\nexport const FormField = styled(Field)`\n  ::-webkit-calendar-picker-indicator {\n    margin: 0 10px 0;\n    cursor: pointer;\n    opacity: 0;\n  }\n  max-width: 283px;\n  padding: 12px 0 12px 14px;\n  margin-bottom: 18px;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  color: var(--primary-text-color);\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  &focus {\n    border-color: var(--input-border-color-focus);\n  }\n  .dark & {\n    background-color: var(--primary-bg-color);\n    color: var(--primary-text-color);\n    border-color: var(--calendar-grid-border);\n  }\n\n  ${min(tablet)} {\n    max-width: 334px;\n    padding: 14px 0 14px 18px;\n    margin-bottom: 24px;\n  }\n  ${min(desktop)} {\n    margin: 0;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 18px;\n    &focus {\n      border-color: var(--input-border-color-focus);\n    }\n    .dark & {\n      background-color: var(--primary-bg-color);\n      color: var(--primary-text-color);\n      border-color: var(--calendar-grid-border);\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: var(--primary-text-color);\n  font-family: Inter;\n  font-size: 12px;\n  line-height: 14px;\n  .dark & {\n    color: var(--user-label-color);\n  }\n  ${min(desktop)} {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    color: var(--primary-text-color);\n    font-family: Inter;\n    font-size: 14px;\n    line-height: 18px;\n    .dark & {\n      color: var(--user-label-color);\n    }\n  }\n`;\nexport const Span = styled.div`\n  position: relative;\n  max-width: 299px;\n  ${min(tablet)} {\n    max-width: 354px;\n  }\n`;\n\nexport const ChevronDown = styled.svg`\n  position: absolute;\n  top: 36px;\n  right: 11px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  pointer-events: none;\n  fill: var(--primary-text-color);\n  ${min(tablet)} {\n    top: 38px;\n  }\n  ${min(desktop)} {\n    top: 42px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 22px;\n\n  ${min(desktop)} {\n    position: absolute;\n    top: 352px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Button = styled.button`\n  width: 196px;\n  height: 46px;\n  border: none;\n  cursor: pointer;\n  padding: 10px 0px;\n  border-radius: 16px;\n  color: var(--primary-bg-color);\n  background-color: var(--btn-bg-color);\n  text-align: center;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n\n  &:hover {\n    background-color: var(--btn-bg-hover);\n  }\n  .dark & {\n    color: var(--primary-text-color);\n  }\n  ${min(tablet)} {\n  }\n  ${min(desktop)} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    max-width: 262px;\n    height: 48px;\n    border: none;\n    cursor: pointer;\n    padding: 10px 0px;\n    border-radius: 16px;\n    color: var(--primary-bg-color);\n    background-color: var(--btn-bg-color);\n\n    &:hover {\n      background-color: var(--btn-bg-hover);\n    }\n    .dark & {\n      color: var(--primary-text-color);\n    }\n  }\n`;\n","import React from 'react';\nimport { Formik, ErrorMessage, useFormik } from 'formik';\nimport { object, string, number, date } from 'yup';\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport {\n  Container,\n  AddUserForm,\n  FormField,\n  Label,\n  Button,\n  ButtonContainer,\n  ChevronDown,\n  Span,\n} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserDataOperation } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\nimport { Notify } from 'notiflix';\n\nconst schema = object().shape({\n  username: string().max(16).required(),\n  phone: number(),\n  birthday: date().default(() => new Date()),\n  skype: string().max(16),\n  email: string().email().required(),\n});\n\nexport const UserForm = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const initialValues = {\n    username: user.name,\n    phone: user.phone,\n    birthday: user.birthday,\n    skype: user.social,\n    email: user.email,\n  };\n\n  const { values, handleChange, handleSubmit } = useFormik({\n    initialValues: initialValues,\n    validationSchema: schema,\n    validateOnChange: false,\n    onSubmit: onSubmit,\n  });\n\n  async function onSubmit(values) {\n    const newData = {\n      name: values.username,\n      email: values.email,\n      birthday: values.birthday,\n      phone: values.phone,\n      social: values.skype,\n    };\n\n    await dispatch(updateUserDataOperation(newData));\n\n    Notify.success('Data update successfully');\n  }\n\n  return (\n    <Container>\n      <UserInfo />\n      <Formik>\n        <AddUserForm name=\"userform\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Label>\n            User Name\n            <FormField\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Enter your name\"\n              value={values.username}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"username\" component=\"div\" />\n          </Label>\n          <Label>\n            Phone\n            <FormField\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"Enter your phone number\"\n              value={values.phone}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"phone\" component=\"div\" />\n          </Label>\n          <Span>\n            <Label>\n              Birthday\n              <FormField\n                type=\"date\"\n                name=\"birthday\"\n                placeholder=\"DD/MM/YYYY\"\n                value={values.birthday}\n                onChange={handleChange}\n              />\n              <ChevronDown>\n                <use href={`${sprite}#icon-chevron-down`}></use>\n              </ChevronDown>\n              <ErrorMessage name=\"birthday\" component=\"div\" />\n            </Label>\n          </Span>\n          <Label>\n            Skype\n            <FormField\n              type=\"text\"\n              name=\"skype\"\n              placeholder=\"Add a skype number\"\n              value={values.skype}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"skype\" component=\"div\" />\n          </Label>\n          <Label>\n            Email\n            <FormField\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              value={values.email}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </Label>\n          <ButtonContainer>\n            <Button type=\"submit\">Save changes</Button>\n          </ButtonContainer>\n        </AddUserForm>\n      </Formik>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { UserForm } from 'components/Account/UserForm/UserForm';\nimport { MainContainer } from 'components/MainContainer/MainContainer';\nconst AccountPage = () => {\n  return (\n    <MainContainer>\n      <UserForm />\n    </MainContainer>\n  );\n};\n\nexport default AccountPage;\n"],"names":["Main","styled","min","tablet","desktop","Container","MainContainer","children","UserContainer","AvatarWrapper","AddAvatarButton","AddAvatar","UserAvatar","UserName","UserStatus","InputFile","AvatarImage","UserWrapper","UserInfo","dispatch","useDispatch","avatarCloud","useSelector","selectUserAvatar","type","name","onChange","e","file","target","files","formData","FormData","append","updateUserAvatarOperation","href","sprite","src","alt","AddUserForm","Form","FormField","Field","Label","Span","ChevronDown","ButtonContainer","Button","schema","object","shape","username","string","max","required","phone","number","birthday","date","default","Date","skype","email","UserForm","user","selectUser","initialValues","social","useFormik","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","newData","updateUserDataOperation","Notify","autoComplete","placeholder","value","component"],"sourceRoot":""}