{"version":3,"file":"static/js/803.bf84b969.chunk.js","mappings":"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","sources":["components/Calendar/ChoosedDay/ChoosedDay.styled.jsx","components/Calendar/ChoosedDay/Title/Title.styled.jsx","components/Calendar/ChoosedDay/Title/Title.jsx","components/Calendar/ChoosedDay/Tasks/Tasks.styled.jsx","components/Calendar/ChoosedDay/PopUpReplace/PopUpReplace.styled.jsx","components/Calendar/ChoosedDay/PopUpReplace/PopUpReplace.jsx","redux/tasks/selectors.js","components/TaskModal/TaskForm/TaskForm.styled.jsx","components/TaskModal/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","components/Calendar/ChoosedDay/Tasks/Tasks.jsx","components/Calendar/ChoosedDay/Head/Head.styled.jsx","components/Calendar/ChoosedDay/Head/Head.jsx","components/Calendar/ChoosedDay/ChoosedDay.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","helpers/setDay.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const ContainerMain = styled.div`\n  display: flex;\n  gap: 30px;\n  overflow-x: auto;\n  overflow-y: hidden;\n  padding-bottom: 34px;\n  scroll-snap-type: x mandatory;\n\n  ${min(tablet)} {\n    padding-bottom: 150px;\n    gap: 16px;\n  }\n  ${min(desktop)} {\n    padding-bottom: 0;\n    gap: 27px;\n  }\n  /* width*/\n  &::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background: var(--task-scrollbar-track);\n    border-radius: 12px;\n  }\n\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: var(--task-scrollbar-thumb);\n    border-radius: 12px;\n  }\n\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: var(--task-scrollbar-thumb-hover);\n  }\n`;\n\nexport const ContainerSecond = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  max-height: 432px;\n  height: fit-content;\n  position: relative;\n  background-color: var(--primary-bg-color);\n  border: 1px solid var(--calendar-grid-border);\n  border-radius: 8px;\n  scroll-snap-align: start;\n\n  ${min(tablet)} {\n    max-height: 568px;\n  }\n  ${min(desktop)} {\n  }\n`;\n\nexport const ContainerButtonAddTask = styled.div`\n  border-radius: 8px;\n  padding: 0 20px 20px 20px;\n  ${min(tablet)} {\n    padding: 0 18px 18px 18px;\n  }\n`;\n\nexport const ButtonAddTask = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  background-color: var(--add-task-bg);\n  border: 1px dashed var(--accent-color);\n  border-radius: 8px;\n  padding: 12px 0;\n`;\n\nexport const IconButtonAddTask = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--primary-text-color);\n  & use {\n    fill: transparent;\n  }\n`;\n\nexport const ButtonAddTaskText = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  color: var(--primary-text-color);\n`;\n","import styled from '@emotion/styled';\nimport { min, tablet } from 'styles/media';\n\nexport const ContainerTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 18px 18px 0;\n  margin-bottom: ${({ tasks }) => (tasks.length === 0 ? '35px' : '24px')};\n  ${min(tablet)} {\n    margin-bottom: ${({ tasks }) => (tasks.length === 0 ? '35px' : '28px')};\n    padding: 20px 20px 0;\n  }\n`;\n\nexport const MainTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 20px;\n  margin: 0;\n\n  color: var(--primary-text-color);\n  ${min(tablet)} {\n    font-size: 20px;\n    line-height: 24px;\n  }\n`;\n\nexport const IconAddTask = styled.svg`\n  height: 22px;\n  width: 22px;\n  stroke: var(--primary-text-color);\n  cursor: pointer;\n  & use {\n    fill: transparent;\n  }\n  ${min(tablet)} {\n    height: 24px;\n    width: 24px;\n  }\n`;\n","import React from 'react';\nimport { ContainerTitle, IconAddTask, MainTitle } from './Title.styled';\nimport sprite from '../../../../assets/images/icons/icons.svg';\n\nconst Title = ({ type, onAdd, tasks }) => {\n  return (\n    <ContainerTitle tasks={tasks}>\n      <MainTitle>\n        {(() => {\n          switch (type) {\n            case 'to-do':\n              return 'To do';\n\n            case 'in-progress':\n              return 'In progress';\n            case 'done':\n              return 'Done';\n\n            default:\n              return;\n          }\n        })()}\n      </MainTitle>\n      <IconAddTask onClick={onAdd}>\n        <use xlinkHref={sprite + '#icon-icon-plus'} />\n      </IconAddTask>\n    </ContainerTitle>\n  );\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\nimport { desktop, min, tablet } from 'styles/media';\n\nexport const ListTasks = styled.ul`\n  padding: 0 6px 0 18px;\n  margin-right: 6px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  width: 328px;\n  & #popUpReplace {\n    ${({ tasks }) =>\n      tasks.length === 1\n        ? 'top: 16px !important; right: 81px; margin-right: 12px;'\n        : null}\n  }\n\n  & li:nth-last-of-type(-n + 1) {\n    margin-bottom: 32px;\n\n    & #popUpReplace {\n      margin-top: 0;\n      top: -12px;\n      ${({ tasks }) => (tasks.length === 1 ? '0' : '-12px')}\n    }\n  }\n  ${min(tablet)} {\n    width: 334px;\n    gap: 18px;\n    padding: 0 8px 0 20px;\n    margin-right: 8px;\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n  }\n  ${min(desktop)} {\n    width: 313px;\n  }\n  /* width*/\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background: var(--task-scrollbar-track);\n    border-radius: 12px;\n  }\n\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: var(--task-scrollbar-thumb);\n    border-radius: 12px;\n  }\n\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: var(--task-scrollbar-thumb-hover);\n  }\n`;\n\nexport const Task = styled.li`\n  position: relative;\n  background-color: var(--page-bg-color);\n  padding: 14px 14px 18px 14px;\n  border: 1px solid var(--calendar-grid-border);\n\n  border-radius: 8px;\n`;\n\nexport const TaskTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--primary-text-color);\n\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin-bottom: 28px;\n`;\n\nexport const ContainerButtonsTask = styled.div`\n  display: flex;\n  align-items: end;\n`;\n\nexport const TaskImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border: 1.8px solid var(--accent-color);\n  border-radius: 50%;\n  margin-right: 8px;\n`;\nexport const TaskImagePlug = styled.svg`\n  width: 32px;\n  height: 32px;\n  border: 1.8px solid var(--accent-color);\n  border-radius: 50%;\n  margin-right: 8px;\n  fill: #3e85f32e;\n  .dark & {\n    fill: #ffffff2e;\n  }\n`;\n\nexport const TaskButtonPriority = styled.button`\n  height: 20px;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 12px;\n  color: var(--task-priority-color);\n  padding: 4px 12px;\n  background-color: ${({ priority }) => {\n    switch (priority) {\n      case 'low':\n        return 'var(--task-priority-low-bg)';\n      case 'medium':\n        return 'var(--task-priority-medium-bg)';\n      case 'high':\n        return 'var(--task-priority-high-bg)';\n\n      default:\n        return;\n    }\n  }};\n  border: none;\n  border-radius: 4px;\n`;\n\nexport const ContainerIcons = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-left: auto;\n`;\n\nexport const IconTask = styled.svg`\n  height: 14px;\n  width: 14px;\n  stroke: var(--primary-text-color);\n  cursor: pointer;\n  & use {\n    fill: transparent;\n  }\n  ${min(tablet)} {\n    height: 16px;\n    width: 16px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ContainerReplaceTask = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  background-color: var(--task-popup-bg);\n  padding: 14px;\n  border-radius: 8px;\n  position: absolute;\n  z-index: 2;\n  margin-top: 12px;\n  right: -1px;\n  box-shadow: 0px 4px 16px 0px #1111111a;\n`;\n\nexport const ReplaceTaskContainerText = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  white-space: nowrap;\n\n  cursor: pointer;\n`;\n\nexport const ReplaceTaskText = styled.span`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 14px;\n  color: var(--task-popup-color-text);\n`;\n","import React, { useEffect } from 'react';\n\nimport sprite from '../../../../assets/images/icons/icons.svg';\nimport {\n  ContainerReplaceTask,\n  ReplaceTaskContainerText,\n  ReplaceTaskText,\n} from './PopUpReplace.styled';\nimport { useDispatch } from 'react-redux';\nimport { updateTaskOperation } from 'redux/tasks/operations';\nimport { IconTask } from '../Tasks/Tasks.styled';\nimport { Notify } from 'notiflix';\n\nconst PopUpReplace = ({\n  type,\n  tasks,\n  setTasks,\n  setIsShowPopUpReplace,\n  _id,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const onClickClose = ({ target }) => {\n      if (target.id !== 'togglePopUp') {\n        setIsShowPopUpReplace(false);\n      }\n    };\n    const onEscClose = ({ code }) => {\n      if (code === 'Escape') {\n        setIsShowPopUpReplace(false);\n      }\n    };\n\n    document.addEventListener('click', onClickClose);\n    document.addEventListener('keydown', onEscClose);\n\n    return () => {\n      document.removeEventListener('click', onClickClose);\n      document.removeEventListener('keydown', onEscClose);\n    };\n  }, [setIsShowPopUpReplace]);\n\n  const viewCategories = type => {\n    let arrCategories = [];\n    switch (type) {\n      case 'to-do':\n        arrCategories = [\n          {\n            id: 1,\n            typeCategory: 'In progress',\n            typeForOnClick: 'in-progress',\n          },\n          { id: 2, typeCategory: 'Done', typeForOnClick: 'done' },\n        ];\n        break;\n\n      case 'in-progress':\n        arrCategories = [\n          { id: 1, typeCategory: 'To Do', typeForOnClick: 'to-do' },\n          { id: 2, typeCategory: 'Done', typeForOnClick: 'done' },\n        ];\n        break;\n      case 'done':\n        arrCategories = [\n          { id: 1, typeCategory: 'To Do', typeForOnClick: 'to-do' },\n          {\n            id: 2,\n            typeCategory: 'In progress',\n            typeForOnClick: 'in-progress',\n          },\n        ];\n        break;\n\n      default:\n        break;\n    }\n    return arrCategories;\n  };\n\n  const onReplace = async (id, typeCategory) => {\n    const response = await dispatch(\n      updateTaskOperation({\n        taskId: id,\n        updateTaskData: { category: typeCategory },\n      })\n    );\n\n    if (response.payload.status) {\n      Notify.failure('Task don`t replace. Try again');\n      return;\n    }\n\n    const filteredTasks = tasks\n      ? tasks.map(task => {\n          if (task._id === id) {\n            return { ...task, category: typeCategory };\n          }\n          return task;\n        })\n      : [];\n\n    setTasks(filteredTasks);\n  };\n  return (\n    <ContainerReplaceTask id=\"popUpReplace\">\n      {viewCategories(type).map(({ id, typeCategory, typeForOnClick }) => (\n        <ReplaceTaskContainerText\n          key={id}\n          onClick={() => onReplace(_id, typeForOnClick)}\n        >\n          <ReplaceTaskText>{typeCategory}</ReplaceTaskText>\n          <IconTask>\n            <use xlinkHref={sprite + '#icon-arrow-circle-broken-right'} />\n          </IconTask>\n        </ReplaceTaskContainerText>\n      ))}\n    </ContainerReplaceTask>\n  );\n};\n\nexport default PopUpReplace;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectTasksState = state => state.tasks;\nconst selectTasks = state => state.tasks.tasks;\nconst selectTasksError = state => state.tasks.error;\nconst selectIsTasksLoading = state => state.tasks.isTasksLoading;\nconst selectIsFetchingTasks = state => state.tasks.isFetchingTasks;\nconst selectIsAdding = state => state.tasks.isAdding;\nconst selectIsDeleting = state => state.tasks.isDeleting;\nconst selectIsUpdating = state => state.tasks.isUpdating;\nconst selectCurrentTaskId = state => state.tasks.currentTaskId;\n\nconst selectTaskOperations = createSelector(\n  [selectIsFetchingTasks, selectIsAdding, selectIsDeleting, selectIsUpdating],\n  (isFetchingTasks, isAdding, isDeleting, isUpdating) => ({\n    isFetchingTasks,\n    isAdding,\n    isDeleting,\n    isUpdating,\n  })\n);\n\nexport {\n  selectTasks,\n  selectCurrentTaskId,\n  selectTasksError,\n  selectIsAdding,\n  selectIsDeleting,\n  selectIsTasksLoading,\n  selectIsUpdating,\n  selectIsFetchingTasks,\n  selectTaskOperations,\n  selectTasksState,\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { min, tablet } from 'styles/media';\n\n\nexport const FormContainer = styled.div`\n    position: relative;\n    width: 303px;\n    padding: 48px 18px 40px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.8);\n    background-color: var(--task-popup-bg);\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n    ${min(tablet)} {\n        width: 396px;\n        padding: 40px 28px;\n    }\n`;\n\nexport const CloseButton = styled.button`\n    position: absolute;\n    top: 14px;\n    right: 14px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n`;\n\nexport const CloseIcon = styled.svg`\n    width: 24px;\n    height: 24px;\n    stroke: rgba(17, 17, 17, 0.1);\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    color: rgba(52, 52, 52, 1);\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.16;\n`;\n\nexport const TitleField = styled(Field)`\n    width: 267px;\n    height: 42px;\n    flex-shrink: 0;\n    padding: 12px 14px;\n    margin-bottom: 16px;\n    border-radius: 8px;\n    border: none;\n    background-color: rgba(246, 246, 246, 1);\n    color: rgba(52, 52, 52, 1);\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.28;\n    cursor: pointer;\n\n    ${min(tablet)} {\n        height: 46px;\n        width: 340px;\n        padding: 14px 18px;\n        margin-bottom: 18px;\n    }\n\n    &::placeholder {\n        opacity: 1;\n        color: var(--task-popup-color-text);\n        font-size: 14px;\n        line-height: 1.28;\n    }\n`;\n\nexport const FieldContainer = styled.div`\n    display: flex;\n    gap: 14px;\n`;\n\nexport const TimeField = styled(Field)`\n    width: 126px;\n    height: 42px;\n    flex-shrink: 0;\n    padding: 12px 14px;\n    margin-bottom: 16px;\n    border-radius: 8px;\n    border: none;\n    background-color: rgba(246, 246, 246, 1);\n    color: rgba(52, 52, 52, 1);\n    font-size: 14px;\n    line-height: 1.28;\n    &::-webkit-calendar-picker-indicator {\n    opacity: 0;\n    cursor: pointer;\n    width: 32px;\n}\n\n    ${min(tablet)} {\n        width: 163px;\n        height: 46px;\n        padding: 14px 18px;\n        margin-bottom: 32px;\n        &::-webkit-calendar-picker-indicator {\n        width: 60px;\n    }\n}\n`;\n\nexport const PriorityContainer = styled.div`\n    display: flex;\n    gap: 16px;\n    margin-bottom: 32px;\n`;\n\nexport const PriorityLabel = styled.label`\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    color: rgba(52, 52, 52, 1);\n    font-size: 12px;\n    line-height: 1.16;\n\n    ${min(tablet)} {\n        font-size: 14px;\n        line-height: 1.16;\n    }\n`;\n\nexport const PriorityField = styled(Field)`\n    opacity: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    cursor: pointer;\n`;\n\nexport const Blue = styled.svg`\n    width: 10px;\n    height: 10px;\n`;\nexport const BlueLine = styled.svg`\n    width: 10px;\n    height: 10px;\n`;\n\nexport const Orange = styled.svg`\n    width: 10px;\n    height: 10px;\n`;\n\nexport const OrangeLine = styled.svg`\n    width: 10px;\n    height: 10px;\n`;\n\nexport const Red = styled.svg`\n    width: 10px;\n    height: 10px;\n`;\n\nexport const RedLine = styled.svg`\n    width: 10px;\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    gap: 14px;\n`;\n\nexport const OperationButton = styled.button`\n    display: flex;\n    width: 135px;\n    height: 42px;\n    padding: 8px 20px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 8px;\n    border: none;\n    background: var(--accent-color);\n    color: var(--invert-text-color);\n    text-align: center;\n    font-size: 14px;\n    line-height: 1.28;\n    transition: background-color 250ms linear;\n\n&:hover,\n&:focus {\n    background-color: var(--btn-bg-hover);\n}\n\n${min(tablet)} {\n    width: 182px;\n    height: 48px;\n    padding: 10px 20px;;\n    }\n`;\n\nexport const AddIcon = styled.svg`\n    width: 20px;\n    height: 20px;\n`;\n\nexport const EditIcon = styled.svg`\n    width: 18px;\n    height: 18px;\n`;\n\nexport const CancelButton = styled.button`\n    width: 118px;\n    height: 42px;\n    padding: 10px 20px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 8px;\n    border: none;\n    background: var(--btn-bg-color);\n    color: var(--primary-text-color);\n    text-align: center;\n    font-size: 14px;\n    line-height: 1.28;\n    transition: background-color 250ms linear;\n\n&:hover,\n&:focus {\n    background-color: var(--btn-text-color);\n}\n\n${min(tablet)} {\n    width: 144px;\n    height: 48px;\n    }\n`;","import React, { useState, useEffect } from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport icons from '../../../assets/images/icons/icons.svg';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport { addTaskOperation, updateTaskOperation } from '../../../redux/tasks/operations';\nimport { selectTasks } from '../../../redux/tasks/selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {  \n    OperationButton,\n    AddIcon,\n    Blue,\n    BlueLine,\n    ButtonContainer,\n    CancelButton,\n    CloseButton,\n    CloseIcon,\n    EditIcon,\n    FieldContainer,\n    FormContainer,\n    Label,\n    Orange,\n    OrangeLine,\n    PriorityContainer,\n    PriorityField,\n    PriorityLabel,\n    Red,\n    RedLine,\n    TimeField,\n    TitleField, } from './TaskForm.styled';\n\nconst taskFormSchema = Yup.object().shape({\n    title: Yup.string('Enter title')\n        .max(250, 'Text must be at most 250characters')\n        .required('Title is required'),\n    start: Yup.string('Enter start')\n        .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid start time')\n        .required('Start time is required'),\n    end: Yup.string()\n        .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, 'Invalid end time')\n        .when('start', (start, schema) =>\n        schema.test({\n            test: function (end) {\n                if (!start || !end) return true;\n            return end > start;\n            },\n            message: 'End time must be greater than start time',\n        })\n        )\n        .required('End time is required'),\n    priority: Yup.string()\n        .oneOf(['low', 'medium', 'high'])\n        .required('Priority is required'),\n        date: Yup.string()\n        .matches(/^\\d{4}-\\d{2}-\\d{2}$/, 'Invalid date format')\n        .required('Date is required'),\n    category: Yup.string()\n        .oneOf(['to-do', 'in-progress', 'done'], 'Invalid category')\n        .required('Category is required'),\n    });\n\nexport const TaskForm = ({ category = 'to-do', task, onClose = () => {} }) => {\n  const [operation, setOperation] = useState('create');\n  const [title, setTitle] = useState(task?.title || '');\n  const [start, setStart] = useState(task?.start || '');\n  const [end, setEnd] = useState(task?.end || '');\n  const [priority, setPriority] = useState(task?.priority || 'low');\n  const dispatch = useDispatch();\n  const date = useSelector(selectTasks);\n\n  const initialValues = {\n    title: '',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: date,\n    category,\n  };\n\n  useEffect(() => {\n    if (task?._id) setOperation('edit');\n  }, [task]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        return;\n      case 'start':\n        setStart(value);\n        return;\n      case 'end':\n        setEnd(value);\n        return;\n      case 'priority':\n        setPriority(value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = values => {\n    values.preventDefault();\n\n    const payload = {\n      taskId: task?._id,\n      updateTaskData: {\n        title: title,\n        start: start,\n        end: end,\n        priority: priority,\n        date: task?.date || moment().format('YYYY-MM-DD'),\n        category: category,\n      },\n    };\n\n    if (operation === 'edit') {\n      dispatch(updateTaskOperation(payload))\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.info('Task has been edited.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    } else {\n      dispatch(addTaskOperation({ ...values, date, category }))\n        .then(data => {\n          if (data.error) {\n            throw new Error(data.payload);\n          }\n          Notify.success('Task has been successfully created.');\n          onClose();\n        })\n        .catch(error => {\n          Notify.failure('Something went wrong.');\n        });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={task || initialValues}\n      validationSchema={taskFormSchema}\n      // onSubmit={values => {\n      // handleSubmit(values);\n      // }}\n    >\n      {({ values }) => (\n        <FormContainer>\n          <CloseButton\n            type=\"button\"\n            aria-label=\"close button\"\n            onClick={onClose}\n          >\n            <CloseIcon>\n              <use href={icons + '#icon-x-close'}></use>\n            </CloseIcon>\n          </CloseButton>\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              Title\n              <ErrorMessage name=\"title\" component=\"div\" />\n              <TitleField\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Enter text\"\n                value={title}\n                onChange={handleChange}\n              />\n            </Label>\n\n            <FieldContainer>\n              <Label>\n                Start\n                <ErrorMessage name=\"start\" component=\"div\" />\n                <TimeField\n                  type=\"time\"\n                  name=\"start\"\n                  value={start}\n                  onChange={handleChange}\n                />\n              </Label>\n              <Label>\n                End\n                <ErrorMessage name=\"end\" component=\"div\" />\n                <TimeField\n                  type=\"time\"\n                  name=\"end\"\n                  value={end}\n                  onChange={handleChange}\n                />\n              </Label>\n            </FieldContainer>\n\n            <PriorityContainer role=\"group\">\n              <PriorityLabel>\n                <PriorityField\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"low\"\n                  onChange={handleChange}\n                />\n                {values.priority === 'low' ? (\n                  <BlueLine>\n                    <use href={icons + '#icon-ellipse-blue-stroke'}></use>\n                  </BlueLine>\n                ) : (\n                  <Blue>\n                    <use href={icons + '#icon-ellipse-blue'}></use>\n                  </Blue>\n                )}\n                Low\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"medium\"\n                  onChange={handleChange}\n                />\n                {values.priority === 'medium' ? (\n                  <OrangeLine>\n                    <use href={icons + '#icon-ellipse-orange-stroke'}></use>\n                  </OrangeLine>\n                ) : (\n                  <Orange>\n                    <use href={icons + '#icon-ellipse-orange'}></use>\n                  </Orange>\n                )}\n                Medium\n              </PriorityLabel>\n              <PriorityLabel>\n                <PriorityField\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"high\"\n                  onChange={handleChange}\n                />\n                {values.priority === 'high' ? (\n                  <RedLine>\n                    <use href={icons + '#icon-ellipse-pink-stroke'}></use>\n                  </RedLine>\n                ) : (\n                  <Red>\n                    <use href={icons + '#icon-ellipse-pink'}></use>\n                  </Red>\n                )}\n                High\n              </PriorityLabel>\n            </PriorityContainer>\n\n            <ButtonContainer>\n              {operation === 'edit' ? (\n                <OperationButton type=\"submit\">\n                  <EditIcon stroke=\"#fff\" fill=\"none\">\n                    <use href={icons + '#icon-pencil'}></use>\n                  </EditIcon>\n                  Edit\n                </OperationButton>\n              ) : (\n                <OperationButton type=\"submit\">\n                  <AddIcon stroke=\"#fff\">\n                    <use href={icons + '#icon-plus'}></use>\n                  </AddIcon>\n                  Add\n                </OperationButton>\n              )}\n\n              <CancelButton type=\"button\" onClick={onClose}>\n                Cancel\n              </CancelButton>\n            </ButtonContainer>\n          </Form>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};","import React from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { TaskForm } from './TaskForm/TaskForm';\n\nexport const TaskModal = ({ category, task, onClose, isOpen }) => {\n  const closeButtonPosition = { top: '16px', right: '16px' };\n\n  return (\n    <Modal\n      onClose={onClose}\n      isOpen={isOpen}\n      closeButtonPosition={closeButtonPosition}\n    >\n      <TaskForm onClose={onClose} category={category} task={task} />\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  ContainerButtonsTask,\n  ContainerIcons,\n  IconTask,\n  ListTasks,\n  Task,\n  TaskButtonPriority,\n  TaskImage,\n  TaskImagePlug,\n  TaskTitle,\n} from './Tasks.styled';\nimport PopUpReplace from '../PopUpReplace/PopUpReplace';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTaskOperation } from 'redux/tasks/operations';\n\nimport sprite from '../../../../assets/images/icons/icons.svg';\nimport { selectUserAvatar } from 'redux/auth/selectors';\nimport { Notify } from 'notiflix';\nimport { TaskModal } from 'components/TaskModal/TaskModal';\n\nconst Tasks = ({ type, tasks, setTasks }) => {\n  const dispatch = useDispatch();\n  const [isShowPopUpReplace, setIsShowPopUpReplace] = useState(false);\n  const avatarURL = useSelector(selectUserAvatar);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [taskForForm, setTaskForForm] = useState({});\n\n  const toggleShowPopUpReplace = id => {\n    isShowPopUpReplace === id\n      ? setIsShowPopUpReplace(false)\n      : setIsShowPopUpReplace(id);\n  };\n\n  const onEdit = task => {\n    setTaskForForm(task);\n    setIsFormOpen(true);\n  };\n\n  const onDelete = async taskId => {\n    const response = await dispatch(deleteTaskOperation(taskId));\n    if (response.payload.status) {\n      Notify.failure('Task don`t delete. Try again');\n      return;\n    }\n    const filteredTasks = tasks\n      ? tasks.filter(({ _id }) => _id !== taskId)\n      : [];\n    setTasks(filteredTasks);\n    Notify.success('Task deleted successfully');\n  };\n\n  const closeForm = () => {\n    setTaskForForm({});\n    setIsFormOpen(false);\n  };\n\n  return (\n    <ListTasks tasks={tasks.filter(({ category }) => category === type)}>\n      {tasks.map(task => {\n        const { _id, title, priority, category } = task;\n        if (type !== category) {\n          return '';\n        }\n        return (\n          <Task key={_id}>\n            <TaskTitle>{title}</TaskTitle>\n            <ContainerButtonsTask>\n              {avatarURL ? (\n                <TaskImage src={avatarURL} alt=\"User avatar\" />\n              ) : (\n                <TaskImagePlug>\n                  <use href={`${sprite}#icon-ph_user`}></use>\n                </TaskImagePlug>\n              )}\n              <TaskButtonPriority priority={priority}>\n                {priority.charAt(0).toUpperCase() + priority.slice(1)}\n              </TaskButtonPriority>\n              <ContainerIcons>\n                <IconTask\n                  id=\"togglePopUp\"\n                  onClick={() => toggleShowPopUpReplace(_id)}\n                >\n                  <use\n                    id=\"togglePopUp\"\n                    xlinkHref={sprite + '#icon-arrow-circle-broken-right'}\n                  />\n                </IconTask>\n                <IconTask onClick={() => onEdit(task)}>\n                  <use xlinkHref={sprite + '#icon-pencil'} />\n                </IconTask>\n                <IconTask onClick={() => onDelete(_id)}>\n                  <use xlinkHref={sprite + '#icon-trash'} />\n                </IconTask>\n              </ContainerIcons>\n            </ContainerButtonsTask>\n            {isShowPopUpReplace === _id && (\n              <PopUpReplace\n                type={type}\n                tasks={tasks}\n                setTasks={setTasks}\n                setIsShowPopUpReplace={setIsShowPopUpReplace}\n                _id={_id}\n              ></PopUpReplace>\n            )}\n            {isFormOpen && (\n              <TaskModal\n                isOpen={isFormOpen}\n                onClose={closeForm}\n                category={category}\n                task={taskForForm}\n              />\n            )}\n          </Task>\n        );\n      })}\n    </ListTasks>\n  );\n};\n\nexport default Tasks;\n","import styled from '@emotion/styled';\n\nexport const HeadContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  border: 1px solid var(--calendar-grid-border);\n  border-radius: 8px;\n  margin-bottom: 14px;\n  overflow: hidden;\n\n  & div:nth-of-type(${({ isSelected }) => isSelected + 1}) {\n    & div {\n      color: #ffffff;\n      background-color: #3e85f3;\n      border-radius: 6px;\n    }\n  }\n`;\n\nexport const HeadCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: var(--cell-background);\n\n  & div {\n    color: #343434;\n    background-color: var(--cell-background);\n\n    border-radius: 6px;\n    transition: all cubic-bezier(0.165, 0.84, 0.44, 1) 0.2s;\n  }\n\n  padding: 16px 0;\n  cursor: pointer;\n  &:hover {\n    & div {\n      opacity: 1;\n      color: #ffffff;\n      background-color: #3e85f3;\n    }\n  }\n`;\n\nexport const NameWeek = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const DayWeekContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 700;\n  width: 20px;\n  height: 22px;\n`;\nexport const DayWeekText = styled.span``;\n","import { useMediaQuery } from 'react-responsive';\nimport moment from 'moment';\nimport {\n  DayWeekContainer,\n  DayWeekText,\n  HeadCell,\n  HeadContainer,\n  NameWeek,\n} from './Head.styled';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { setDay } from 'helpers/setDay';\n\nconst Head = () => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const [isSelected, setIsSelected] = useState('');\n\n  const { currentDay } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const currentDaySlice = currentDay.split('-').slice(2).join('');\n    [...Array(7)].map((_, idx) => {\n      const dayIdx = setDay(currentDay)\n        .startWeek.day(idx + 1)\n        .format('DD');\n      if (dayIdx === currentDaySlice) {\n        setIsSelected(idx);\n      }\n      return null;\n    });\n  }, [currentDay]);\n\n  const onChangeDay = date => {\n    const formatDate = date.format('YYYY-MM-DD');\n    localStorage.setItem('date', formatDate);\n    navigate('././', { relative: `${formatDate}` });\n  };\n\n  return (\n    <HeadContainer isSelected={isSelected}>\n      {[...Array(7)].map((_, idx) => (\n        <HeadCell\n          onClick={() => onChangeDay(moment(currentDay).day(idx + 1))}\n          key={idx}\n        >\n          <NameWeek>\n            {isMobile\n              ? moment()\n                  .day(idx + 1)\n                  .format('ddd')\n                  .charAt(0)\n              : moment()\n                  .day(idx + 1)\n                  .format('ddd')}\n          </NameWeek>\n          <DayWeekContainer>\n            <DayWeekText>\n              {setDay(currentDay)\n                .startWeek.day(idx + 1)\n                .format('D')}\n            </DayWeekText>\n          </DayWeekContainer>\n        </HeadCell>\n      ))}\n    </HeadContainer>\n  );\n};\n\nexport default Head;\n","import {\n  ButtonAddTask,\n  ButtonAddTaskText,\n  ContainerButtonAddTask,\n  ContainerMain,\n  ContainerSecond,\n  IconButtonAddTask,\n} from './ChoosedDay.styled';\n\nimport sprite from '../../../assets/images/icons/icons.svg';\nimport Title from './Title/Title';\nimport Tasks from './Tasks/Tasks';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasksOperation } from 'redux/tasks/operations';\nimport { useParams } from 'react-router-dom';\nimport Head from './Head/Head';\nimport { TaskModal } from 'components/TaskModal/TaskModal';\nimport { selectIsUpdating } from 'redux/tasks/selectors';\nimport moment from 'moment';\n\nconst categories = [\n  { id: 1, type: 'to-do' },\n  { id: 2, type: 'in-progress' },\n  { id: 3, type: 'done' },\n];\n\nconst ChoosedDay = () => {\n  const [tasks, setTasks] = useState([]);\n  const { currentDay } = useParams();\n  const dispatch = useDispatch();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  const isEditTask = useSelector(selectIsUpdating);\n\n  useEffect(() => {\n    (async () => {\n      const currentMonth = moment(currentDay).format('YYYY-MM');\n\n      const { payload } = await dispatch(fetchTasksOperation(currentMonth));\n\n      const filteredTasks = payload\n        ? payload\n            .filter(({ date }) => date === currentDay)\n            .sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt))\n        : [];\n      setTasks(filteredTasks);\n    })();\n  }, [currentDay, dispatch, isEditTask]);\n\n  const onAdd = () => {\n    setIsFormOpen(true);\n  };\n\n  const closeForm = () => {\n    setIsFormOpen(false);\n  };\n\n  return (\n    <>\n      <Head />\n      <ContainerMain>\n        {categories.map(({ id, type }) => (\n          <ContainerSecond key={id}>\n            <Title\n              type={type}\n              onAdd={onAdd}\n              tasks={tasks.filter(({ category }) => category === type)}\n            />\n            <Tasks type={type} tasks={tasks} setTasks={setTasks} />\n            <ContainerButtonAddTask>\n              <ButtonAddTask onClick={onAdd}>\n                <IconButtonAddTask>\n                  <use xlinkHref={sprite + '#icon-plus'} />\n                </IconButtonAddTask>\n                <ButtonAddTaskText>Add task</ButtonAddTaskText>\n              </ButtonAddTask>\n            </ContainerButtonAddTask>\n            {isFormOpen && (\n              <TaskModal\n                isOpen={isFormOpen}\n                onClose={closeForm}\n                category={type}\n              />\n            )}\n          </ContainerSecond>\n        ))}\n      </ContainerMain>\n    </>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from '@emotion/styled';\nimport { mobile, max } from 'styles/media';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--primary-bg-color);\n  border: 1px solid #dce3e5cc;\n  border-radius: 8px;\n  box-shadow: 0px 4px 57px 0px rgba(17, 17, 17, 0.05);\n  z-index: 1000;\n  ${max(mobile)} {\n    width: 100%;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  z-index: 999;\n`;\n\nexport const Content = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 24px;\n  padding: 0;\n`;\n\nexport const IconClose = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--input-border-color-focus);\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    stroke: #84828a;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Backdrop, Container, IconClose, CloseButton } from './Modal.styled';\nimport sprite from '../../assets/images/icons/icons.svg';\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  closeButtonPosition = { top: '14px', right: '14px' },\n  children,\n}) => {\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscKeyPress = event => {\n      if (isOpen && event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n    window.addEventListener('keydown', handleEscKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyPress);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Container id=\"modal-container\">\n        <CloseButton onClick={onClose} style={closeButtonPosition}>\n          <IconClose>\n            <use xlinkHref={`${sprite}#icon-x-close`} width={24} height={24} />\n          </IconClose>\n        </CloseButton>\n\n        {children}\n      </Container>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n};\n\nexport default Modal;\n","import moment from 'moment';\n\nexport const setDay = day => {\n  moment.updateLocale('en', { week: { dow: 1 } });\n  let currentDay;\n  if (!day) {\n    currentDay = moment();\n  } else {\n    currentDay = moment(day).clone();\n  }\n  const startMonth = currentDay.clone().startOf('month'); // початок поточного місяця\n  const endMonth = currentDay.clone().endOf('month'); // кінець поточного місяця\n\n  const startDay = startMonth.clone().startOf('week'); // перший день тижня, в якому починається поточний місяць\n  const endDay = endMonth.clone().endOf('week'); // останній день тижня, в якому закінчується поточний місяць\n\n  const startWeek = currentDay.clone().startOf('week'); // перший день тижня, якому знаходиться обрана дата\n  const endWeek = currentDay.clone().endOf('week'); // останній  день тижня, якому знаходиться обрана дата\n\n  const dayDifference = endDay.diff(startDay, 'days') + 1; // кількість днів, що відображаються на календарі (ячейки)\n  const weeks = dayDifference / 7; //кількість тижнів в місяці (рядки)\n\n  const startCalendar = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(dayDifference)].map(() =>\n    startCalendar.add(1, 'day').clone()\n  );\n\n  const dates = {\n    startMonth,\n    endMonth,\n    startDay,\n    endDay,\n    startWeek,\n    endWeek,\n    dayDifference,\n    weeks,\n    daysArray,\n  };\n  return dates;\n};\n"],"names":["ContainerMain","styled","min","tablet","desktop","ContainerSecond","ContainerButtonAddTask","ButtonAddTask","IconButtonAddTask","ButtonAddTaskText","ContainerTitle","tasks","length","MainTitle","IconAddTask","type","onAdd","onClick","xlinkHref","sprite","ListTasks","Task","TaskTitle","ContainerButtonsTask","TaskImage","TaskImagePlug","TaskButtonPriority","priority","ContainerIcons","IconTask","ContainerReplaceTask","ReplaceTaskContainerText","ReplaceTaskText","setTasks","setIsShowPopUpReplace","_id","dispatch","useDispatch","useEffect","onClickClose","target","id","onEscClose","code","document","addEventListener","removeEventListener","onReplace","typeCategory","updateTaskOperation","taskId","updateTaskData","category","payload","status","Notify","filteredTasks","map","task","arrCategories","typeForOnClick","viewCategories","selectTasks","state","selectIsUpdating","isUpdating","createSelector","isFetchingTasks","isAdding","isDeleting","FormContainer","CloseButton","CloseIcon","Label","TitleField","Field","FieldContainer","TimeField","PriorityContainer","PriorityLabel","PriorityField","Blue","BlueLine","Orange","OrangeLine","Red","RedLine","ButtonContainer","OperationButton","AddIcon","EditIcon","CancelButton","taskFormSchema","Yup","shape","title","max","required","start","matches","end","when","schema","test","message","oneOf","date","TaskForm","onClose","useState","operation","setOperation","setTitle","setStart","setEnd","setPriority","useSelector","initialValues","handleChange","name","value","handleSubmit","values","preventDefault","moment","format","then","data","error","Error","catch","addTaskOperation","validationSchema","href","icons","onSubmit","component","placeholder","onChange","role","stroke","fill","TaskModal","isOpen","Modal","closeButtonPosition","top","right","isShowPopUpReplace","avatarURL","selectUserAvatar","isFormOpen","setIsFormOpen","taskForForm","setTaskForForm","onDelete","deleteTaskOperation","filter","closeForm","src","alt","charAt","toUpperCase","slice","onEdit","HeadContainer","isSelected","HeadCell","NameWeek","DayWeekContainer","DayWeekText","isMobile","useMediaQuery","maxWidth","setIsSelected","currentDay","useParams","navigate","useNavigate","currentDaySlice","split","join","Array","_","idx","setDay","startWeek","day","formatDate","localStorage","setItem","relative","onChangeDay","categories","isEditTask","currentMonth","fetchTasksOperation","sort","a","b","Date","updatedAt","Container","mobile","Backdrop","IconClose","children","handleEscKeyPress","event","key","body","style","overflow","window","ReactDOM","currentTarget","width","height","getElementById","week","dow","startMonth","clone","startOf","endMonth","endOf","startDay","endDay","endWeek","dayDifference","diff","weeks","startCalendar","subtract","daysArray","add"],"sourceRoot":""}